{"/home/travis/build/npmtest/node-npmtest-x11/test.js":"/* istanbul instrument in package npmtest_x11 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-x11/lib.npmtest_x11.js":"/* istanbul instrument in package npmtest_x11 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_x11 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_x11 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-x11/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-x11 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_x11 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_x11\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_x11.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_x11.rollup.js'] =\n            local.assetsDict['/assets.npmtest_x11.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_x11.__dirname + '/lib.npmtest_x11.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/index.js":"var core = require('./xcore');\nvar em = require('./eventmask').eventMask;\nvar server = require('./xserver');\n\nmodule.exports.createClient = core.createClient;\nmodule.exports.createServer = server.createServer;\nmodule.exports.eventMask = em;\n\nObject.defineProperty(module.exports, 'keySyms', {\n  enumerable: true,\n  get: function() { return require('./keysyms'); }\n});\n\n//TODO:\n// keepe everything in namespace for consistensy (eventMask, keySyms, class, destination ...\n// or put most used constants to top namespace? (currently class and destination in top) \n\n// basic constants\n\n// class\nmodule.exports.CopyFromParent = 0;\nmodule.exports.InputOutput = 1;\nmodule.exports.InputOnly = 2;\n\n// destination \nmodule.exports.PointerWindow = 0;\nmodule.exports.InputFocus = 1;\n\n\n// TODO\nmodule.exports.bitGravity = {\n};\n\nmodule.exports.winGravity = {\n};\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/xcore.js":"var util = require('util'); // util.inherits\nvar net = require('net');\n\nvar handshake = require('./handshake');\n//var xevents = require('./xevents');\n\nvar EventEmitter = require('events').EventEmitter;\nvar PackStream = require('./unpackstream');\nvar coreRequestsTemplate = require('./corereqs');\nvar hexy = require('./hexy').hexy;\n\nvar Buffer = require('buffer').Buffer;\n// add 'unpack' method for buffer\nrequire('./unpackbuffer').addUnpack(Buffer);\n\nvar os = require('os');\n\nvar xerrors = require('./xerrors');\nvar coreRequests = require('./corereqs');\nvar stdatoms = require('./stdatoms');\nvar em = require('./eventmask').eventMask;\n\nfunction XClient(displayNum, screenNum, options)\n{\n    EventEmitter.call(this);\n    this.options = options ? options : {};\n\n    // TODO: this is probably not used\n    this.core_requests = {};\n    this.ext_requests = {};\n\n    this.displayNum = displayNum;\n    this.screenNum = screenNum;\n}\nutil.inherits(XClient, EventEmitter);\n\nXClient.prototype.init = function(stream)\n{\n    this.stream = stream;\n\n    this.authHost = stream.remoteAddress;\n    // Node v0.10.x does not have stream.remoteFamily, so dig in to find it\n    this.authFamily = stream._getpeername ? stream._getpeername().family : stream.remoteFamily;\n    if (!this.authHost || this.authHost === '127.0.0.1' || this.authHost === '::1') {\n      this.authHost = os.hostname();\n      this.authFamily = null;\n    }\n\n    var pack_stream = new PackStream();\n\n    // data received from stream is dispached to\n    // read requests set by calls to .unpack and .unpackTo\n    //stream.pipe(pack_stream);\n\n    // pack_stream write requests are buffered and\n    // flushed to stream as result of call to .flush\n    // TODO: listen for drain event and flush automatically\n    //pack_stream.pipe(stream);\n    var client = this;\n    pack_stream.on('data', function( data ) {\n        //console.error(hexy(data, {prefix: 'from packer '}));\n        //for (var i=0; i < data.length; ++i)\n        //   console.log('<<< ' + data[i]);\n        stream.write(data);\n    });\n    stream.on('data', function( data ) {\n        //console.error(hexy(data, {prefix: 'to unpacker '}));\n        //for (var i=0; i < data.length; ++i)\n        //   console.log('>>> ' + data[i]);\n        pack_stream.write(data);\n    });\n    stream.on('end', function() {\n        client.emit('end');\n    });\n\n    this.pack_stream = pack_stream;\n\n    this.rsrc_id = 0; // generated for each new resource\n    var cli = this;\n    if (cli.options.debug) {\n      this.seq_num_ = 0;\n      this.seq2stack = {}; // debug: map seq_num to stack at the moment request was issued\n      Object.defineProperty(cli, \"seq_num\", {\n        set : function(v) {\n          cli.seq_num_ = v;\n          var err = new Error();\n          Error.captureStackTrace(err, arguments.callee);\n          err.timestamp = Date.now();\n          cli.seq2stack[client.seq_num] = err;\n        },\n        get: function() {\n\t  return cli.seq_num_;\n        }\n      });\n    } else {\n      this.seq_num = 0;\n    }\n\n\n    // in/out packets indexed by sequence ID\n    this.replies = {};\n    this.atoms = stdatoms;\n    this.atom_names = (function() {\n        var names = {};\n        Object.keys(stdatoms).forEach(function(key) {\n            names[stdatoms[key]] = key;\n        });\n\n        return names;\n    })();\n\n    this.eventMask = em;\n\n    this.event_consumers = {}; // maps window id to eventemitter TODO: bad name\n    this.eventParsers = {};\n    this.errorParsers = {};\n    this._extensions = {};\n\n    this.importRequestsFromTemplates(this, coreRequests);\n\n    this.startHandshake();\n    this._closing = false;\n    this._unusedIds = [];\n}\n\n// TODO: close() = set 'closing' flag, watch it in replies and writeQueue, terminate if empty\nXClient.prototype.terminate = function()\n{\n    this.stream.end();\n}\n\n// GetAtomName used as cheapest non-modifying request with reply\n// 3 - id for shortest standard atom, \"ARC\"\nXClient.prototype.ping = function(cb) {\n   var start = Date.now();\n   this.GetAtomName(3, function(err, str) {\n      if (err) return cb(err);\n      return cb(null, Date.now() - start);\n   });\n}\n\nXClient.prototype.close = function(cb) {\n    var cli = this;\n    cli.ping(function(err) {\n      if (err) return cb(err);\n      cli.terminate();\n      if (cb) cb();\n    });\n    cli._closing = true;\n}\n\nXClient.prototype.importRequestsFromTemplates = function(target, reqs)\n{\n    var client = this;\n    this.pending_atoms = {};\n    for (var r in reqs)\n    {\n        // r is request name\n        target[r] = (function(reqName) {\n\n            var reqFunc = function req_proxy() {\n\n            if (client._closing)\n               throw new Error('client is in closing state');\n\n            // simple overflow handling (this means that currently there is no way to have more than 65535 requests in the queue\n            // TODO: edge cases testing\n            if (client.seq_num == 65535)\n               client.seq_num = 0;\n            else\n               client.seq_num++;\n\n            // is it fast?\n            var args = Array.prototype.slice.call(req_proxy.arguments);\n\n            var callback = args.length > 0 ? args[args.length - 1] : null;\n            if (callback && callback.constructor.name != 'Function')\n                callback = null;\n\n            // TODO: see how much we can calculate in advance (not in each request)\n            var reqReplTemplate = reqs[reqName];\n            var reqTemplate  = reqReplTemplate[0];\n            var templateType = typeof reqTemplate;\n\n            if (templateType == 'object')\n                templateType = reqTemplate.constructor.name;\n\n            if (templateType == 'function')\n            {\n                 if (reqName === 'InternAtom') {\n                     var value = req_proxy.arguments[1];\n                     if (client.atoms[value]) {\n                         -- client.seq_num;\n                         return setImmediate(function() {\n                             callback(undefined, client.atoms[value]);\n                         });\n                     } else {\n                         client.pending_atoms[client.seq_num] = value;\n                     }\n                 }\n\n                 // call template with input arguments (not including callback which is last argument TODO currently with callback. won't hurt)\n                 //reqPack = reqTemplate.call(args);\n                 var reqPack = reqTemplate.apply(this, req_proxy.arguments);\n                 var format = reqPack[0];\n                 var requestArguments = reqPack[1];\n\n                 if (callback)\n                     this.replies[this.seq_num] = [reqReplTemplate[1], callback];\n\n                 client.pack_stream.pack(format, requestArguments);\n                 var b = client.pack_stream.write_queue[0];\n                 client.pack_stream.flush();\n\n            } else if (templateType == 'Array'){\n                 if (reqName === 'GetAtomName') {\n                     var atom = req_proxy.arguments[0];\n                     if (client.atom_names[atom]) {\n                         -- client.seq_num;\n                         return setImmediate(function() {\n                             callback(undefined, client.atom_names[atom]);\n                         });\n                     } else {\n                         client.pending_atoms[client.seq_num] = atom;\n                     }\n                 }\n\n                 var format = reqTemplate[0];\n                 var requestArguments = [];\n\n                 for (var a = 0; a < reqTemplate[1].length; ++a)\n                     requestArguments.push(reqTemplate[1][a]);\n                 for (var a in args)\n                     requestArguments.push(args[a]);\n\n                 if (callback)\n                     this.replies[this.seq_num] = [reqReplTemplate[1], callback];\n\n                 client.pack_stream.pack(format, requestArguments);\n                 client.pack_stream.flush();\n            } else {\n                 throw 'unknown request format - ' + templateType;\n            }\n        }\n        return reqFunc;\n        })(r);\n    }\n}\n\nXClient.prototype.AllocID = function()\n{\n  if (this._unusedIds.length > 0) {\n    return this._unusedIds.pop();\n  }\n  // TODO: handle overflow (XCMiscGetXIDRange from XC_MISC ext)\n  this.display.rsrc_id++;\n  return (this.display.rsrc_id << this.display.rsrc_shift) + this.display.resource_base;\n};\n\nXClient.prototype.ReleaseID = function(id) {\n  this._unusedIds.push(id);\n};\n\n// TODO: move core events unpackers to corereqs.js\nXClient.prototype.unpackEvent = function(type, seq, extra, code, raw, headerBuf)\n{\n    var event = {}; // TODO: constructor & base functions\n    // Remove the most significant bit. See Chapter 1, Event Format section in X11 protocol\n    // specification\n    type = type & 0x7F;\n    event.type = type;\n    event.seq = seq;\n\n    var extUnpacker = this.eventParsers[type];\n    if (extUnpacker)\n    {\n        return extUnpacker(type, seq, extra, code, raw);\n    }\n\n    if (type == 2 || type == 3 || type == 4 || type == 5 || type == 6) { // motion event\n        var values = raw.unpack('LLLssssSC');\n        //event.raw = values;\n        // TODO: use unpackTo???\n        event.name = [,,'KeyPress', 'KeyRelease', 'ButtonPress', 'ButtonRelease', 'MotionNotify'][type]\n        event.time = extra;\n        event.keycode = code;\n        event.root = values[0];\n        event.wid = values[1];\n        event.child = values[2];\n        event.rootx = values[3];\n        event.rooty = values[4];\n        event.x = values[5];\n        event.y = values[6];\n        event.buttons = values[7];\n        event.sameScreen = values[8];\n    } else if (type == 7 || type == 8) { //EnterNotify || LeaveNotify\n        event.name = type === 7 ? 'EnterNotify' : 'LeaveNotify';\n        var values = raw.unpack('LLLssssSC');\n        event.root = values[0]\n        event.wid = values[1]\n        event.child = values[2];\n        event.rootx = values[3];\n        event.rooty = values[4];\n        event.x = values[5];\n        event.y = values[6];\n        event.values = values\n\n    } else if (type == 12) { // Expose\n        var values = raw.unpack('SSSSS');\n        event.name = 'Expose'\n        event.wid = extra;\n        event.x = values[0];\n        event.y = values[1];\n        event.width = values[2];\n        event.height = values[3];\n        event.count = values[4]; // TODO: ???\n    } else if (type == 16) { // CreateNotify\n        var values = raw.unpack('LssSSSc');\n        event.name = 'CreateNotify'\n        event.parent = extra;\n        event.wid = values[0];\n        event.x = values[1];\n        event.y = values[2];\n        event.width = values[3];\n        event.height = values[4];\n        event.borderWidth = values[5];\n        event.overrideRedirect = values[6] ? true : false;\n        // x, y, width, height, border\n    } else if (type == 17) { // destroy notify\n        var values = raw.unpack('L');\n        event.name = 'DestroyNotify'\n        event.event = extra;\n        event.wid = values[0];\n    } else if (type == 18) { // UnmapNotify\n        var values = raw.unpack('LC');\n        event.name = 'UnmapNotify'\n        event.event = extra;\n        event.wid = values[0];\n        event.fromConfigure = values[1] ? true : false;\n    } else if (type == 19) { // MapNotify\n        var values = raw.unpack('LC');\n        event.name = 'MapNotify'\n        event.event = extra;\n        event.wid = values[0];\n        event.overrideRedirect = values[1] ? true : false;\n    } else if (type == 20) {\n        var values = raw.unpack('L');\n        event.name = 'MapRequest'\n        event.parent = extra;\n        event.wid = values[0];\n    } else if (type == 22) {\n        var values = raw.unpack('LLssSSSC');\n        event.name = 'ConfigureNotify';\n        event.wid = extra;\n        // TODO rename\n        event.wid1 = values[0];\n        event.aboveSibling = values[1];\n        event.x = values[2];\n        event.y = values[3];\n        event.width = values[4];\n        event.height = values[5];\n        event.borderWidth = values[6];\n        event.overrideRedirect = values[7];\n    } else if (type == 23) {\n        var values = raw.unpack('LLssSSSS');\n        event.name = 'ConfigureRequest';\n        event.stackMode = code;\n        event.parent = extra;\n        event.wid = values[0];\n        event.sibling = values[1];\n        event.x = values[2]\n        event.y = values[3]\n        event.width = values[4]\n        event.height = values[5]\n        event.borderWidth = values[6];\n        //\n        // The value-mask indicates which components were specified in\n        // the request. The value-mask and the corresponding values are reported as given\n        // in the request. The remaining values are filled in from the current geometry of the\n        // window, except in the case of sibling and stack-mode, which are reported as None\n        // and Above (respectively) if not given in the request.\n        event.mask = values[6];\n        // 322, [ 12582925, 0, 0, 484, 316, 1, 12, 0\n        //console.log([extra, code, values]);\n    } else if (type == 28) {// PropertyNotify\n        event.name = 'PropertyNotify';\n        var values = raw.unpack('LLC');\n        event.wid = extra;\n        event.atom = values[0];\n        event.time = values[1];\n        event.state = values[2];\n    } else if (type == 29) {// SelectionClear\n        event.name = 'SelectionClear';\n        event.time = extra;\n        var values = raw.unpack('LL');\n        event.owner = values[0];\n        event.selection = values[1];\n    } else if (type == 30) {// SelectionRequest\n        event.name = 'SelectionRequest';\n        // TODO check this\n        event.time = extra;\n        var values = raw.unpack('LLLLL');\n        event.owner = values[0];\n        event.requestor = values[1];\n        event.selection = values[2];\n        event.target = values[3];\n        event.property = values[4];\n    } else if (type == 31) {// SelectionNotify\n        event.name = 'SelectionNotify';\n        // TODO check this\n        event.time = extra;\n        var values = raw.unpack('LLLL');\n        event.requestor = values[0];\n        event.selection = values[1];\n        event.target = values[2];\n        event.property = values[3];\n    } else if (type == 33) {// ClientMessage\n        event.name = 'ClientMessage';\n        event.format = code;\n        event.wid = extra;\n        event.message_type = raw.unpack('L')[0];\n        var format = (code === 32) ? 'LLLLL' : (code === 16) ? 'SSSSSSSSSS' : 'CCCCCCCCCCCCCCCCCCCC';\n        event.data = raw.unpack(format, 4);\n    } else if (type == 34) {\n        event.name = 'MappingNotify';\n        event.request = headerBuf[4];\n        event.firstKeyCode = headerBuf[5];\n        event.count = headerBuf[6];\n    }\n    return event;\n}\n\nXClient.prototype.expectReplyHeader = function()\n{\n    // TODO: move error parsers to corereqs.js\n\n    var client = this;\n    client.pack_stream.get( 8, function(headerBuf) {\n            var res = headerBuf.unpack('CCSL');\n            var type = res[0];\n            var seq_num = res[2];\n            var bad_value = res[3];\n\n            if (type == 0)\n            {\n                var error_code = res[1];\n                var error = new Error();\n                error.error = error_code;\n                error.seq = seq_num;\n                if (client.options.debug) {\n                  error.longstack = client.seq2stack[error.seq]\n                  console.log(client.seq2stack[error.seq].stack);\n                }\n\n                // unpack error packet (32 bytes for all error types, 8 of them in CCSL header)\n                client.pack_stream.get(24, function(buf) {\n\n\t\t    var res = buf.unpack('SC');\n\t   \t    error.message = xerrors.errorText[error_code];\n\t\t    error.badParam = bad_value;\n\t\t    error.minorOpcode = res[0];\n\t\t    error.majorOpcode = res[1];\n\n\t            var extUnpacker = client.errorParsers[error_code];\n                    if (extUnpacker) {\n                      extUnpacker(error, error_code, seq_num, bad_value, buf);\n                    }\n\n                    var handler = client.replies[seq_num];\n                    if (handler) {\n                        var callback = handler[1];\n                        var handled = callback(error);\n                        if (!handled)\n                            client.emit('error', error);\n                        // TODO: should we delete seq2stack and reply even if there is no handler?\n\t\t\tif (client.options.debug)\n                          delete client.seq2stack[seq_num];\n                        delete client.replies[seq_num];\n                    } else\n                        client.emit('error', error);\n                    client.expectReplyHeader();\n                } );\n                return;\n            } else if (type > 1)\n            {\n                client.pack_stream.get(24, function(buf) {\n                    var extra = res[3];\n                    var code = res[1];\n                    var ev = client.unpackEvent(type, seq_num, extra, code, buf, headerBuf);\n\n                    // raw event 32-bytes packet (primarily for use in SendEvent);\n                    // TODO: Event::pack based on event parameters, inverse to unpackEvent\n                    ev.rawData = new Buffer(32);\n                    headerBuf.copy(ev.rawData);\n                    buf.copy(ev.rawData, 8);\n\n                    client.emit('event', ev);\n                    var ee = client.event_consumers[ev.wid];\n                    if (ee) {\n                       ee.emit('event', ev);\n                    }\n                    if (ev.parent) {\n                       ee = client.event_consumers[ev.parent];\n                       if (ee)\n                         ee.emit('child-event', ev);\n                    }\n                    client.expectReplyHeader();\n                } );\n                return;\n            }\n\n            var opt_data = res[1];\n            var length_total = res[3];            // in 4-bytes units, _including_ this header\n            var bodylength = 24 + length_total*4; // 24 is rest if 32-bytes header\n\n            client.pack_stream.get( bodylength, function( data ) {\n\n                var handler = client.replies[seq_num];\n                if (handler) {\n                    var unpack = handler[0];\n                    if (client.pending_atoms[seq_num]) {\n                        opt_data = seq_num;\n                    }\n\n                    var result = unpack.call(client, data, opt_data);\n                    var callback = handler[1];\n                    callback(null, result);\n                    // TODO: add multiple replies flag and delete handler only after last reply (eg ListFontsWithInfo)\n                    delete client.replies[seq_num];\n                }\n                // wait for new packet from server\n                client.expectReplyHeader();\n            });\n        }\n    );\n}\n\nXClient.prototype.startHandshake = function() {\n    var client = this;\n\n    handshake.writeClientHello(this.pack_stream, this.displayNum, this.authHost, this.authFamily);\n    handshake.readServerHello(this.pack_stream, function(err, display)\n    {\n        if (err) {\n            client.emit('error', err);\n            return;\n        }\n        client.expectReplyHeader();\n        client.display = display;\n        display.client = client;\n        client.emit('connect', display);\n    });\n}\n\nXClient.prototype.require = function(extName, callback)\n{\n   var self = this;\n   var ext = this._extensions[extName];\n   if (ext) {\n       return process.nextTick(function() {\n           callback(null, ext);\n       });\n   }\n\n   ext = require('./ext/' + extName);\n   ext.requireExt(this.display, function(err, _ext) {\n       if (err) {\n           return callback(err);\n       }\n\n       self._extensions[extName] = _ext;\n       callback(null, _ext);\n   });\n};\n\nmodule.exports.createClient = function(options, initCb)\n{\n    if (typeof options === 'function') {\n        initCb = options;\n        options = {};\n    }\n\n    if (!options) options = {};\n\n    var display = options.display;\n    if (!display)\n        display = (process.env.DISPLAY) ? process.env.DISPLAY : ':0';\n\n    var displayMatch = display.match(/^(?:[^:]*?\\/)?(.*):(\\d+)(?:.(\\d+))?$/);\n    if (!displayMatch)\n       throw new Error(\"Cannot parse display\");\n\n    var host = displayMatch[1];\n\n    var displayNum = displayMatch[2];\n    if (!displayNum)\n        displayNum = 0;\n    var screenNum = displayMatch[3];\n    if (!screenNum)\n        screenNum = 0;\n\n    // open stream\n    var stream;\n    var connected = false;\n    var cbCalled = false;\n    var socketPath;\n\n    // try local socket on non-windows platforms\n    if ( ['cygwin', 'win32', 'win64'].indexOf(process.platform) < 0 )\n    {\n        if (process.platform == 'darwin' || process.platform == 'mac')\n        {\n            // socket path on OSX is /tmp/launch-(some id)/org.x:0\n            if (display[0] == '/')\n            {\n                socketPath = display;\n            }\n        } else if(!host)\n            socketPath = '/tmp/.X11-unix/X' + displayNum;\n    }\n    var client = new XClient(displayNum, screenNum, options);\n\n    var connectStream = function() {\n        if (socketPath) {\n            stream = net.createConnection(socketPath);\n        } else {\n            stream = net.createConnection(6000 + parseInt(displayNum), host);\n        }\n        stream.on('connect', function() {\n            connected = true;\n            client.init(stream);\n        });\n        stream.on('error', function(err) {\n            if (!connected && socketPath && err.code === 'ENOENT') {\n                // Retry connection with TCP on localhost\n                socketPath = null;\n                host = 'localhost';\n                connectStream();\n            } else if (initCb && !cbCalled) {\n                cbCalled = true;\n                initCb(err);\n            } else {\n                client.emit('error', err);\n            }\n        });\n    };\n    connectStream();\n    if (initCb)\n    {\n        client.on('connect', function(display) {\n            // opt-in BigReq\n            if (!options.disableBigRequests) {\n                client.require('big-requests', function(err, BigReq) {\n                    if (err)\n                        return initCb(err)\n                    BigReq.Enable(function(err, maxLen) {\n                        display.max_request_length = maxLen;\n\t                cbCalled = true;\n                        initCb(undefined, display);\n                    });\n                });\n            } else {\n\t        cbCalled = true;\n                initCb(undefined, display);\n            }\n        });\n    }\n    return client;\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/handshake.js":"var getAuthString = require('./auth');\nvar xutil = require('./xutil');\n\nfunction readVisuals(bl, visuals, n_visuals, cb)\n{\n    if (n_visuals == 0)\n    {\n        cb();\n        return;\n    }\n\n    var visual = {};\n    bl.unpackTo( visual,\n    [\n        'L vid',\n        'C class',\n        'C bits_per_rgb',\n        'S map_ent',\n        'L red_mask',\n        'L green_mask',\n        'L blue_mask',\n        'xxxx'\n    ],\n    function() {\n         var vid = visual.vid;\n         // delete visual.vid;\n         visuals[visual.vid] = visual;\n         if (Object.keys(visuals).length == n_visuals)\n             cb()\n         else\n             readVisuals(bl, visuals, n_visuals, cb);\n    });\n}\n\nfunction readScreens(bl, display, cbDisplayReady)\n{\n     var numParsedDepths = 0;\n     var readDepths = function(bl, display, depths, n_depths, cb)\n     {\n         if (n_depths == 0)\n         {\n             cb();\n             return;\n         }\n\n         bl.unpack( 'CxSxxxx', function(res) {\n             var dep = res[0];\n             var n_visuals = res[1];\n             var visuals = {};\n             readVisuals(bl, visuals, n_visuals, function()\n             {\n                 if (dep in depths) {\n                     for (var visual in visuals) {\n                         depths[dep][visual] = visuals[visual];\n                     }\n                 } else {\n                     depths[dep] = visuals;\n                 }\n                 numParsedDepths++;\n                 if (numParsedDepths == n_depths)\n                     cb();\n                 else\n                     readDepths(bl, display, depths, n_depths, cb);\n             });  \n         });\n     }\n\n     // for (i=0; i < display.screen_num; ++i)\n     {\n         var scr = {};\n         bl.unpackTo( scr,\n         [\n             'L root',\n             'L default_colormap',\n             'L white_pixel',\n             'L black_pixel',\n             'L input_masks',\n             'S pixel_width',\n             'S pixel_height',\n             'S mm_width',\n             'S mm_height',\n             'S min_installed_maps',\n             'S max_installed_maps',\n             'L root_visual',\n             'C root_depth',\n             'C backing_stores',\n             'C root_depth',\n             'C num_depths'\n         ],\n         function () {\n             var depths = {};\n             readDepths(bl, display, depths, scr.num_depths, function() {\n\n                 scr.depths = depths;\n                 delete scr.num_depths;\n                 display.screen.push(scr);\n\n                 if (display.screen.length == display.screen_num)\n                 {\n                     delete display.screen_num;\n                     cbDisplayReady(null, display);\n                     return;\n                 } else {\n                     readScreens(bl, display, cbDisplayReady);\n                 }\n             });\n         });\n     }\n}\n\nfunction readServerHello(bl, cb)\n{\n\nbl.unpack('C', function(res) {\n\n     if (res[0] == 0)\n     {\n         // conection time error\n         // unpack error\n         bl.unpack('Cxxxxxx', function (rlen) {\n             bl.get(rlen[0], function (reason) {\n                 var err = new Error;\n                 err.message = 'X server connection failed: ' + reason.toString();\n                 cb(err);\n             });\n         });\n         // TODO: do we need to close stream from our side?\n         // TODO: api to close source stream via attached unpackstream\n         return;\n     }\n\n     var display = {};\n     bl.unpackTo(\n         display,\n         [\n          'x',\n          'S major',\n          'S minor',\n          'S xlen',\n          'L release',\n          'L resource_base',\n          'L resource_mask',\n          'L motion_buffer_size',\n          'S vlen',\n          'S max_request_length',\n          'C screen_num',\n          'C format_num',\n          'C image_byte_order',\n          'C bitmap_bit_order',\n          'C bitmap_scanline_unit',\n          'C bitmap_scanline_pad',\n          'C min_keycode',\n          'C max_keycode',\n          'xxxx'\n         ],\n\n         function()\n         {\n             var pvlen = xutil.padded_length(display.vlen);\n\n             // setup data to generate resource id\n             // TODO: cleaunup code here\n             var mask = display.resource_mask;\n             display.rsrc_shift = 0;\n             while (!( (mask >> display.rsrc_shift) & 1) )\n                 display.rsrc_shift++;\n             display.rsrc_id = 0;\n\n             bl.get(pvlen, function(vendor)\n             {\n                 display.vendor = vendor.toString().substr(0, display.vlen); // utf8 by default?\n\n                 display.format = {};\n                 for (var i=0; i < display.format_num; ++i)\n                 {\n                     bl.unpack('CCCxxxxx', function(fmt) {\n                         var depth = fmt[0];\n                         display.format[depth] = {};\n                         display.format[depth].bits_per_pixel = fmt[1];\n                         display.format[depth].scanline_pad = fmt[2];\n                         if (Object.keys(display.format).length == display.format_num)\n                         {\n                             delete display.format_num;\n                             display.screen = [];\n                             readScreens(bl, display, cb);\n                         }\n                     });\n                 }\n             });\n         }\n     );\n});\n\n}\n\nfunction getByteOrder() {\n    var isLittleEndian = ((new Uint32Array((new Uint8Array([1,2,3,4])).buffer))[0] === 0x04030201);\n    if (isLittleEndian) {\n        return 'l'.charCodeAt(0);\n    } else {\n        return 'B'.charCodeAt(0);\n    }\n}\n\nfunction writeClientHello(stream, displayNum, authHost, authFamily)\n{\n    getAuthString( displayNum, authHost, authFamily, function( err, cookie ) {\n        if (err) {\n            throw err;\n        }\n        var byte_order = getByteOrder();\n        var protocol_major = 11; // TODO: config? env?\n        var protocol_minor = 0;\n        stream.pack(\n            'CxSSSSxxpp',\n            [\n            byte_order,\n            protocol_major,\n            protocol_minor,\n            cookie.authName.length,\n            cookie.authData.length,\n            cookie.authName,\n            cookie.authData\n            ]\n        );\n        stream.flush();\n    });\n}\n\nmodule.exports.readServerHello = readServerHello;\nmodule.exports.writeClientHello = writeClientHello;\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/auth.js":"// TODO: differentiate between auth types (i.e., MIT-MAGIC-COOKIE-1 and XDM-AUTHORIZATION-1)\n// and choose the best based on the algorithm in libXau's XauGetBestAuthByAddr\n\nvar fs = require('fs');\nvar Buffer = require('buffer').Buffer;\n// add 'unpack' method for buffer\nrequire('./unpackbuffer').addUnpack(Buffer);\n\nvar typeToName = {\n    256: 'Local',\n  65535: 'Wild',\n    254: 'Netname',\n    253: 'Krb5Principal',\n    252: 'LocalHost',\n      0: 'Internet',\n      1: 'DECnet',\n      2: 'Chaos',\n      5: 'ServerInterpreted',\n      6: 'Internet6'\n};\n\nfunction parseXauth( buf )\n{\n    var offset = 0;\n    var auth = [];\n    var cookieProperties = ['address', 'display', 'authName', 'authData'];\n\n    while (offset < buf.length)\n    {\n        var cookie = {};\n        cookie.type = buf.readUInt16BE(offset);\n        if (!typeToName[cookie.type]) {\n            console.warn('Unknown address type');\n        }\n        offset += 2;\n        cookieProperties.forEach(function(property) {\n          var length = buf.unpack('n', offset)[0];\n          offset += 2;\n          if (cookie.type === 0 && property == 'address') { // Internet\n            // 4 bytes of ip addess, convert to w.x.y.z string\n            cookie.address = [ buf[offset], buf[offset+1], buf[offset+2], buf[offset+3]]\n              .map(function(octet) { return octet.toString(10) }).join('.');\n          } else {\n            cookie[property] = buf.unpackString(length, offset);\n          }\n          offset += length;\n        });\n        auth.push(cookie);\n    }\n    return auth;\n}\n\nvar homedir = require('os-homedir');\nvar path = require('path');\n\nfunction readXauthority(cb) {\n  var filename = process.env.XAUTHORITY || path.join(homedir(), '.Xauthority');\n  fs.readFile(filename, function(err, data) {\n    if (!err)\n      return cb(null, data);\n    if(err.code == 'ENOENT') {\n      // Xming/windows uses %HOME%/Xauthority ( .Xauthority with no dot ) - try with this name\n      filename = process.env.XAUTHORITY || path.join(homedir(), 'Xauthority');\n      fs.readFile(filename, function (err, data) {\n        if (err.code == 'ENOENT') {\n          cb(null, null);\n        } else {\n          cb(err);\n        }\n      });\n    } else {\n      cb(err);\n    }\n  });\n}\n\nmodule.exports = function( display, host, socketFamily, cb )\n{\n  var family;\n  if (socketFamily === 'IPv4') {\n    family = 0; // Internet\n  } else if (socketFamily === 'IPv6') {\n    family = 6; // Internet6\n  } else {\n    family = 256; // Local\n  }\n  readXauthority(function(err, data) {\n    if(err) return cb(err);\n\n    if (!data) {\n      return cb(null, {\n        authName: '',\n        authData: ''\n      });\n    }\n    var auth = parseXauth(data);\n    for (var cookieNum in auth)\n    {\n      var cookie = auth[cookieNum];\n      if ((typeToName[cookie.family] === 'Wild' || (cookie.type === family && cookie.address === host)) &&\n          (cookie.display.length === 0 || cookie.display === display))\n        return cb( null, cookie );\n    }\n    // If no cookie is found, proceed without authentication\n    cb(null, {\n      authName: '',\n      authData: ''\n    });\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/unpackbuffer.js":"// unpack for static buffer\n\t\n// TODO: use as fallback only if v0.5+ fuffer is not available\n// TODO: remove duplicate code\nvar argument_length = {};\nargument_length.C = 1;\nargument_length.S = 2;\nargument_length.s = 2;\nargument_length.L = 4;\nargument_length.x = 1;\n\nmodule.exports.addUnpack = function(Buffer)\n{\n    Buffer.prototype.unpack = function(format, offset)\n    {\n        if (!offset)\n            offset = 0;\n\n        var data = [];\n        var current_arg = 0;\n        while (current_arg < format.length)\n        {\n            var arg = format[current_arg];\n            switch (arg) {\n            case 'C':\n                data.push(this.readUInt8(offset++));\n                break;\n            case 'c':\n                data.push(this.readInt8(offset++));\n                break;\n            case 'S':\n                data.push(this.readUInt16LE(offset));\n                offset += 2;\n                break;\n            case 's':\n                data.push(this.readInt16LE(offset));\n                offset += 2;\n                break;\n            case 'n':\n                data.push(this.readUInt16BE(offset));\n                offset += 2;\n                break;\n            case 'L':\n                data.push(this.readUInt32LE(offset));\n                offset += 4;\n                break;\n            case 'l':\n                data.push(this.readInt32LE(offset));\n                offset += 4;\n                break;\n            case 'x':\n                offset++;\n                break;\n            }\n            current_arg++;\n        }\n        return data;\n    }\n\n    /*  \n    Buffer.prototype.skip = function(n)\n    {\n        offset += n;\n    }\n    */\n\n    Buffer.prototype.unpackString = function(n, offset)\n    {\n        var res = '';\n        var end = offset + n;\n        while(offset < end)\n            res += String.fromCharCode(this[offset++]);\n        return res;\n    }\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/xutil.js":"function padded_length(len)\n{\n   return ((len + 3) >> 2) << 2;\n   /*\n   var rem = len % 4;\n   var pl = len;\n   if (rem)\n       return len + 4 - rem;\n   return len;\n   */\n}\n\n// TODO: make it return buffer?\n// str += is slow\nfunction padded_string(str)\n{\n   if (str.length == 0)\n       return '';\n \n   var pad = padded_length(str.length) - str.length;\n   var res = str;\n   for (var i=0; i < pad; ++i)\n       res += String.fromCharCode(0);\n\n   return res;\n}\n\nmodule.exports.padded_length = padded_length;\nmodule.exports.padded_string = padded_string;\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/unpackstream.js":"var Buffer = require('buffer').Buffer;\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\nvar xutil = require('./xutil');\n\nvar argument_length = {};\nargument_length.C = 1;\nargument_length.S = 2;\nargument_length.s = 2;\nargument_length.L = 4;\nargument_length.l = 4;\nargument_length.x = 1;\n\nfunction ReadFormatRequest(format, callback)\n{\n    this.format = format;\n    this.current_arg = 0;\n    this.data = [];\n    this.callback = callback;\n}\n\nfunction ReadFixedRequest(length, callback)\n{\n    this.length = length;\n    this.callback = callback;\n    this.data = new Buffer(length);\n    this.received_bytes = 0;\n}\n\nReadFixedRequest.prototype.execute = function(bufferlist, aa, bb, cc, dd)\n{\n    // TODO: this is a brute force version\n    // replace with Buffer.slice calls\n    var to_receive = this.length - this.received_bytes;\n    for(var i=0 ; i < to_receive; ++i)\n    {\n        if (bufferlist.length == 0)\n            return false;\n        this.data[this.received_bytes++] = bufferlist.getbyte();\n    }\n    this.callback(this.data);\n    return true;\n}\n\nReadFormatRequest.prototype.execute = function(bufferlist, tag1, tag2)\n{\n    while (this.current_arg < this.format.length)\n    {\n        var arg = this.format[this.current_arg];\n        if (bufferlist.length < argument_length[arg])\n            return false; // need to wait for more data to prcess this argument\n\n        // TODO: measure Buffer.readIntXXX performance and use them if faster\n        // note: 4 and 2-byte values may cross chunk border & split. need to handle this correctly\n        // maybe best approach is to wait all data required for format and then process fixed buffer\n        // TODO: byte order!!!\n        switch (arg) {\n        case 'C':\n            this.data.push(bufferlist.getbyte());\n            break;\n        case 'S':\n        case 's':\n            var b1 = bufferlist.getbyte();\n            var b2 = bufferlist.getbyte();\n            this.data.push(b2*256+b1);\n            break;\n        case 'l':\n        case 'L':\n            var b1 = bufferlist.getbyte();\n            var b2 = bufferlist.getbyte();\n            var b3 = bufferlist.getbyte();\n            var b4 = bufferlist.getbyte();\n            this.data.push(((b4*256+b3)*256 + b2)*256 + b1);\n            break;\n        case 'x':\n            bufferlist.getbyte();\n            break;\n        }\n        this.current_arg++;\n    }\n    this.callback(this.data);\n    return true;\n}\n\nfunction UnpackStream()\n{\n    EventEmitter.call(this);\n\n    this.readlist = [];\n    this.length = 0;\n    this.offset = 0;\n    this.read_queue = [];\n    this.write_queue = [];\n    this.write_length = 0;\n}\nutil.inherits(UnpackStream, EventEmitter);\n\nUnpackStream.prototype.write = function(buf)\n{\n    this.readlist.push(buf);\n    this.length += buf.length;\n    this.resume();\n}\n\nUnpackStream.prototype.pipe = function(stream)\n{\n    // TODO: ondrain & pause\n    this.on('data', function(data)\n    {\n        stream.write(data);\n    });\n}\n\nUnpackStream.prototype.unpack = function(format, callback)\n{\n    this.read_queue.push(new ReadFormatRequest(format, callback));\n    this.resume();\n}\n\nUnpackStream.prototype.unpackTo = function(destination, names_formats, callback)\n{\n    var names = [];\n    var format = '';\n\n    for (var i=0; i < names_formats.length; ++i)\n    {\n        var off = 0;\n        while(off < names_formats[i].length && names_formats[i][off] == 'x')\n        {\n            format += 'x';\n            off++;\n        }\n\n        if (off < names_formats[i].length)\n        {\n            format += names_formats[i][off];\n            var name = names_formats[i].substr(off+2);\n            names.push(name);\n        }\n    }\n\n    this.unpack(format, function(data) {\n        if (data.length != names.length)\n            throw 'Number of arguments mismatch, ' + names.length + ' fields and ' + data.length + ' arguments';\n        for (var fld = 0; fld < data.length; ++fld)\n        {\n            destination[names[fld]] = data[fld];\n        }\n        callback(destination);\n    });\n}\n\nUnpackStream.prototype.get = function(length, callback)\n{\n    this.read_queue.push(new ReadFixedRequest(length, callback));\n    this.resume();\n}\n\nUnpackStream.prototype.resume = function()\n{\n    if (this.resumed)\n         return;\n    this.resumed = true;\n    // process all read requests until enough data in the buffer\n    while(this.read_queue[0].execute(this))\n    {\n        this.read_queue.shift();\n        if (this.read_queue.length == 0)\n            return;\n    }\n    this.resumed = false;\n}\n\nUnpackStream.prototype.getbyte = function()\n{\n    var res = 0;\n    var b = this.readlist[0];\n    if (this.offset + 1 < b.length)\n    {\n        res = b[this.offset];\n        this.offset++;\n        this.length--;\n\n    } else {\n\n        // last byte in current buffer, shift read list\n        res = b[this.offset];\n        this.readlist.shift();\n        this.length--;\n        this.offset = 0;\n    }\n    return res;\n}\n\n/*\n\n// write padded string\n// at the moment replaced with pack('p', [ 'padded_string' ])\nUnpackStream.prototype.pstr = function(str)\n{\n    var len = xutil.padded_length(str.length);\n    if (len == 0)\n        return; // nothing to write\n    var buf = new Buffer(len);\n    buf.write(str, 'binary');\n    this.write_queue.push(buf);\n}\n*/\n\n// TODO: measure node 0.5+ buffer serialisers performance\nUnpackStream.prototype.pack = function(format, args)\n{\n    var packetlength = 0;\n\n    var arg = 0;\n    for (var i = 0; i < format.length; ++i)\n    {\n        var f = format[i];\n        if (f == 'x')\n        {\n            packetlength++;\n        } else if (f == 'p') {\n            packetlength += xutil.padded_length(args[arg++].length);\n        } else if (f == 'a') {\n            packetlength += args[arg].length;\n            arg++;\n        } else {\n            // this is a fixed-length format, get length from argument_length table\n            packetlength += argument_length[f];\n            arg++;\n        }\n    }\n\n    var buf = new Buffer(packetlength);\n    var offset = 0;\n    var arg = 0;\n    for (var i = 0; i < format.length; ++i)\n    {\n        switch(format[i])\n        {\n            case 'x':\n                buf[offset++] = 0;\n                break;\n            case 'C':\n                var n = args[arg++];\n                buf[offset++] = n;\n                break;\n            case 's':\n                var n = args[arg++];\n                buf.writeInt16LE(n, offset);\n                offset += 2;\n                break;\n\n            case 'S':\n                var n = args[arg++];\n                buf[offset++] = n & 0xff;\n                buf[offset++] = (n >> 8) & 0xff;\n                break;\n            case 'l':\n                var n = args[arg++];\n                buf.writeInt32LE(n, offset);\n                offset += 4;\n                break;\n\n            case 'L':\n                var n = args[arg++];\n                buf[offset++] = n & 0xff;\n                buf[offset++] = (n >> 8) & 0xff;\n                buf[offset++] = (n >> 16) & 0xff;\n                buf[offset++] = (n >> 24) & 0xff;\n                break;\n            case 'a':  // string or buffer\n                var str = args[arg++];\n                if (Buffer.isBuffer(str))\n                {\n                    str.copy(buf, offset);\n                    offset += str.length;\n                } else {\n                    // TODO: buffer.write could be faster\n                    for (var c = 0; c < str.length; ++c)\n                        buf[offset++] = str.charCodeAt(c);\n                }\n                break;\n            case 'p':  // padded string\n                var str = args[arg++];\n                var len = xutil.padded_length(str.length);\n                // TODO: buffer.write could be faster\n                var c = 0;\n                for (; c < str.length; ++c)\n                    buf[offset++] = str.charCodeAt(c);\n                for (; c < len; ++c)\n                    buf[offset++] = 0;\n                break;\n        }\n    }\n    this.write_queue.push(buf);\n    this.write_length += buf.length;\n    return this;\n}\n\nUnpackStream.prototype.flush = function(stream)\n{\n    // TODO: measure performance benefit of\n    // creating and writing one big concatenated buffer\n\n    // TODO: check write result\n    // pause/resume streaming\n    for (var i=0; i < this.write_queue.length; ++i)\n    {\n         //stream.write(this.write_queue[i])\n         this.emit('data', this.write_queue[i]);\n    }\n    this.write_queue = [];\n    this.write_length = 0;\n}\n\nmodule.exports = UnpackStream;\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/corereqs.js":"// full list of event/error/request codes for all extensions:\n// http://www.opensource.apple.com/source/X11server/X11server-106.7/kdrive/xorg-server-1.6.5-apple3/dix/protocol.txt\n\nvar xutil = require('./xutil');\nvar hexy = require('./hexy').hexy;\n\nvar valueMask = {\n    CreateWindow: {\n        backgroundPixmap      : {\n          mask: 0x00000001,\n          format: 'L'\n        },\n        backgroundPixel       : {\n          mask: 0x00000002,\n          format: 'L'\n        },\n        borderPixmap          : {\n          mask: 0x00000004,\n          format: 'L'\n        },\n        borderPixel           : {\n          mask: 0x00000008,\n          format: 'L'\n        },\n        bitGravity            : {\n          mask: 0x00000010,\n          format: 'Cxxx'\n        },\n        winGravity            : {\n          mask: 0x00000020,\n          format: 'Cxxx'\n        },\n        backingStore          : {\n          mask: 0x00000040,\n          format: 'Cxxx'\n        },\n        backingPlanes         : {\n          mask: 0x00000080,\n          format: 'L'\n        },\n        backingPixel          : {\n          mask: 0x00000100,\n          format: 'L'\n        },\n        overrideRedirect      : {\n          mask: 0x00000200,\n          format: 'Cxxx'\n        },\n        saveUnder             : {\n          mask: 0x00000400,\n          format: 'Cxxx'\n        },\n        eventMask             : {\n          mask: 0x00000800,\n          format: 'L'\n        },\n        doNotPropagateMask    : {\n          mask: 0x00001000,\n          format: 'L'\n        },\n        colormap              : {\n          mask: 0x00002000,\n          format: 'L'\n        },\n        cursor                : {\n          mask: 0x00004000,\n          format: 'L'\n        }\n    },\n    CreateGC: {\n       'function'             : { // TODO: alias? _function?\n          mask: 0x00000001,\n          format: 'Cxxx'\n        },\n       planeMask              : {\n          mask: 0x00000002,\n          format: 'L'\n        },\n       foreground             : {\n          mask: 0x00000004,\n          format: 'L'\n        },\n       background             : {\n          mask: 0x00000008,\n          format: 'L'\n        },\n       lineWidth              : {\n          mask: 0x00000010,\n          format: 'Sxx'\n        },\n       lineStyle              : {\n          mask: 0x00000020,\n          format: 'Cxxx'\n        },\n       capStyle               : {\n          mask: 0x00000040,\n          format: 'Cxxx'\n        },\n       joinStyle              : {\n          mask: 0x00000080,\n          format: 'Cxxx'\n        },\n       fillStyle              : {\n          mask: 0x00000100,\n          format: 'Cxxx'\n        },\n       fillRule               : {\n          mask: 0x00000200,\n          format: 'Cxxx'\n        },\n       tile                   : {\n          mask: 0x00000400,\n          format: 'L'\n        },\n       stipple                : {\n          mask: 0x00000800,\n          format: 'L'\n        },\n       tileStippleXOrigin     : {\n          mask: 0x00001000,\n          format: 'sxx'\n        },\n       tileStippleYOrigin     : {\n          mask: 0x00002000,\n          format: 'sxx'\n        },\n       font                   : {\n          mask: 0x00004000,\n          format: 'L'\n        },\n       subwindowMode          : {\n          mask: 0x00008000,\n          format: 'Cxxx'\n        },\n       graphicsExposures      : {\n          mask: 0x00010000,\n          format: 'Cxxx'\n        },\n       clipXOrigin            : {\n          mask: 0x00020000,\n          format: 'Sxx'\n        },\n       clipYOrigin            : {\n          mask: 0x00040000,\n          format: 'Sxx'\n        },\n       clipMask               : {\n          mask: 0x00080000,\n          format: 'L'\n        },\n       dashOffset             : {\n          mask: 0x00100000,\n          format: 'Sxx'\n        },\n       dashes                 : {\n          mask: 0x00200000,\n          format: 'Cxxx'\n        },\n       arcMode                : {\n          mask: 0x00400000,\n          format: 'Cxxx'\n        }\n    },\n    ConfigureWindow: {\n      x                       : {\n        mask: 0x000001,\n        format: 'sxx'\n      },\n    \ty                       : {\n        mask: 0x000002,\n        format: 'sxx'\n      },\n    \twidth                   : {\n        mask: 0x000004,\n        format: 'Sxx'\n      },\n    \theight                  : {\n        mask: 0x000008,\n        format: 'Sxx'\n      },\n    \tborderWidth             : {\n        mask: 0x000010,\n        format: 'Sxx'\n      },\n    \tsibling                 : {\n        mask: 0x000020,\n        format: 'L'\n      },\n    \tstackMode               : {\n        mask: 0x000040,\n        format: 'Cxxx'\n      }\n    }\n};\n\n\nvar valueMaskName = {};\nfor (var req in valueMask) {\n    var masks = valueMask[req];\n    var names = valueMaskName[req] = {};\n    for (var m in masks)\n        names[masks[m].mask] = m;\n}\n\nfunction packValueMask(reqname, values)\n{\n    var bitmask = 0;\n    var masksList = [];\n    var format = '';\n    var reqValueMask = valueMask[reqname];\n    var reqValueMaskName = valueMaskName[reqname];\n\n    if (!reqValueMask)\n        throw new Error(reqname + ': no value mask description');\n\n    for (var value in values)\n    {\n        var v = reqValueMask[value];\n        if (v) {\n          var valueBit = v.mask;\n          if (!valueBit)\n              throw new Error(reqname + ': incorrect value param ' + value);\n          masksList.push(valueBit);\n          bitmask |= valueBit;\n        }\n    }\n\n    /* numeric sort */\n    masksList.sort(function(a, b) {\n      return a - b;\n    });\n\n    var args = [];\n    for (m in masksList)\n    {\n       var valueName = reqValueMaskName[masksList[m]];\n       format += reqValueMask[valueName].format\n       args.push( values[valueName] );\n    }\n    return [format, bitmask, args]\n}\n\n/*\n\nthe way requests are described here\n\n- outgoing request\n\n   1) as function\n   client.CreateWindow( params, params ) ->\n       req = reqs.CreateWindow[0]( param, param );\n       pack_stream.pack(req[0], req[1]);\n\n   2) as array: [format, [opcode, request_length, additional known params]]\n\n   client.MapWindow[0](id) ->\n       req = reqs.MwpWindow;\n       req[1].push(id);\n       pack_stream.pack( req[0], req[1] );\n\n- reply\n\n*/\n\nvar templates = {\n   CreateWindow: [\n       // create request packet - function OR format string\n       function(id, parentId, x, y, width, height, borderWidth, depth, _class, visual, values) {\n\n           if (borderWidth === undefined)\n               borderWidth = 0;\n           if (depth === undefined)\n               depth = 0;\n           if (_class === undefined)\n               _class = 0;\n           if (visual === undefined)\n               visual = 0;\n           if (values === undefined)\n               values = {}\n\n           var format = 'CCSLLssSSSSLL';\n\n           // TODO: slice from function arguments?\n\n           // TODO: the code is a little bit mess\n           // additional values need to be packed in the following way:\n           // bitmask (bytes #24 to #31 in the packet) - 32 bit indicating what adittional arguments we supply\n           // values list (bytes #32 .. #32+4*num_values) in order of corresponding bits TODO: it's actually not 4*num. Some values are 4b ytes, some - 1 byte\n\n           var vals = packValueMask('CreateWindow', values);\n           var packetLength = 8 + (values ? vals[2].length : 0);\n           var args = [1, depth, packetLength, id, parentId, x, y, width, height, borderWidth, _class, visual];\n           format += vals[0];\n           args.push(vals[1]);\n           args = args.concat(vals[2]);\n           return [format, args];\n       }\n\n   ],\n\n   ChangeWindowAttributes:[\n       function(wid, values) {\n           var format = 'CxSLSxx';\n           var vals = packValueMask('CreateWindow', values);\n           var packetLength = 3 + (values ? vals[2].length : 0);\n           var args = [2, packetLength, wid, vals[1]];\n           var valArr = vals[2];\n           format += vals[0];\n           args = args.concat(valArr);\n           return [format, args];\n        }\n   ],\n\n   GetWindowAttributes: [\n       ['CxSL', [3, 2]],\n       function(buf, backingStore)\n       {\n           // TODO: change from array to named object fields\n           var res = buf.unpack('LSCCLLCCCCLLLS');\n           var ret = {\n               backingStore: backingStore\n           };\n           ( \"visual klass bitGravity winGravity backingPlanes backingPixel\" +\n             \" saveUnder mapIsInstalled mapState overrideRedirect colormap\" +\n             \" allEventMasks myEventMasks doNotPropogateMask\" )\n           .split(' ').forEach(function(field, index) {\n               ret[field] = res[index];\n           });\n           return ret;\n       }\n   ],\n\n   DestroyWindow: [\n       [ 'CxSL', [4, 2] ]\n   ],\n\n   ChangeSaveSet: [\n      function(isInsert, wid)\n      {\n          return [ 'CCSL', [6, (isInsert ? 0 : 1), 2, wid]]\n      }\n   ],\n\n   // wid, newParentId, x, y\n   ReparentWindow: [\n       [ 'CxSLLss', [7, 4]]\n   ],\n\n   MapWindow: [\n       // 8 - opcode, 2 - length, wid added as parameter\n       [ 'CxSL', [8, 2] ]\n   ],\n\n   UnmapWindow: [\n       [ 'CxSL', [10, 2] ]\n   ],\n\n   ConfigureWindow: [\n        /*\n         * options : {\n         *     x : x_value,\n         *     y : y_value,\n         *     width : width_value,\n         *     height : height_value,\n         *     borderWidth : borderWidth_value,\n         *     sibling : sibling_value\n         * }\n         */\n        function(win, options) {\n            var vals = packValueMask('ConfigureWindow', options);\n            var format = 'CxSLSxx' + vals[0];\n            var args = [12, vals[2].length + 3, win, vals[1]];\n            args = args.concat(vals[2]);\n            return [format, args];\n        }\n   ],\n\n   ResizeWindow: [\n        function(win, width, height) {\n            return module.exports.ConfigureWindow[0](win, { width : width, height: height });\n        }\n   ],\n\n   MoveWindow: [\n        function(win, x, y) {\n            return module.exports.ConfigureWindow[0](win, { x : x, y: y });\n        }\n   ],\n\n   MoveResizeWindow: [\n        function(win, x, y, width, height) {\n            return module.exports.ConfigureWindow[0](win, { x : x, y: y, width : width, height: height });\n        }\n   ],\n\n   RaiseWindow: [\n        function(win) {\n            return module.exports.ConfigureWindow[0](win, { stackMode : 0 });\n        }\n   ],\n\n   LowerWindow: [\n        function(win) {\n            return module.exports.ConfigureWindow[0](win, { stackMode : 1 });\n        }\n   ],\n\n   QueryTree: [\n        ['CxSL', [15, 2]],\n\n        function(buf) {\n            var tree = {};\n            var res = buf.unpack('LLS');\n            tree.root = res[0];\n            tree.parent = res[1];\n            tree.children = [];\n            for (var i=0; i < res[2]; ++i)\n                tree.children.push(buf.unpack('L', 24 + i*4)[0]);\n            return tree;\n        }\n   ],\n\n   // opcode 16\n   InternAtom: [\n       function (returnOnlyIfExist, value)\n       {\n           var padded = xutil.padded_string(value);\n           return ['CCSSxxa', [16, returnOnlyIfExist ? 1 : 0, 2+padded.length/4, value.length, padded] ];\n       },\n\n       function(buf, seq_num) {\n           var res = buf.unpack('L')[0];\n           var pending_atom = this.pending_atoms[seq_num];\n           if (!this.atoms[pending_atom]) {\n               this.atoms[pending_atom] = res;\n               this.atom_names[res] = pending_atom;\n           }\n\n           delete this.pending_atoms[seq_num];\n           return res;\n       }\n   ],\n\n   GetAtomName: [\n       [ 'CxSL', [17, 2] ],\n       function(buf, seq_num) {\n          var nameLen = buf.unpack('S')[0];\n          // Atom value starting from 24th byte in the buffer\n          var name = buf.unpackString(nameLen, 24);\n          var pending_atom = this.pending_atoms[seq_num];\n          if (!this.atoms[pending_atom]) {\n              this.atom_names[pending_atom] = name;\n              this.atoms[name] = pending_atom;\n          }\n\n          delete this.pending_atoms[seq_num];\n          return name;\n       }\n   ],\n\n   ChangeProperty: [\n       // mode: 0 replace, 1 prepend, 2 append\n       // format: 8/16/32\n       function(mode, wid, name, type, units, data)\n       {\n          var padded4 = (data.length + 3) >> 2;\n          var pad = new Buffer( (padded4<<2) - data.length);\n          var format = 'CCSLLLCxxxLaa';\n          var requestLength = 6 + padded4;\n          var dataLenInFormatUnits = data.length / (units >> 3);\n          return [format, [18, mode, requestLength, wid, name, type, units, dataLenInFormatUnits, data, pad] ];\n       }\n   ],\n\n   // TODO: test\n   DeleteProperty: [\n       function(wid, prop) {\n           return [ 'CxSLL', [19, 3, wid, prop] ];\n       }\n   ],\n\n   GetProperty: [\n\n       function(del, wid, name, type, longOffset, longLength) //  - offest and maxLength in 4-byte units\n       {\n           return [ 'CCSLLLLL', [20, del, 6, wid, name, type, longOffset, longLength ] ];\n       },\n\n       function(buf, format) {\n     var res = buf.unpack('LLL');\n           var prop = {};\n           prop.type = res[0];\n           prop.bytesAfter = res[1];\n           var len = res[2]*(format >> 3)\n           prop.data = buf.slice(24, 24+len);\n           return prop;\n       }\n   ],\n\n   ListProperties: [\n\n       function(wid)\n       {\n          return ['CxSL', [21, 2, wid]];\n       },\n\n       function(buf) {\n          var n = buf.unpack('S')[0];\n          var i;\n          var atoms = [];\n          for(i=0; i < n; ++i) {\n             atoms.push(buf.unpack('L', 24+4*i)[0]);\n             //console.log([n, i, atoms]);\n          }\n          return atoms;\n       }\n   ],\n\n   SetSelectionOwner: [\n      function(owner, selection, time)\n      {\n          if (!time)\n              time = 0; // current time\n          return ['CxSLLL', [22, 4, owner, selection, time]];\n      }\n   ],\n\n   GetSelectionOwner: [\n      function(selection)\n      {\n          return ['CxSL', [23, 2, selection]];\n      },\n\n      function(buf) {\n          return buf.unpack('L')[0];\n      }\n   ],\n\n   ConvertSelection: [\n      function(requestor, selection, target, property, time) {\n          if (!time)\n              time = 0;\n          return ['CxSLLLLL', [24, 6, requestor, selection, target, property, time]];\n      }\n   ],\n\n   SendEvent: [\n\n       function(destination, propagate, eventMask, eventRawData)\n       {\n           return [ 'CCSLLa', [25, propagate, 11, destination, eventMask, eventRawData] ];\n       }\n   ],\n\n   GrabPointer: [\n       function(wid, ownerEvents, mask, pointerMode, keybMode, confineTo, cursor, time) {\n           return [ 'CCSLSCCLLL', [ 26, ownerEvents, 6, wid, mask, pointerMode, keybMode,\n                                    confineTo, cursor, time] ];\n       },\n       function(buf, status) {\n           return status;\n       }\n   ],\n\n   UngrabPointer: [\n       function(time) {\n           return [ 'CxSL', [ 27, 2, time] ];\n       }\n   ],\n\n   GrabButton: [\n       function(wid, ownerEvents, mask, pointerMode, keybMode, confineTo, cursor, button, modifiers) {\n           return [ 'CCSLSCCLLCxS', [ 28, ownerEvents, 6, wid, mask, pointerMode, keybMode, confineTo,\n                                      cursor, button, modifiers ] ];\n       }\n   ],\n\n   UngrabButton: [\n       function(wid, button, modifiers) {\n           return [ 'CCSLSxx', [ 29, button, 3, wid, modifiers ] ];\n       }\n   ],\n\n   ChangeActivePointerGrab: [\n       function(cursor, time, mask) {\n           return [ 'CxSLLSxx', [ 30, 4, cursor, time, mask ] ];\n       }\n   ],\n\n   GrabKeyboard: [\n       function(wid, ownerEvents, time, pointerMode, keybMode) {\n           return [ 'CCSLLCCxx', [ 31, ownerEvents, 4, wid, time, pointerMode, keybMode ] ];\n       },\n       function(buf, status) {\n           return status;\n       }\n   ],\n\n   UngrabKeyboard: [\n       function(time) {\n           return [ 'CxSL', [ 32, 2, time ] ];\n       }\n   ],\n\n   GrabKey: [\n       function(wid, ownerEvents, modifiers, key, pointerMode, keybMode) {\n           return [ 'CCSLSCCCxxx', [ 33, ownerEvents, 4, wid, modifiers, key, pointerMode, keybMode ] ];\n       }\n   ],\n\n   UngrabKey: [\n       function(wid, key, modifiers) {\n           return [ 'CCSLSxx', [ 34, key, 3, wid, modifiers ] ];\n       }\n   ],\n   \n   AllowEvents: [\n       function(mode, ts) {\n           return [ 'CCSL', [ 35, mode, 2, ts ] ];\n       }\n   ],\n\n   GrabServer: [\n       [ 'CxS', [36, 1]]\n   ],\n\n   UngrabServer: [\n       [ 'CxS', [37, 1]]\n   ],\n\n   QueryPointer: [\n       [ 'CxSL', [38, 2] ],\n       function(buf, sameScreen) {\n           var res = buf.unpack('LLssssS');\n           return {\n               root: res[0],\n               child: res[1],\n               rootX: res[2],\n               rootY: res[3],\n               childX: res[4],\n               childY: res[5],\n               keyMask: res[6],\n               sameScreen : sameScreen\n           };\n       }\n   ],\n\n   TranslateCoordinates: [\n       function(srcWid, dstWid, srcX, srcY) {\n           return [ 'CxSLLSS', [ 40, 4, srcWid, dstWid, srcX, srcY ] ];\n       },\n       function(buf, sameScreen)\n       {\n           var res = buf.unpack('Lss');\n           var ext = {};\n           ext.child = res[0];\n           ext.destX = res[1];\n           ext.destY = res[2];\n           ext.sameScreen = sameScreen;\n           return ext;\n       }\n   ],\n\n   SetInputFocus: [\n\n      function (wid, revertTo) // revertTo: 0 - None, 1 - PointerRoot, 2 - Parent\n      {\n          return [ 'CCSLL', [42, revertTo, 3, wid, 0] ];\n      }\n   ],\n\n   GetInputFocus: [\n       function() {\n           return [ 'CxS', [ 43, 1 ] ];\n       },\n       function(buf, revertTo)\n       {\n           return {\n               focus : buf.unpack('L')[0],\n               revertTo : revertTo\n           };\n       }\n   ],\n\n   WarpPointer: [\n\n      function (srcWin, dstWin, srcX, srcY, srcWidth, srcHeight, dstX, dstY)\n      {\n          return [ 'CxSLLssSSss', [41, 6, srcWin, dstWin, srcX, srcY, srcWidth, srcHeight, dstX, dstY] ];\n      }\n   ],\n\n   ListFonts: [\n      function(pattern, max)\n      {\n          var req_len = 2+xutil.padded_length(pattern.length)/4;\n          return [ 'CxSSSp', [49, req_len, max, pattern.length, pattern] ];\n      },\n\n      function(buf) {\n          console.log(buf);\n          // TODO: move to buffer.unpackStringList\n          var res = [];\n          var off = 24;\n          while (off < buf.length)\n          {\n              var len = buf[off++];\n              if (len == 0)\n                  break;\n              if (off + len > buf.length)\n              {\n                  len = buf.length - off;\n                  if (len <= 0)\n                     break;\n              }\n              res.push(buf.unpackString(len, off));\n              off += len;\n          }\n          return res;\n      }\n   ],\n\n   CreatePixmap: [\n       function(pid, drawable, depth, width, height) {\n          return [ 'CCSLLSS', [53, depth, 4, pid, drawable, width, height] ];\n       }\n   ],\n\n   FreePixmap: [\n       function(pixmap) {\n           return [ 'CxSL', [ 54, 2, pixmap ] ];\n       }\n   ],\n\n   FreePixmap: [\n      function (pixmap) {\n          return [ 'CxSL', [54, 2, pixmap] ];\n      }\n   ],\n\n   CreateCursor: [\n       function(cid, source, mask, foreRGB, backRGB, x, y) {\n          foreR = foreRGB.R\n          foreG = foreRGB.G\n          foreB = foreRGB.B\n\n          backR = backRGB.R\n          backG = backRGB.G\n          backB = backRGB.B\n          return [ 'CxSLLLSSSSSSSS', [93, 8, cid, source, mask, foreR, foreG, foreB, backR, backG, backB, x, y] ];\n       }\n   ],\n\n   // opcode 55\n   CreateGC: [\n       function(cid, drawable, values) {\n           var format = 'CxSLLL';\n           var vals = packValueMask('CreateGC', values);\n           var packetLength = 4 + (values ? vals[2].length : 0);\n           var args = [55, packetLength, cid, drawable];\n           format += vals[0]\n           args.push(vals[1]);     // values bitmask\n           args = args.concat(vals[2])\n           return [format, args];\n        }\n   ],\n\n   ChangeGC: [\n       function(cid, values) {\n           var format = 'CxSLL';\n           var vals = packValueMask('CreateGC', values);\n           var packetLength = 3 + (values ? vals[2].length : 0);\n           var args = [56, packetLength, cid];\n           args.push(vals[0]);     // values bitmask\n           var valArr = vals[1];\n           for (var v in valArr)\n           {\n               format += 'L'; // TODO: we know format string length in advance and += inefficient for string\n               args.push(valArr[v]);\n           }\n           return [format, args];\n        }\n   ],\n\n   ClearArea: [\n       function(wid, x, y, width, height, exposures) {\n          return [ 'CCSLssSS', [61, exposures, 4, wid, x, y, width, height] ];\n       }\n   ],\n\n   //\n   CopyArea: [\n       function(srcDrawable, dstDrawable, gc, srcX, srcY, dstX, dstY, width, height) {\n          return [ 'CxSLLLssssSS', [62, 7, srcDrawable, dstDrawable, gc, srcX, srcY, dstX, dstY, width, height] ];\n       }\n   ],\n\n\n   PolyPoint: [\n       function(coordMode, drawable, gc, points)\n       {\n          var format = 'CCSLL';\n          var args = [64, coordMode, 3+points.length/2, drawable, gc];\n          for (var i=0; i < points.length; ++i)\n          {\n              format += 'S';\n              args.push(points[i]);\n          }\n          return [format, args];\n       }\n   ],\n\n   PolyLine: [\n       // TODO: remove copy-paste - exectly same as PolyPoint, only differ with opcode\n       function(coordMode, drawable, gc, points)\n       {\n          var format = 'CCSLL';\n          var args = [65, coordMode, 3+points.length/2, drawable, gc];\n          for (var i=0; i < points.length; ++i)\n          {\n              format += 'S';\n              args.push(points[i]);\n          }\n          return [format, args];\n       }\n\n   ],\n\n   PolyFillRectangle: [\n      function(drawable, gc, coords) { // x1, y1, w1, h1, x2, y2, w2, h2...\n          var format = 'CxSLL';\n          var numrects4bytes = coords.length/2;\n          var args = [70, 3+numrects4bytes, drawable, gc];\n          for (var i=0; i < coords.length; ++i)\n          {\n              format += 'S';\n              args.push(coords[i]);\n          }\n          return [format, args];\n      }\n   ],\n\n   PolyFillArc: [\n      function(drawable, gc, coords) { // x1, y1, w1, h1, a11, a12, ...\n          var format = 'CxSLL';\n          var numrects4bytes = coords.length/2;\n          var args = [71, 3+numrects4bytes, drawable, gc];\n          for (var i=0; i < coords.length; ++i)\n          {\n              format += 'S';\n              args.push(coords[i]);\n          }\n          return [format, args];\n      }\n   ],\n\n   PutImage: [\n      // format:  0 - Bitmap, 1 - XYPixmap, 2 - ZPixmap\n      function(format, drawable, gc, width, height, dstX, dstY, leftPad, depth, data) {\n          var padded = xutil.padded_length(data.length);\n          var reqLen = 6 + padded/4; // (length + 3) >> 2 ???\n          var padLength = padded - data.length;\n          var pad = new Buffer(padLength); // TODO: new pack format 'X' - skip amount of bytes supplied in numerical argument\n\n          // TODO: move code to calculate reqLength and use BigReq if needed outside of corereq.js\n          // NOTE: big req is used here (first 'L' in format, 0 and +1 in params), won't work if not enabled\n          return [ 'CCSLLLSSssCCxxaa', [72, format, 0, 1+reqLen, drawable, gc, width, height, dstX, dstY, leftPad, depth, data, pad]];\n      }\n   ],\n\n   GetImage: [\n       function(format, drawable, x, y, width, height, planeMask)\n       {\n           return [ 'CCSLssSSL', [73, format, 5, drawable, x, y, width, height, planeMask]];\n       },\n       function(buf, depth)\n       {\n           var visualId = buf.unpack('L')[0];\n           return {\n               depth: depth,\n               visualId: visualId,\n               data: buf.slice(24)\n           };\n       }\n   ],\n\n   PolyText8: [\n       function(drawable, gc, x, y, items) {\n          var format = 'CxSLLss';\n          var numItems = items.length;\n          var reqLen = 16;\n          var args = [74, 0, drawable, gc, x, y];\n          for (var i=0; i < numItems; ++i)\n          {\n              var it = items[i];\n              if (typeof it == 'string')\n              {\n                  if (it.length > 254) // TODO: split string in set of items\n                      throw 'not supported yet';\n                  format += 'CCa';\n                  args.push(it.length);\n                  args.push(0); // delta???\n                  args.push(it);\n                  reqLen += 2 + it.length;\n              } else {\n                  throw 'not supported yet';\n              }\n          }\n          var len4 = xutil.padded_length(reqLen)/4;\n          var padLen = len4*4 - reqLen;\n          args[1] = len4; // set request length to calculated value\n          var pad = '';\n          for (var i=0; i < padLen; ++i)\n             pad += String.fromCharCode(0);\n          format += 'a';\n          args.push(pad);\n          return [format, args];\n       }\n   ],\n\n   CreateColormap:\n   [\n       function(cmid, wid, vid, alloc)\n       {\n           return ['CCSLLL', [78, alloc, 4, cmid, wid, vid]];\n       }\n   ],\n\n   AllocColor: [\n       [ 'CxSLSSSxx', [84, 4] ], // params: colormap, red, green, blue\n\n       function(buf) {\n\t   var res = buf.unpack('SSSxL');\n           var color = {};\n           color.red   = res[0];\n           color.blue  = res[1];\n           color.green = res[2];\n           color.pixel = res[3]>>8; // it looks like 3 first bytes contain RGB value in response\n           return color;\n       }\n   ],\n\n   QueryExtension: [\n       function(name) {\n           var padded = xutil.padded_string(name);\n           return ['CxSSxxa', [98, 2+padded.length/4, name.length, padded] ];\n       },\n\n       function(buf) {\n\t   var res = buf.unpack('CCCC');\n           var ext = {};\n           ext.present = res[0];\n           ext.majorOpcode = res[1];\n           ext.firstEvent = res[2];\n           ext.firstError = res[3];\n           return ext;\n       }\n\n   ],\n\n   ListExtensions: [\n       [ 'CxS', [99, 1] ],\n\n       function(buf) {\n          // TODO: move to buffer.unpackStringList\n          var res = [];\n          var off = 24;\n          while (off < buf.length)\n          {\n              var len = buf[off++];\n              if (len == 0)\n                  break;\n              if (off + len > buf.length)\n              {\n                  len = buf.length - off;\n                  if (len <= 0)\n                     break;\n              }\n              res.push(buf.unpackString(len, off));\n              off += len;\n          }\n          return res;\n       }\n   ],\n\n   GetKeyboardMapping: [\n       function(startCode, num) {\n           return [ 'CxSCCxx', [101, 2, startCode, num] ]\n       },\n       function(buff, listLength) {\n           var res = [];\n           var format = '';\n           for (var i=0; i < listLength; ++i)\n               format += 'L';\n           for (var offset=24; offset < buff.length - 4*listLength; offset += 4*listLength)\n                res.push(buff.unpack(format, offset));\n           return res;\n       }\n   ],\n\n        // todo: move up to keep reque\n\tGetGeometry: [\n\t\tfunction(drawable){\n\t\t\treturn ['CxSL', [14, 2, drawable]]\n\t\t},\n\t\tfunction(buff, depth)\n\t\t{\n\t\t\tvar res = buff.unpack('LssSSSx');\n\t\t\tvar ext = {};\n\t\t\text.windowid = res[0]\n\t\t\text.xPos = res[1];\n\t\t\text.yPos = res[2];\n\t\t\text.width = res[3];\n\t\t\text.height = res[4];\n\t\t\text.borderWidth = res[5];\n\t\t\text.depth = depth;\n\t\t\treturn ext;\n\t\t}\n   ],\n\n   KillClient: [\n       function(resource) {\n           return [ 'CxSL', [113, 2, resource] ];\n       }\n   ],\n\n   SetScreenSaver: [\n       function(timeout, interval, preferBlanking, allowExposures) {\n           return [ 'CxSssCCxx', [107, 3, timeout, interval, preferBlanking, allowExposures]];\n       }\n   ],\n\n   ForceScreenSaver: [\n       function(activate) {\n           return [ 'CCS', [115, activate?1:0, 1] ];\n       }\n   ]\n};\n\ntemplates.KillKlient = templates.KillClient;\n\nmodule.exports = templates;\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/hexy.js":"//= hexy.js -- utility to create hex dumps \n//\n// `hexy` is a javascript (node) library that's easy to use to create hex\n// dumps from within node. It contains a number of options to configure\n// how the hex dumb will end up looking.\n//\n// It should create a pleasant looking hex dumb by default:\n//    \n//    var hexy = require('hexy.js'),\n//           b = new Buffer(\"\\000\\001\\003\\005\\037\\012\\011bcdefghijklmnopqrstuvwxyz0123456789\")\n//    \n//    console.log(hexy.hexy(b))\n//\n// results in this dump:\n//\n//    0000000: 00 01 03 05 1f 0a 09 62   63 64 65 66 67 68 69 6a  .......b cdefghij \n//    0000010: 6b 6c 6d 6e 6f 70 71 72   73 74 75 76 77 78 79 7a  klmnopqr stuvwxyz \n//    0000020: 30 31 32 33 34 35 36 37   38 39                    01234567 89\n//\n// but it's also possible to configure:\n//\n//  * Line numbering\n//  * Line width\n//  * Format\n//  * Case of hex decimals\n//  * Presence of the ASCII annotation in the right column.\n//\n// This mean you can do exciting dumps like:\n//\n//    0000000: 0001 0305 1f0a 0962  .... ...b \n//    0000008: 6364 6566 6768 696a  cdef ghij \n//    0000010: 6b6c 6d6e 6f70 7172  klmn opqr \n//    0000018: 7374 7576 7778 797a  stuv wxyz \n//    0000020: 3031 3233 3435 3637  0123 4567 \n//    0000028: 3839                 89\n//\n// or even:\n//\n//    0000000: 00 01 03 05 1f 0a 09 62   63 64 65 66 67 68 69 6a \n//    0000010: 6b 6c 6d 6e 6f 70 71 72   73 74 75 76 77 78 79 7a \n//    0000020: 30 31 32 33 34 35 36 37   38 39\n//\n// with hexy!\n// \n// Formatting options are configured by passing a `format` object to the `hexy` function:\n//\n//    var format = {}\n//        format.width = width // how many bytes per line, default 16\n//        format.numbering = n // [\"hex_bytes\" | \"none\"],  default \"none\"\n//        format.format = f    // [\"fours\"|\"twos\"|\"none\"], how many nibbles per group\n//                             //                          default \"fours\"\n//        format.caps = c      // [\"lower\"|\"upper\"],       default lower\n//        format.annotate=a    // [\"ascii\"|\"none\"], ascii annotation at end of line?\n//                             //                          default \"ascii\"\n//        format.prefix=p      // <string> something pretty to put in front of each line\n//                             //                          default \"\"\n//        format.indent=i      // <num> number of spaces to indent\n//                             //                          default 0\n//\n//    console.log(hexy.hexy(buffer, format))\n//\n// In case you're really nerdy, you'll have noticed that the defaults correspond\n// to how `xxd` formats it's output.\n//           \n//\n//== Installing\n//\n// Either use `npm`:\n//  \n//    npm install hexy\n//\n// This will install the lib which you'll be able to use like so:\n//    \n//    var hexy = require(\"hexy.js\"),\n//        buf  = // get Buffer from somewhere,\n//        str  = hexy.hexy(buf)\n//\n// It will also install `hexy.js` into your path in case you're totally fed up\n// with using `xxd`.\n//        \n// \n// If you don't like `npm`, grab the source from github:\n//\n//    http://github.com/a2800276/hexy.js\n//\n//== TODOS\n//\n// The current version only pretty prints Buffers. Which probably means it\n// can only be used from within node. What's more important what it\n// doesn't support: Strings (which would be nice for the sake of\n// completeness) and Streams/series of Buffers which would be nice so you\n// don't have to collect the whole things you want to pretty print in\n// memory. `hexy` is probably most useful for debugging and getting binary\n// protocol stuff working, so that's probably not an too much of an issue.\n//\n//== History\n//\n// This is a fairly straightforward port of `hexy.rb` which does more or less the\n// same thing. You can find it here: \n// \n//    http://github.com/a2800276/hexy\n// \n// in case these sorts of things interest you.\n//\n//== Mail\n//\n// In case you discover bugs, spelling errors, offer suggestions for\n// improvements or would like to help out with the project, you can contact\n// me directly (tim@kuriositaet.de). \n\nvar hexy = function (buffer, config) {\n  config = config || {}\n  var h = new Hexy(buffer, config)\n  return h.toString()\n}\n\nvar Hexy = function (buffer, config) {\n  var self = this\n \n  self.buffer    = buffer // magic string conversion here?\n  self.width     = config.width || 16\n  self.numbering = config.numbering == \"none\"  ? \"none\" : \"hex_bytes\"\n  self.groupSpacing = config.groupSpacing || 0\n   \n  switch (config.format) {\n    case \"none\":\n    case \"twos\":\n      self.format = config.format\n      break\n    default:\n      self.format = \"fours\"\n  }\n  \n  self.caps      = config.caps      == \"upper\" ? \"upper\" : \"lower\"\n  self.annotate  = config.annotate  == \"none\"  ? \"none\"  : \"ascii\"\n  self.prefix    = config.prefix    || \"\"\n  self.indent    = config.indent    || 0\n\n  for (var i = 0; i!=self.indent; ++i) {\n    self.prefix = \" \"+prefix\n  }\n\n  var pos = 0\n\n  this.toString = function () {\n    var str = \"\"\n    \n    //split up into line of max `self.width`\n    var line_arr = lines()\n    \n    //lines().forEach(function(hex_raw, i){\n    for (var i = 0; i!= line_arr.length; ++i) {\n      var hex_raw = line_arr[i],\n          hex = hex_raw[0],\n          raw = hex_raw[1]\n      //insert spaces every `self.format.twos` or fours\n      var howMany = hex.length\n      if (self.format === \"fours\") {\n        howMany = 4\n      } else if (self.format === \"twos\") {\n        howMany = 2\n      }\n\n      var hex_formatted = \"\"\n      var middle = Math.floor(self.width / 2)-1\n      var groupSpaces = (new Array(self.groupSpacing+1)).join(' ');\n      for (var j=0; j<hex.length; j+=howMany) {\n        var s = hex.substr(j, howMany)\n        hex_formatted += s + (j/2 === middle && self.groupSpacing > 0 ? groupSpaces : \" \")\n      }\n      str += self.prefix \n\n      if (self.numbering === \"hex_bytes\") {\n        str += pad(i*self.width, 8) // padding...\n        str += \": \"\n      }\n      \n      var padlen = 0\n      switch(self.format) {\n        case \"fours\":\n          padlen = self.width*2 + self.width/2\n          break\n        case \"twos\":\n          padlen = self.width*3 + 2\n          break\n        default:\n          padlen = self * 2\n      }\n\n      str += rpad(hex_formatted, padlen)\n      if (self.annotate === \"ascii\") {\n        str+=\" \"\n        str+=raw.replace(/[\\000-\\040\\177-\\377]/g, \".\")\n      }\n      str += \"\\n\"\n    }\n    return str\n  }\n\n  var lines = function() {\n    var hex_raw = []\n    \n\n    for (var i = 0; i<self.buffer.length ; i+=self.width) {\n      var begin = i,\n          end   = i+self.width >= buffer.length ? buffer.length : i+self.width,\n          slice = buffer.slice(begin, end),\n          hex   = self.caps === \"upper\" ? hexu(slice) : hexl(slice),\n          raw   = slice.toString('ascii')\n\n      hex_raw.push([hex,raw])\n    }\n    return hex_raw\n\n  }\n\n  var hexl = function (buffer) {\n    var str = \"\"\n    for (var i=0; i!=buffer.length; ++i) {\n      str += pad(buffer[i], 2)\n    }\n    return str\n  }\n  var hexu = function (buffer) {\n    return hexl(buffer).toUpperCase()\n  }\n\n  var pad = function(b, len) {\n    var s = b.toString(16)\n    \n    while (s.length < len) {\n      s = \"0\" + s\n    }\n    return s\n  } \n  var rpad = function(s, len) {\n    while(s.length < len) {\n      s += \" \"\n    }\n    return s\n  }\n\n}\n/*\nvar fs = require('fs'),\n    file = process.argv[2]\n\n\nvar data = fs.readFileSync(file)\n//console.log(hexy(data))\nvar format = {}\n//format.format = \"fours\"\nformat.caps   = \"upper\"\nformat.annotate = \"none\"\n//format.numbering = \"none\"\nformat.width = 8\nconsole.log(hexy(data, format))\nconsole.log(\"doen\")\n*/\n\nexports.hexy = hexy","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/xerrors.js":"module.exports.errorText = {\n    1: 'Bad request',\n    2: 'Bad param value',\n    3: 'Bad window',\n    4: 'Bad pixmap',\n    5: 'Bad atom',\n    6: 'Bad cursor',\n    7: 'Bad font',\n    8: 'Bad match',\n    9: 'Bad drawable',\n   10: 'Bad access',\n   11: 'Bad alloc',\n   12: 'Bad colormap',\n   13: 'Bad GContext',\n   14: 'Bad ID choice',\n   15: 'Bad name',\n   16: 'Bad length',\n   17: 'Bad implementation'\n};\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/stdatoms.js":"// pre-defined atoms. generated automatically with genstdatoms.js\n\nmodule.exports = {\n    PRIMARY: 1,\n    SECONDARY: 2,\n    ARC: 3,\n    ATOM: 4,\n    BITMAP: 5,\n    CARDINAL: 6,\n    COLORMAP: 7,\n    CURSOR: 8,\n    CUT_BUFFER0: 9,\n    CUT_BUFFER1: 10,\n    CUT_BUFFER2: 11,\n    CUT_BUFFER3: 12,\n    CUT_BUFFER4: 13,\n    CUT_BUFFER5: 14,\n    CUT_BUFFER6: 15,\n    CUT_BUFFER7: 16,\n    DRAWABLE: 17,\n    FONT: 18,\n    INTEGER: 19,\n    PIXMAP: 20,\n    POINT: 21,\n    RECTANGLE: 22,\n    RESOURCE_MANAGER: 23,\n    RGB_COLOR_MAP: 24,\n    RGB_BEST_MAP: 25,\n    RGB_BLUE_MAP: 26,\n    RGB_DEFAULT_MAP: 27,\n    RGB_GRAY_MAP: 28,\n    RGB_GREEN_MAP: 29,\n    RGB_RED_MAP: 30,\n    STRING: 31,\n    VISUALID: 32,\n    WINDOW: 33,\n    WM_COMMAND: 34,\n    WM_HINTS: 35,\n    WM_CLIENT_MACHINE: 36,\n    WM_ICON_NAME: 37,\n    WM_ICON_SIZE: 38,\n    WM_NAME: 39,\n    WM_NORMAL_HINTS: 40,\n    WM_SIZE_HINTS: 41,\n    WM_ZOOM_HINTS: 42,\n    MIN_SPACE: 43,\n    NORM_SPACE: 44,\n    MAX_SPACE: 45,\n    END_SPACE: 46,\n    SUPERSCRIPT_X: 47,\n    SUPERSCRIPT_Y: 48,\n    SUBSCRIPT_X: 49,\n    SUBSCRIPT_Y: 50,\n    UNDERLINE_POSITION: 51,\n    UNDERLINE_THICKNESS: 52,\n    STRIKEOUT_ASCENT: 53,\n    STRIKEOUT_DESCENT: 54,\n    ITALIC_ANGLE: 55,\n    X_HEIGHT: 56,\n    QUAD_WIDTH: 57,\n    WEIGHT: 58,\n    POINT_SIZE: 59,\n    RESOLUTION: 60,\n    COPYRIGHT: 61,\n    NOTICE: 62,\n    FONT_NAME: 63,\n    FAMILY_NAME: 64,\n    FULL_NAME: 65,\n    CAP_HEIGHT: 66,\n    WM_CLASS: 67,\n    WM_TRANSIENT_FOR: 68\n}","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/eventmask.js":"module.exports.eventMask = {\n    KeyPress: 0x00000001,\n    KeyRelease: 0x00000002,\n    ButtonPress: 0x00000004,\n    ButtonRelease: 0x00000008,\n    EnterWindow: 0x00000010,\n    LeaveWindow: 0x00000020,\n    PointerMotion: 0x00000040,\n    PointerMotionHint: 0x00000080,\n    Button1Motion: 0x00000100,\n    Button2Motion: 0x00000200,\n    Button3Motion: 0x00000400,\n    Button4Motion: 0x00000800,\n    Button5Motion: 0x00001000,\n    ButtonMotion: 0x00002000,\n    KeymapState: 0x00004000,\n    Exposure: 0x00008000,\n    VisibilityChange: 0x00010000,\n    StructureNotify: 0x00020000,\n    ResizeRedirect: 0x00040000,\n    SubstructureNotify: 0x00080000,\n    SubstructureRedirect: 0x00100000,\n    FocusChange: 0x00200000,\n    PropertyChange: 0x00400000,\n    ColormapChange: 0x00800000,\n    OwnerGrabButton: 0x01000000\n    // TODO: add more names for common masks combinations\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/xserver.js":"\"use strict\";\nvar util = require('util');\nvar net = require('net');\nvar PackStream = require('./unpackstream');\nvar EventEmitter = require('events').EventEmitter;\n\nfunction XServer(servsock, params)\n{\n     var server = this;\n     EventEmitter.call(this);\n     servsock.on('connection', function(stream) {\n         var cli = new XServerClientConnection(stream, params);\n         server.emit('connection', cli);\n     });\n}\nutil.inherits(XServer, EventEmitter);\n\nfunction XServerClientConnection(stream, params)\n{\n     EventEmitter.call(this);\n     this.params = params;\n     var serv = this;\n     serv.stream = stream;\n     serv.pack_stream = new PackStream();\n     serv.pack_stream.on('data', function( data ) {\n         serv.stream.write(data);\n     });\n     stream.on('data', function( data ) {\n         serv.pack_stream.write(data);\n     });\n     serv.sequence = 0;\n     serv.readClientHandshake();\n}\nutil.inherits(XServerClientConnection, EventEmitter);\n\nXServerClientConnection.prototype.readClientHandshake = function()\n{\n    var serv = this;\n    var hello = {};\n    serv.pack_stream.unpackTo(hello,\n        [\n            'C byteOrder',\n            'x',\n            'S protocolMajor',\n            'S protocolMinor',\n            'S authTypeLength',\n            'S authDataLength',\n            'x',\n            'x'\n        ],\n        function() {\n            console.log(hello);\n            serv.pack_stream.get(hello.authTypeLength, function(authType) {\n                serv.pack_stream.get(hello.authDataLength, function(authData) {\n                    serv.byteOrder = hello.byteOrder;\n                    serv.protocolMajor = hello.protocolMajor;\n                    serv.protocolMinor = hello.protocolMinor;\n                    serv.checkAuth(authType.toString('ascii'), authData);\n                });\n            });\n        }\n    );\n}\n\nXServerClientConnection.prototype.checkAuth = function(authType, authData)\n{\n    var serv = this;\n    // ignore check for now;\n    // protocol page 140: add code for reject & ask additional info\n    console.log('check auth');\n    console.log([authType, authData.toString()]);\n\n    // auth ok: reply with list of screens, visuals, root window info etc\n    var stream = serv.pack_stream;\n\n/*\n   xquartz exemple reply\n\n{ major: 11,\n  minor: 0,\n  xlen: 537, (bytes in whole header)\n  release: 11300000,\n  resource_base: 6291456,\n  resource_mask: 2097151,\n  motion_buffer_size: 256,\n  vlen: 20,\n  max_request_length: 65535,\n  screen_num: 1,\n  format_num: 7,\n  image_byte_order: 0,\n  bitmap_bit_order: 0,\n  bitmap_scanline_unit: 32,\n  bitmap_scanline_pad: 32,\n  min_keycode: 8,\n  max_keycode: 255 }\n\nper screen:\nscreen: { root: 226,\n  default_colormap: 33,\n  white_pixel: 16777215,\n  black_pixel: 0,\n  input_masks: 1703936,\n  pixel_width: 3286,\n  pixel_height: 1058,\n  mm_width: 866,\n  mm_height: 277,\n  min_installed_maps: 1,\n  max_installed_maps: 1,\n  root_visual: 34,\n  root_depth: 24,\n  backing_stores: 0,\n  num_depths: 7 }\n17              'L root',¬\n 18              'L default_colormap',¬\n 19              'L white_pixel',¬\n 20              'L black_pixel',¬\n 21              'L input_masks',¬\n 22              'S pixel_width',¬\n 23              'S pixel_height',¬\n 24              'S mm_width',¬\n 25              'S mm_height',¬\n 26              'S min_installed_maps',¬\n 27              'S max_installed_maps',¬\n 28              'L root_visual',¬\n 29              'C root_depth',¬\n 30              'C backing_stores',¬\n 31              'C root_depth',¬\n 32              'C num_depths'¬\n\n\nper depth:\n  depth: [ 24, 80 ] (depth, num visuals)\n\nper visual:\n  visual { vid: 146,\n  class: 4,\n  bits_per_rgb: 8,\n  map_ent: 256,\n  red_mask: 16711680,\n  green_mask: 65280,\n  blue_mask: 255 }\n\n*/\n\n    //stream.pack('')\n    //  [2, reason,\n    //serv.pack_stream.unpack('C', function(isShared) {\n    //    console.log([isShared]);\n    //    serv.writeServerInit();\n    //});\n    //\n    var hello = require('fs').readFileSync('hello1.bin');\n    stream.pack('CxSSSa', [1, 11, 0, hello.length/4, hello]);\n    stream.flush();\n    serv.expectMessage();\n}\n\nXServerClientConnection.prototype.expectMessage = function()\n{\n    var serv = this;\n    console.log('expecting messages');\n    serv.pack_stream.unpack('CCS', function(header) {\n        serv.sequence++;\n        console.log('Request:', header[0]);\n        console.log('Extra:', header[1]);\n        console.log('length:', header[2]);\n        serv.pack_stream.get((header[2]-1)*4, function(reqBody) {\n\n          console.log('BODY:', reqBody, reqBody.toString());\n\n          if (header[0] == 98) {\n            serv.pack_stream.pack('CCSLCCCCLLLLL', [1, 0, serv.sequence, 0, 1, 134, 0, 0, 0, 0, 0, 0, 0, 0]);\n            serv.pack_stream.flush();\n          } else if (header[0] == 134) {\n            console.log('ENABLE BIG REQ');\n            serv.pack_stream.pack('CCSLLLLLLLL', [1, 0, serv.sequence, 0, 10000000, 0, 0, 0, 0, 0, 0 ]);\n            serv.pack_stream.flush();\n          }\n          serv.expectMessage();\n\n        });\n    });\n}\n\nmodule.exports.createServer = function(options, onconnect) {\n    if (typeof(options) === 'function') {\n        onconnect = options;\n        options = {};\n    }\n    var s = net.createServer();\n    var serv = new XServer(s, options);\n    serv.on('connect', onconnect);\n    return s;\n}\n\n//module.exports.createServer(6002) ;\n//function(client) {\n//});\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/keysyms.js":"\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\\n\n   This file is automatically translated from X.Org's xproto/keysymdef.h\n   Please, do not update this file with your hands, run keysyms.update.sh.\n\n\\* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nmodule.exports = {\n\n/***********************************************************\nCopyright 1987, 1994, 1998  The Open Group\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\nthe above copyright notice appear in all copies and that both that\ncopyright notice and this permission notice appear in supporting\ndocumentation.\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the name of The Open Group shall\nnot be used in advertising or otherwise to promote the sale, use or\nother dealings in this Software without prior written authorization\nfrom The Open Group.\n\n\nCopyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts\n\n                        All Rights Reserved\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose and without fee is hereby granted,\nprovided that the above copyright notice appear in all copies and that\nboth that copyright notice and this permission notice appear in\nsupporting documentation, and that the name of Digital not be\nused in advertising or publicity pertaining to distribution of the\nsoftware without specific, written prior permission.\n\nDIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING\nALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL\nDIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR\nANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\nARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\nSOFTWARE.\n\n******************************************************************/\n\n/*\n * The \"X11 Window System Protocol\" standard defines in Appendix A the\n * keysym codes. These 29-bit integer values identify characters or\n * functions associated with each key (e.g., via the visible\n * engraving) of a keyboard layout. This file assigns mnemonic macro\n * names for these keysyms.\n *\n * This file is also compiled (by src/util/makekeys.c in libX11) into\n * hash tables that can be accessed with X11 library functions such as\n * XStringToKeysym() and XKeysymToString().\n *\n * Where a keysym corresponds one-to-one to an ISO 10646 / Unicode\n * character, this is noted in a comment that provides both the U+xxxx\n * Unicode position, as well as the official Unicode name of the\n * character.\n *\n * Where the correspondence is either not one-to-one or semantically\n * unclear, the Unicode position and name are enclosed in\n * parentheses. Such legacy keysyms should be considered deprecated\n * and are not recommended for use in future keyboard mappings.\n *\n * For any future extension of the keysyms with characters already\n * found in ISO 10646 / Unicode, the following algorithm shall be\n * used. The new keysym code position will simply be the character's\n * Unicode number plus 0x01000000. The keysym values in the range\n * 0x01000100 to 0x0110ffff are reserved to represent Unicode\n * characters in the range (\\u0100) to U+10FFFF.\n * \n * While most newer Unicode-based X11 clients do already accept\n * Unicode-mapped keysyms in the range 0x01000100 to 0x0110ffff, it\n * will remain necessary for clients -- in the interest of\n * compatibility with existing servers -- to also understand the\n * existing legacy keysym values in the range 0x0100 to 0x20ff.\n *\n * Where several mnemonic names are defined for the same keysym in this\n * file, all but the first one listed should be considered deprecated.\n *\n * Mnemonic names for keysyms are defined in this file with lines\n * that match one of these Perl regular expressions:\n *\n *    /^\\  XK_([a-zA-Z_0-9]+)\\s+0x([0-9a-f]+)\\s*\\/\\*: { code: U+([0-9A-F]{4,6}), description: null }, (.*) \\*\\/\\s*$/\n *    /^\\  XK_([a-zA-Z_0-9]+)\\s+0x([0-9a-f]+)\\s*\\/\\*\\(U+([0-9A-F]{4,6}): { code: (.*)\\)\\*\\/\\s*$/, description: null },\n *    /^\\#define XK_([a-zA-Z_0-9]+)\\s+0x([0-9a-f]+)\\s*(\\/\\*\\s*(.*)\\s*\\*\\/)?\\s*$/\n *\n * Before adding new keysyms, please do consider the following: In\n * addition to the keysym names defined in this file, the\n * XStringToKeysym() and XKeysymToString() functions will also handle\n * any keysym string of the form \"U0020\" to \"U007E\" and \"U00A0\" to\n * \"U10FFFF\" for all possible Unicode characters. In other words,\n * every possible Unicode character has already a keysym string\n * defined algorithmically, even if it is not listed here. Therefore,\n * defining an additional keysym macro is only necessary where a\n * non-hexadecimal mnemonic name is needed, or where the new keysym\n * does not represent any existing Unicode character.\n *\n * When adding new keysyms to this file, do not forget to also update the\n * following as needed:\n *\n *   - the mappings in src/KeyBind.c in the repo\n *     git://anongit.freedesktop.org/xorg/lib/libX11.git\n *\n *   - the protocol specification in specs/keysyms.xml\n *     in the repo git://anongit.freedesktop.org/xorg/proto/x11proto.git\n *\n */\n\n  XK_VoidSymbol:                  { code: 0xffffff, description: \"Void symbol\" },\n\n// Group XK_MISCELLANY\n/*\n * TTY function keys, cleverly chosen to map to ASCII, for convenience of\n * programming, but could have been arbitrary (at the cost of lookup\n * tables in client code).\n */\n\n  XK_BackSpace:                     { code: 0xff08, description: \"Back space, back char\" },\n  XK_Tab:                           { code: 0xff09, description: null },\n  XK_Linefeed:                      { code: 0xff0a, description: \"Linefeed, LF\" },\n  XK_Clear:                         { code: 0xff0b, description: null },\n  XK_Return:                        { code: 0xff0d, description: \"Return, enter\" },\n  XK_Pause:                         { code: 0xff13, description: \"Pause, hold\" },\n  XK_Scroll_Lock:                   { code: 0xff14, description: null },\n  XK_Sys_Req:                       { code: 0xff15, description: null },\n  XK_Escape:                        { code: 0xff1b, description: null },\n  XK_Delete:                        { code: 0xffff, description: \"Delete, rubout\" },\n\n\n\n/* International & multi-key character composition */\n\n  XK_Multi_key:                     { code: 0xff20, description: \"Multi-key character compose\" },\n  XK_Codeinput:                     { code: 0xff37, description: null },\n  XK_SingleCandidate:               { code: 0xff3c, description: null },\n  XK_MultipleCandidate:             { code: 0xff3d, description: null },\n  XK_PreviousCandidate:             { code: 0xff3e, description: null },\n\n/* Japanese keyboard support */\n\n  XK_Kanji:                         { code: 0xff21, description: \"Kanji, Kanji convert\" },\n  XK_Muhenkan:                      { code: 0xff22, description: \"Cancel Conversion\" },\n  XK_Henkan_Mode:                   { code: 0xff23, description: \"Start/Stop Conversion\" },\n  XK_Henkan:                        { code: 0xff23, description: \"Alias for Henkan_Mode\" },\n  XK_Romaji:                        { code: 0xff24, description: \"to Romaji\" },\n  XK_Hiragana:                      { code: 0xff25, description: \"to Hiragana\" },\n  XK_Katakana:                      { code: 0xff26, description: \"to Katakana\" },\n  XK_Hiragana_Katakana:             { code: 0xff27, description: \"Hiragana/Katakana toggle\" },\n  XK_Zenkaku:                       { code: 0xff28, description: \"to Zenkaku\" },\n  XK_Hankaku:                       { code: 0xff29, description: \"to Hankaku\" },\n  XK_Zenkaku_Hankaku:               { code: 0xff2a, description: \"Zenkaku/Hankaku toggle\" },\n  XK_Touroku:                       { code: 0xff2b, description: \"Add to Dictionary\" },\n  XK_Massyo:                        { code: 0xff2c, description: \"Delete from Dictionary\" },\n  XK_Kana_Lock:                     { code: 0xff2d, description: \"Kana Lock\" },\n  XK_Kana_Shift:                    { code: 0xff2e, description: \"Kana Shift\" },\n  XK_Eisu_Shift:                    { code: 0xff2f, description: \"Alphanumeric Shift\" },\n  XK_Eisu_toggle:                   { code: 0xff30, description: \"Alphanumeric toggle\" },\n  XK_Kanji_Bangou:                  { code: 0xff37, description: \"Codeinput\" },\n  XK_Zen_Koho:                      { code: 0xff3d, description: \"Multiple/All Candidate(s)\" },\n  XK_Mae_Koho:                      { code: 0xff3e, description: \"Previous Candidate\" },\n\n/* 0xff31 thru 0xff3f are under XK_KOREAN */\n\n/* Cursor control & motion */\n\n  XK_Home:                          { code: 0xff50, description: null },\n  XK_Left:                          { code: 0xff51, description: \"Move left, left arrow\" },\n  XK_Up:                            { code: 0xff52, description: \"Move up, up arrow\" },\n  XK_Right:                         { code: 0xff53, description: \"Move right, right arrow\" },\n  XK_Down:                          { code: 0xff54, description: \"Move down, down arrow\" },\n  XK_Prior:                         { code: 0xff55, description: \"Prior, previous\" },\n  XK_Page_Up:                       { code: 0xff55, description: null },\n  XK_Next:                          { code: 0xff56, description: \"Next\" },\n  XK_Page_Down:                     { code: 0xff56, description: null },\n  XK_End:                           { code: 0xff57, description: \"EOL\" },\n  XK_Begin:                         { code: 0xff58, description: \"BOL\" },\n\n\n/* Misc functions */\n\n  XK_Select:                        { code: 0xff60, description: \"Select, mark\" },\n  XK_Print:                         { code: 0xff61, description: null },\n  XK_Execute:                       { code: 0xff62, description: \"Execute, run, do\" },\n  XK_Insert:                        { code: 0xff63, description: \"Insert, insert here\" },\n  XK_Undo:                          { code: 0xff65, description: null },\n  XK_Redo:                          { code: 0xff66, description: \"Redo, again\" },\n  XK_Menu:                          { code: 0xff67, description: null },\n  XK_Find:                          { code: 0xff68, description: \"Find, search\" },\n  XK_Cancel:                        { code: 0xff69, description: \"Cancel, stop, abort, exit\" },\n  XK_Help:                          { code: 0xff6a, description: \"Help\" },\n  XK_Break:                         { code: 0xff6b, description: null },\n  XK_Mode_switch:                   { code: 0xff7e, description: \"Character set switch\" },\n  XK_script_switch:                 { code: 0xff7e, description: \"Alias for mode_switch\" },\n  XK_Num_Lock:                      { code: 0xff7f, description: null },\n\n/* Keypad functions, keypad numbers cleverly chosen to map to ASCII */\n\n  XK_KP_Space:                      { code: 0xff80, description: \"Space\" },\n  XK_KP_Tab:                        { code: 0xff89, description: null },\n  XK_KP_Enter:                      { code: 0xff8d, description: \"Enter\" },\n  XK_KP_F1:                         { code: 0xff91, description: \"PF1, KP_A, ...\" },\n  XK_KP_F2:                         { code: 0xff92, description: null },\n  XK_KP_F3:                         { code: 0xff93, description: null },\n  XK_KP_F4:                         { code: 0xff94, description: null },\n  XK_KP_Home:                       { code: 0xff95, description: null },\n  XK_KP_Left:                       { code: 0xff96, description: null },\n  XK_KP_Up:                         { code: 0xff97, description: null },\n  XK_KP_Right:                      { code: 0xff98, description: null },\n  XK_KP_Down:                       { code: 0xff99, description: null },\n  XK_KP_Prior:                      { code: 0xff9a, description: null },\n  XK_KP_Page_Up:                    { code: 0xff9a, description: null },\n  XK_KP_Next:                       { code: 0xff9b, description: null },\n  XK_KP_Page_Down:                  { code: 0xff9b, description: null },\n  XK_KP_End:                        { code: 0xff9c, description: null },\n  XK_KP_Begin:                      { code: 0xff9d, description: null },\n  XK_KP_Insert:                     { code: 0xff9e, description: null },\n  XK_KP_Delete:                     { code: 0xff9f, description: null },\n  XK_KP_Equal:                      { code: 0xffbd, description: \"Equals\" },\n  XK_KP_Multiply:                   { code: 0xffaa, description: null },\n  XK_KP_Add:                        { code: 0xffab, description: null },\n  XK_KP_Separator:                  { code: 0xffac, description: \"Separator, often comma\" },\n  XK_KP_Subtract:                   { code: 0xffad, description: null },\n  XK_KP_Decimal:                    { code: 0xffae, description: null },\n  XK_KP_Divide:                     { code: 0xffaf, description: null },\n\n  XK_KP_0:                          { code: 0xffb0, description: null },\n  XK_KP_1:                          { code: 0xffb1, description: null },\n  XK_KP_2:                          { code: 0xffb2, description: null },\n  XK_KP_3:                          { code: 0xffb3, description: null },\n  XK_KP_4:                          { code: 0xffb4, description: null },\n  XK_KP_5:                          { code: 0xffb5, description: null },\n  XK_KP_6:                          { code: 0xffb6, description: null },\n  XK_KP_7:                          { code: 0xffb7, description: null },\n  XK_KP_8:                          { code: 0xffb8, description: null },\n  XK_KP_9:                          { code: 0xffb9, description: null },\n\n\n\n/*\n * Auxiliary functions; note the duplicate definitions for left and right\n * function keys;  Sun keyboards and a few other manufacturers have such\n * function key groups on the left and/or right sides of the keyboard.\n * We've not found a keyboard with more than 35 function keys total.\n */\n\n  XK_F1:                            { code: 0xffbe, description: null },\n  XK_F2:                            { code: 0xffbf, description: null },\n  XK_F3:                            { code: 0xffc0, description: null },\n  XK_F4:                            { code: 0xffc1, description: null },\n  XK_F5:                            { code: 0xffc2, description: null },\n  XK_F6:                            { code: 0xffc3, description: null },\n  XK_F7:                            { code: 0xffc4, description: null },\n  XK_F8:                            { code: 0xffc5, description: null },\n  XK_F9:                            { code: 0xffc6, description: null },\n  XK_F10:                           { code: 0xffc7, description: null },\n  XK_F11:                           { code: 0xffc8, description: null },\n  XK_L1:                            { code: 0xffc8, description: null },\n  XK_F12:                           { code: 0xffc9, description: null },\n  XK_L2:                            { code: 0xffc9, description: null },\n  XK_F13:                           { code: 0xffca, description: null },\n  XK_L3:                            { code: 0xffca, description: null },\n  XK_F14:                           { code: 0xffcb, description: null },\n  XK_L4:                            { code: 0xffcb, description: null },\n  XK_F15:                           { code: 0xffcc, description: null },\n  XK_L5:                            { code: 0xffcc, description: null },\n  XK_F16:                           { code: 0xffcd, description: null },\n  XK_L6:                            { code: 0xffcd, description: null },\n  XK_F17:                           { code: 0xffce, description: null },\n  XK_L7:                            { code: 0xffce, description: null },\n  XK_F18:                           { code: 0xffcf, description: null },\n  XK_L8:                            { code: 0xffcf, description: null },\n  XK_F19:                           { code: 0xffd0, description: null },\n  XK_L9:                            { code: 0xffd0, description: null },\n  XK_F20:                           { code: 0xffd1, description: null },\n  XK_L10:                           { code: 0xffd1, description: null },\n  XK_F21:                           { code: 0xffd2, description: null },\n  XK_R1:                            { code: 0xffd2, description: null },\n  XK_F22:                           { code: 0xffd3, description: null },\n  XK_R2:                            { code: 0xffd3, description: null },\n  XK_F23:                           { code: 0xffd4, description: null },\n  XK_R3:                            { code: 0xffd4, description: null },\n  XK_F24:                           { code: 0xffd5, description: null },\n  XK_R4:                            { code: 0xffd5, description: null },\n  XK_F25:                           { code: 0xffd6, description: null },\n  XK_R5:                            { code: 0xffd6, description: null },\n  XK_F26:                           { code: 0xffd7, description: null },\n  XK_R6:                            { code: 0xffd7, description: null },\n  XK_F27:                           { code: 0xffd8, description: null },\n  XK_R7:                            { code: 0xffd8, description: null },\n  XK_F28:                           { code: 0xffd9, description: null },\n  XK_R8:                            { code: 0xffd9, description: null },\n  XK_F29:                           { code: 0xffda, description: null },\n  XK_R9:                            { code: 0xffda, description: null },\n  XK_F30:                           { code: 0xffdb, description: null },\n  XK_R10:                           { code: 0xffdb, description: null },\n  XK_F31:                           { code: 0xffdc, description: null },\n  XK_R11:                           { code: 0xffdc, description: null },\n  XK_F32:                           { code: 0xffdd, description: null },\n  XK_R12:                           { code: 0xffdd, description: null },\n  XK_F33:                           { code: 0xffde, description: null },\n  XK_R13:                           { code: 0xffde, description: null },\n  XK_F34:                           { code: 0xffdf, description: null },\n  XK_R14:                           { code: 0xffdf, description: null },\n  XK_F35:                           { code: 0xffe0, description: null },\n  XK_R15:                           { code: 0xffe0, description: null },\n\n/* Modifiers */\n\n  XK_Shift_L:                       { code: 0xffe1, description: \"Left shift\" },\n  XK_Shift_R:                       { code: 0xffe2, description: \"Right shift\" },\n  XK_Control_L:                     { code: 0xffe3, description: \"Left control\" },\n  XK_Control_R:                     { code: 0xffe4, description: \"Right control\" },\n  XK_Caps_Lock:                     { code: 0xffe5, description: \"Caps lock\" },\n  XK_Shift_Lock:                    { code: 0xffe6, description: \"Shift lock\" },\n\n  XK_Meta_L:                        { code: 0xffe7, description: \"Left meta\" },\n  XK_Meta_R:                        { code: 0xffe8, description: \"Right meta\" },\n  XK_Alt_L:                         { code: 0xffe9, description: \"Left alt\" },\n  XK_Alt_R:                         { code: 0xffea, description: \"Right alt\" },\n  XK_Super_L:                       { code: 0xffeb, description: \"Left super\" },\n  XK_Super_R:                       { code: 0xffec, description: \"Right super\" },\n  XK_Hyper_L:                       { code: 0xffed, description: \"Left hyper\" },\n  XK_Hyper_R:                       { code: 0xffee, description: \"Right hyper\" },\n\n\n/*\n * Keyboard (XKB) Extension function and modifier keys\n * (from Appendix C of \"The X Keyboard Extension: Protocol Specification\")\n * Byte 3 = 0xfe\n */\n\n// Group XK_XKB_KEYS\n  XK_ISO_Lock:                      { code: 0xfe01, description: null },\n  XK_ISO_Level2_Latch:              { code: 0xfe02, description: null },\n  XK_ISO_Level3_Shift:              { code: 0xfe03, description: null },\n  XK_ISO_Level3_Latch:              { code: 0xfe04, description: null },\n  XK_ISO_Level3_Lock:               { code: 0xfe05, description: null },\n  XK_ISO_Level5_Shift:              { code: 0xfe11, description: null },\n  XK_ISO_Level5_Latch:              { code: 0xfe12, description: null },\n  XK_ISO_Level5_Lock:               { code: 0xfe13, description: null },\n  XK_ISO_Group_Shift:               { code: 0xff7e, description: \"Alias for mode_switch\" },\n  XK_ISO_Group_Latch:               { code: 0xfe06, description: null },\n  XK_ISO_Group_Lock:                { code: 0xfe07, description: null },\n  XK_ISO_Next_Group:                { code: 0xfe08, description: null },\n  XK_ISO_Next_Group_Lock:           { code: 0xfe09, description: null },\n  XK_ISO_Prev_Group:                { code: 0xfe0a, description: null },\n  XK_ISO_Prev_Group_Lock:           { code: 0xfe0b, description: null },\n  XK_ISO_First_Group:               { code: 0xfe0c, description: null },\n  XK_ISO_First_Group_Lock:          { code: 0xfe0d, description: null },\n  XK_ISO_Last_Group:                { code: 0xfe0e, description: null },\n  XK_ISO_Last_Group_Lock:           { code: 0xfe0f, description: null },\n\n  XK_ISO_Left_Tab:                  { code: 0xfe20, description: null },\n  XK_ISO_Move_Line_Up:              { code: 0xfe21, description: null },\n  XK_ISO_Move_Line_Down:            { code: 0xfe22, description: null },\n  XK_ISO_Partial_Line_Up:           { code: 0xfe23, description: null },\n  XK_ISO_Partial_Line_Down:         { code: 0xfe24, description: null },\n  XK_ISO_Partial_Space_Left:        { code: 0xfe25, description: null },\n  XK_ISO_Partial_Space_Right:       { code: 0xfe26, description: null },\n  XK_ISO_Set_Margin_Left:           { code: 0xfe27, description: null },\n  XK_ISO_Set_Margin_Right:          { code: 0xfe28, description: null },\n  XK_ISO_Release_Margin_Left:       { code: 0xfe29, description: null },\n  XK_ISO_Release_Margin_Right:      { code: 0xfe2a, description: null },\n  XK_ISO_Release_Both_Margins:      { code: 0xfe2b, description: null },\n  XK_ISO_Fast_Cursor_Left:          { code: 0xfe2c, description: null },\n  XK_ISO_Fast_Cursor_Right:         { code: 0xfe2d, description: null },\n  XK_ISO_Fast_Cursor_Up:            { code: 0xfe2e, description: null },\n  XK_ISO_Fast_Cursor_Down:          { code: 0xfe2f, description: null },\n  XK_ISO_Continuous_Underline:      { code: 0xfe30, description: null },\n  XK_ISO_Discontinuous_Underline:   { code: 0xfe31, description: null },\n  XK_ISO_Emphasize:                 { code: 0xfe32, description: null },\n  XK_ISO_Center_Object:             { code: 0xfe33, description: null },\n  XK_ISO_Enter:                     { code: 0xfe34, description: null },\n\n  XK_dead_grave:                    { code: 0xfe50, description: null },\n  XK_dead_acute:                    { code: 0xfe51, description: null },\n  XK_dead_circumflex:               { code: 0xfe52, description: null },\n  XK_dead_tilde:                    { code: 0xfe53, description: null },\n  XK_dead_perispomeni:              { code: 0xfe53, description: \"alias for dead_tilde\" },\n  XK_dead_macron:                   { code: 0xfe54, description: null },\n  XK_dead_breve:                    { code: 0xfe55, description: null },\n  XK_dead_abovedot:                 { code: 0xfe56, description: null },\n  XK_dead_diaeresis:                { code: 0xfe57, description: null },\n  XK_dead_abovering:                { code: 0xfe58, description: null },\n  XK_dead_doubleacute:              { code: 0xfe59, description: null },\n  XK_dead_caron:                    { code: 0xfe5a, description: null },\n  XK_dead_cedilla:                  { code: 0xfe5b, description: null },\n  XK_dead_ogonek:                   { code: 0xfe5c, description: null },\n  XK_dead_iota:                     { code: 0xfe5d, description: null },\n  XK_dead_voiced_sound:             { code: 0xfe5e, description: null },\n  XK_dead_semivoiced_sound:         { code: 0xfe5f, description: null },\n  XK_dead_belowdot:                 { code: 0xfe60, description: null },\n  XK_dead_hook:                     { code: 0xfe61, description: null },\n  XK_dead_horn:                     { code: 0xfe62, description: null },\n  XK_dead_stroke:                   { code: 0xfe63, description: null },\n  XK_dead_abovecomma:               { code: 0xfe64, description: null },\n  XK_dead_psili:                    { code: 0xfe64, description: \"alias for dead_abovecomma\" },\n  XK_dead_abovereversedcomma:       { code: 0xfe65, description: null },\n  XK_dead_dasia:                    { code: 0xfe65, description: \"alias for dead_abovereversedcomma\" },\n  XK_dead_doublegrave:              { code: 0xfe66, description: null },\n  XK_dead_belowring:                { code: 0xfe67, description: null },\n  XK_dead_belowmacron:              { code: 0xfe68, description: null },\n  XK_dead_belowcircumflex:          { code: 0xfe69, description: null },\n  XK_dead_belowtilde:               { code: 0xfe6a, description: null },\n  XK_dead_belowbreve:               { code: 0xfe6b, description: null },\n  XK_dead_belowdiaeresis:           { code: 0xfe6c, description: null },\n  XK_dead_invertedbreve:            { code: 0xfe6d, description: null },\n  XK_dead_belowcomma:               { code: 0xfe6e, description: null },\n  XK_dead_currency:                 { code: 0xfe6f, description: null },\n\n/* extra dead elements for German T3 layout */\n  XK_dead_lowline:                  { code: 0xfe90, description: null },\n  XK_dead_aboveverticalline:        { code: 0xfe91, description: null },\n  XK_dead_belowverticalline:        { code: 0xfe92, description: null },\n  XK_dead_longsolidusoverlay:       { code: 0xfe93, description: null },\n\n/* dead vowels for universal syllable entry */\n  XK_dead_a:                        { code: 0xfe80, description: null },\n  XK_dead_A:                        { code: 0xfe81, description: null },\n  XK_dead_e:                        { code: 0xfe82, description: null },\n  XK_dead_E:                        { code: 0xfe83, description: null },\n  XK_dead_i:                        { code: 0xfe84, description: null },\n  XK_dead_I:                        { code: 0xfe85, description: null },\n  XK_dead_o:                        { code: 0xfe86, description: null },\n  XK_dead_O:                        { code: 0xfe87, description: null },\n  XK_dead_u:                        { code: 0xfe88, description: null },\n  XK_dead_U:                        { code: 0xfe89, description: null },\n  XK_dead_small_schwa:              { code: 0xfe8a, description: null },\n  XK_dead_capital_schwa:            { code: 0xfe8b, description: null },\n\n  XK_dead_greek:                    { code: 0xfe8c, description: null },\n\n  XK_First_Virtual_Screen:          { code: 0xfed0, description: null },\n  XK_Prev_Virtual_Screen:           { code: 0xfed1, description: null },\n  XK_Next_Virtual_Screen:           { code: 0xfed2, description: null },\n  XK_Last_Virtual_Screen:           { code: 0xfed4, description: null },\n  XK_Terminate_Server:              { code: 0xfed5, description: null },\n\n  XK_AccessX_Enable:                { code: 0xfe70, description: null },\n  XK_AccessX_Feedback_Enable:       { code: 0xfe71, description: null },\n  XK_RepeatKeys_Enable:             { code: 0xfe72, description: null },\n  XK_SlowKeys_Enable:               { code: 0xfe73, description: null },\n  XK_BounceKeys_Enable:             { code: 0xfe74, description: null },\n  XK_StickyKeys_Enable:             { code: 0xfe75, description: null },\n  XK_MouseKeys_Enable:              { code: 0xfe76, description: null },\n  XK_MouseKeys_Accel_Enable:        { code: 0xfe77, description: null },\n  XK_Overlay1_Enable:               { code: 0xfe78, description: null },\n  XK_Overlay2_Enable:               { code: 0xfe79, description: null },\n  XK_AudibleBell_Enable:            { code: 0xfe7a, description: null },\n\n  XK_Pointer_Left:                  { code: 0xfee0, description: null },\n  XK_Pointer_Right:                 { code: 0xfee1, description: null },\n  XK_Pointer_Up:                    { code: 0xfee2, description: null },\n  XK_Pointer_Down:                  { code: 0xfee3, description: null },\n  XK_Pointer_UpLeft:                { code: 0xfee4, description: null },\n  XK_Pointer_UpRight:               { code: 0xfee5, description: null },\n  XK_Pointer_DownLeft:              { code: 0xfee6, description: null },\n  XK_Pointer_DownRight:             { code: 0xfee7, description: null },\n  XK_Pointer_Button_Dflt:           { code: 0xfee8, description: null },\n  XK_Pointer_Button1:               { code: 0xfee9, description: null },\n  XK_Pointer_Button2:               { code: 0xfeea, description: null },\n  XK_Pointer_Button3:               { code: 0xfeeb, description: null },\n  XK_Pointer_Button4:               { code: 0xfeec, description: null },\n  XK_Pointer_Button5:               { code: 0xfeed, description: null },\n  XK_Pointer_DblClick_Dflt:         { code: 0xfeee, description: null },\n  XK_Pointer_DblClick1:             { code: 0xfeef, description: null },\n  XK_Pointer_DblClick2:             { code: 0xfef0, description: null },\n  XK_Pointer_DblClick3:             { code: 0xfef1, description: null },\n  XK_Pointer_DblClick4:             { code: 0xfef2, description: null },\n  XK_Pointer_DblClick5:             { code: 0xfef3, description: null },\n  XK_Pointer_Drag_Dflt:             { code: 0xfef4, description: null },\n  XK_Pointer_Drag1:                 { code: 0xfef5, description: null },\n  XK_Pointer_Drag2:                 { code: 0xfef6, description: null },\n  XK_Pointer_Drag3:                 { code: 0xfef7, description: null },\n  XK_Pointer_Drag4:                 { code: 0xfef8, description: null },\n  XK_Pointer_Drag5:                 { code: 0xfefd, description: null },\n\n  XK_Pointer_EnableKeys:            { code: 0xfef9, description: null },\n  XK_Pointer_Accelerate:            { code: 0xfefa, description: null },\n  XK_Pointer_DfltBtnNext:           { code: 0xfefb, description: null },\n  XK_Pointer_DfltBtnPrev:           { code: 0xfefc, description: null },\n\n/* Single-Stroke Multiple-Character N-Graph Keysyms For The X Input Method */\n\n  XK_ch:                            { code: 0xfea0, description: null },\n  XK_Ch:                            { code: 0xfea1, description: null },\n  XK_CH:                            { code: 0xfea2, description: null },\n  XK_c_h:                           { code: 0xfea3, description: null },\n  XK_C_h:                           { code: 0xfea4, description: null },\n  XK_C_H:                           { code: 0xfea5, description: null },\n\n\n\n/*\n * 3270 Terminal Keys\n * Byte 3 = 0xfd\n */\n\n// Group XK_3270\n  XK_3270_Duplicate:                { code: 0xfd01, description: null },\n  XK_3270_FieldMark:                { code: 0xfd02, description: null },\n  XK_3270_Right2:                   { code: 0xfd03, description: null },\n  XK_3270_Left2:                    { code: 0xfd04, description: null },\n  XK_3270_BackTab:                  { code: 0xfd05, description: null },\n  XK_3270_EraseEOF:                 { code: 0xfd06, description: null },\n  XK_3270_EraseInput:               { code: 0xfd07, description: null },\n  XK_3270_Reset:                    { code: 0xfd08, description: null },\n  XK_3270_Quit:                     { code: 0xfd09, description: null },\n  XK_3270_PA1:                      { code: 0xfd0a, description: null },\n  XK_3270_PA2:                      { code: 0xfd0b, description: null },\n  XK_3270_PA3:                      { code: 0xfd0c, description: null },\n  XK_3270_Test:                     { code: 0xfd0d, description: null },\n  XK_3270_Attn:                     { code: 0xfd0e, description: null },\n  XK_3270_CursorBlink:              { code: 0xfd0f, description: null },\n  XK_3270_AltCursor:                { code: 0xfd10, description: null },\n  XK_3270_KeyClick:                 { code: 0xfd11, description: null },\n  XK_3270_Jump:                     { code: 0xfd12, description: null },\n  XK_3270_Ident:                    { code: 0xfd13, description: null },\n  XK_3270_Rule:                     { code: 0xfd14, description: null },\n  XK_3270_Copy:                     { code: 0xfd15, description: null },\n  XK_3270_Play:                     { code: 0xfd16, description: null },\n  XK_3270_Setup:                    { code: 0xfd17, description: null },\n  XK_3270_Record:                   { code: 0xfd18, description: null },\n  XK_3270_ChangeScreen:             { code: 0xfd19, description: null },\n  XK_3270_DeleteWord:               { code: 0xfd1a, description: null },\n  XK_3270_ExSelect:                 { code: 0xfd1b, description: null },\n  XK_3270_CursorSelect:             { code: 0xfd1c, description: null },\n  XK_3270_PrintScreen:              { code: 0xfd1d, description: null },\n  XK_3270_Enter:                    { code: 0xfd1e, description: null },\n\n\n/*\n * Latin 1\n * (ISO/IEC 8859-1 = Unicode (\\u0020)..U+00FF)\n * Byte 3 = 0\n */\n// Group XK_LATIN1\n  XK_space:                         { code: 0x0020, description: \"(\\u0020) SPACE\" },\n  XK_exclam:                        { code: 0x0021, description: \"(\\u0021) EXCLAMATION MARK\" },\n  XK_quotedbl:                      { code: 0x0022, description: \"(\\u0022) QUOTATION MARK\" },\n  XK_numbersign:                    { code: 0x0023, description: \"(\\u0023) NUMBER SIGN\" },\n  XK_dollar:                        { code: 0x0024, description: \"(\\u0024) DOLLAR SIGN\" },\n  XK_percent:                       { code: 0x0025, description: \"(\\u0025) PERCENT SIGN\" },\n  XK_ampersand:                     { code: 0x0026, description: \"(\\u0026) AMPERSAND\" },\n  XK_apostrophe:                    { code: 0x0027, description: \"(\\u0027) APOSTROPHE\" },\n  XK_quoteright:                    { code: 0x0027, description: \"deprecated\" },\n  XK_parenleft:                     { code: 0x0028, description: \"(\\u0028) LEFT PARENTHESIS\" },\n  XK_parenright:                    { code: 0x0029, description: \"(\\u0029) RIGHT PARENTHESIS\" },\n  XK_asterisk:                      { code: 0x002a, description: \"(\\u002A) ASTERISK\" },\n  XK_plus:                          { code: 0x002b, description: \"(\\u002B) PLUS SIGN\" },\n  XK_comma:                         { code: 0x002c, description: \"(\\u002C) COMMA\" },\n  XK_minus:                         { code: 0x002d, description: \"(\\u002D) HYPHEN-MINUS\" },\n  XK_period:                        { code: 0x002e, description: \"(\\u002E) FULL STOP\" },\n  XK_slash:                         { code: 0x002f, description: \"(\\u002F) SOLIDUS\" },\n  XK_0:                             { code: 0x0030, description: \"(\\u0030) DIGIT ZERO\" },\n  XK_1:                             { code: 0x0031, description: \"(\\u0031) DIGIT ONE\" },\n  XK_2:                             { code: 0x0032, description: \"(\\u0032) DIGIT TWO\" },\n  XK_3:                             { code: 0x0033, description: \"(\\u0033) DIGIT THREE\" },\n  XK_4:                             { code: 0x0034, description: \"(\\u0034) DIGIT FOUR\" },\n  XK_5:                             { code: 0x0035, description: \"(\\u0035) DIGIT FIVE\" },\n  XK_6:                             { code: 0x0036, description: \"(\\u0036) DIGIT SIX\" },\n  XK_7:                             { code: 0x0037, description: \"(\\u0037) DIGIT SEVEN\" },\n  XK_8:                             { code: 0x0038, description: \"(\\u0038) DIGIT EIGHT\" },\n  XK_9:                             { code: 0x0039, description: \"(\\u0039) DIGIT NINE\" },\n  XK_colon:                         { code: 0x003a, description: \"(\\u003A) COLON\" },\n  XK_semicolon:                     { code: 0x003b, description: \"(\\u003B) SEMICOLON\" },\n  XK_less:                          { code: 0x003c, description: \"(\\u003C) LESS-THAN SIGN\" },\n  XK_equal:                         { code: 0x003d, description: \"(\\u003D) EQUALS SIGN\" },\n  XK_greater:                       { code: 0x003e, description: \"(\\u003E) GREATER-THAN SIGN\" },\n  XK_question:                      { code: 0x003f, description: \"(\\u003F) QUESTION MARK\" },\n  XK_at:                            { code: 0x0040, description: \"(\\u0040) COMMERCIAL AT\" },\n  XK_A:                             { code: 0x0041, description: \"(\\u0041) LATIN CAPITAL LETTER A\" },\n  XK_B:                             { code: 0x0042, description: \"(\\u0042) LATIN CAPITAL LETTER B\" },\n  XK_C:                             { code: 0x0043, description: \"(\\u0043) LATIN CAPITAL LETTER C\" },\n  XK_D:                             { code: 0x0044, description: \"(\\u0044) LATIN CAPITAL LETTER D\" },\n  XK_E:                             { code: 0x0045, description: \"(\\u0045) LATIN CAPITAL LETTER E\" },\n  XK_F:                             { code: 0x0046, description: \"(\\u0046) LATIN CAPITAL LETTER F\" },\n  XK_G:                             { code: 0x0047, description: \"(\\u0047) LATIN CAPITAL LETTER G\" },\n  XK_H:                             { code: 0x0048, description: \"(\\u0048) LATIN CAPITAL LETTER H\" },\n  XK_I:                             { code: 0x0049, description: \"(\\u0049) LATIN CAPITAL LETTER I\" },\n  XK_J:                             { code: 0x004a, description: \"(\\u004A) LATIN CAPITAL LETTER J\" },\n  XK_K:                             { code: 0x004b, description: \"(\\u004B) LATIN CAPITAL LETTER K\" },\n  XK_L:                             { code: 0x004c, description: \"(\\u004C) LATIN CAPITAL LETTER L\" },\n  XK_M:                             { code: 0x004d, description: \"(\\u004D) LATIN CAPITAL LETTER M\" },\n  XK_N:                             { code: 0x004e, description: \"(\\u004E) LATIN CAPITAL LETTER N\" },\n  XK_O:                             { code: 0x004f, description: \"(\\u004F) LATIN CAPITAL LETTER O\" },\n  XK_P:                             { code: 0x0050, description: \"(\\u0050) LATIN CAPITAL LETTER P\" },\n  XK_Q:                             { code: 0x0051, description: \"(\\u0051) LATIN CAPITAL LETTER Q\" },\n  XK_R:                             { code: 0x0052, description: \"(\\u0052) LATIN CAPITAL LETTER R\" },\n  XK_S:                             { code: 0x0053, description: \"(\\u0053) LATIN CAPITAL LETTER S\" },\n  XK_T:                             { code: 0x0054, description: \"(\\u0054) LATIN CAPITAL LETTER T\" },\n  XK_U:                             { code: 0x0055, description: \"(\\u0055) LATIN CAPITAL LETTER U\" },\n  XK_V:                             { code: 0x0056, description: \"(\\u0056) LATIN CAPITAL LETTER V\" },\n  XK_W:                             { code: 0x0057, description: \"(\\u0057) LATIN CAPITAL LETTER W\" },\n  XK_X:                             { code: 0x0058, description: \"(\\u0058) LATIN CAPITAL LETTER X\" },\n  XK_Y:                             { code: 0x0059, description: \"(\\u0059) LATIN CAPITAL LETTER Y\" },\n  XK_Z:                             { code: 0x005a, description: \"(\\u005A) LATIN CAPITAL LETTER Z\" },\n  XK_bracketleft:                   { code: 0x005b, description: \"(\\u005B) LEFT SQUARE BRACKET\" },\n  XK_backslash:                     { code: 0x005c, description: \"(\\u005C) REVERSE SOLIDUS\" },\n  XK_bracketright:                  { code: 0x005d, description: \"(\\u005D) RIGHT SQUARE BRACKET\" },\n  XK_asciicircum:                   { code: 0x005e, description: \"(\\u005E) CIRCUMFLEX ACCENT\" },\n  XK_underscore:                    { code: 0x005f, description: \"(\\u005F) LOW LINE\" },\n  XK_grave:                         { code: 0x0060, description: \"(\\u0060) GRAVE ACCENT\" },\n  XK_quoteleft:                     { code: 0x0060, description: \"deprecated\" },\n  XK_a:                             { code: 0x0061, description: \"(\\u0061) LATIN SMALL LETTER A\" },\n  XK_b:                             { code: 0x0062, description: \"(\\u0062) LATIN SMALL LETTER B\" },\n  XK_c:                             { code: 0x0063, description: \"(\\u0063) LATIN SMALL LETTER C\" },\n  XK_d:                             { code: 0x0064, description: \"(\\u0064) LATIN SMALL LETTER D\" },\n  XK_e:                             { code: 0x0065, description: \"(\\u0065) LATIN SMALL LETTER E\" },\n  XK_f:                             { code: 0x0066, description: \"(\\u0066) LATIN SMALL LETTER F\" },\n  XK_g:                             { code: 0x0067, description: \"(\\u0067) LATIN SMALL LETTER G\" },\n  XK_h:                             { code: 0x0068, description: \"(\\u0068) LATIN SMALL LETTER H\" },\n  XK_i:                             { code: 0x0069, description: \"(\\u0069) LATIN SMALL LETTER I\" },\n  XK_j:                             { code: 0x006a, description: \"(\\u006A) LATIN SMALL LETTER J\" },\n  XK_k:                             { code: 0x006b, description: \"(\\u006B) LATIN SMALL LETTER K\" },\n  XK_l:                             { code: 0x006c, description: \"(\\u006C) LATIN SMALL LETTER L\" },\n  XK_m:                             { code: 0x006d, description: \"(\\u006D) LATIN SMALL LETTER M\" },\n  XK_n:                             { code: 0x006e, description: \"(\\u006E) LATIN SMALL LETTER N\" },\n  XK_o:                             { code: 0x006f, description: \"(\\u006F) LATIN SMALL LETTER O\" },\n  XK_p:                             { code: 0x0070, description: \"(\\u0070) LATIN SMALL LETTER P\" },\n  XK_q:                             { code: 0x0071, description: \"(\\u0071) LATIN SMALL LETTER Q\" },\n  XK_r:                             { code: 0x0072, description: \"(\\u0072) LATIN SMALL LETTER R\" },\n  XK_s:                             { code: 0x0073, description: \"(\\u0073) LATIN SMALL LETTER S\" },\n  XK_t:                             { code: 0x0074, description: \"(\\u0074) LATIN SMALL LETTER T\" },\n  XK_u:                             { code: 0x0075, description: \"(\\u0075) LATIN SMALL LETTER U\" },\n  XK_v:                             { code: 0x0076, description: \"(\\u0076) LATIN SMALL LETTER V\" },\n  XK_w:                             { code: 0x0077, description: \"(\\u0077) LATIN SMALL LETTER W\" },\n  XK_x:                             { code: 0x0078, description: \"(\\u0078) LATIN SMALL LETTER X\" },\n  XK_y:                             { code: 0x0079, description: \"(\\u0079) LATIN SMALL LETTER Y\" },\n  XK_z:                             { code: 0x007a, description: \"(\\u007A) LATIN SMALL LETTER Z\" },\n  XK_braceleft:                     { code: 0x007b, description: \"(\\u007B) LEFT CURLY BRACKET\" },\n  XK_bar:                           { code: 0x007c, description: \"(\\u007C) VERTICAL LINE\" },\n  XK_braceright:                    { code: 0x007d, description: \"(\\u007D) RIGHT CURLY BRACKET\" },\n  XK_asciitilde:                    { code: 0x007e, description: \"(\\u007E) TILDE\" },\n\n  XK_nobreakspace:                  { code: 0x00a0, description: \"(\\u00A0) NO-BREAK SPACE\" },\n  XK_exclamdown:                    { code: 0x00a1, description: \"(\\u00A1) INVERTED EXCLAMATION MARK\" },\n  XK_cent:                          { code: 0x00a2, description: \"(\\u00A2) CENT SIGN\" },\n  XK_sterling:                      { code: 0x00a3, description: \"(\\u00A3) POUND SIGN\" },\n  XK_currency:                      { code: 0x00a4, description: \"(\\u00A4) CURRENCY SIGN\" },\n  XK_yen:                           { code: 0x00a5, description: \"(\\u00A5) YEN SIGN\" },\n  XK_brokenbar:                     { code: 0x00a6, description: \"(\\u00A6) BROKEN BAR\" },\n  XK_section:                       { code: 0x00a7, description: \"(\\u00A7) SECTION SIGN\" },\n  XK_diaeresis:                     { code: 0x00a8, description: \"(\\u00A8) DIAERESIS\" },\n  XK_copyright:                     { code: 0x00a9, description: \"(\\u00A9) COPYRIGHT SIGN\" },\n  XK_ordfeminine:                   { code: 0x00aa, description: \"(\\u00AA) FEMININE ORDINAL INDICATOR\" },\n  XK_guillemotleft:                 { code: 0x00ab, description: \"(\\u00AB) LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\" },\n  XK_notsign:                       { code: 0x00ac, description: \"(\\u00AC) NOT SIGN\" },\n  XK_hyphen:                        { code: 0x00ad, description: \"(\\u00AD) SOFT HYPHEN\" },\n  XK_registered:                    { code: 0x00ae, description: \"(\\u00AE) REGISTERED SIGN\" },\n  XK_macron:                        { code: 0x00af, description: \"(\\u00AF) MACRON\" },\n  XK_degree:                        { code: 0x00b0, description: \"(\\u00B0) DEGREE SIGN\" },\n  XK_plusminus:                     { code: 0x00b1, description: \"(\\u00B1) PLUS-MINUS SIGN\" },\n  XK_twosuperior:                   { code: 0x00b2, description: \"(\\u00B2) SUPERSCRIPT TWO\" },\n  XK_threesuperior:                 { code: 0x00b3, description: \"(\\u00B3) SUPERSCRIPT THREE\" },\n  XK_acute:                         { code: 0x00b4, description: \"(\\u00B4) ACUTE ACCENT\" },\n  XK_mu:                            { code: 0x00b5, description: \"(\\u00B5) MICRO SIGN\" },\n  XK_paragraph:                     { code: 0x00b6, description: \"(\\u00B6) PILCROW SIGN\" },\n  XK_periodcentered:                { code: 0x00b7, description: \"(\\u00B7) MIDDLE DOT\" },\n  XK_cedilla:                       { code: 0x00b8, description: \"(\\u00B8) CEDILLA\" },\n  XK_onesuperior:                   { code: 0x00b9, description: \"(\\u00B9) SUPERSCRIPT ONE\" },\n  XK_masculine:                     { code: 0x00ba, description: \"(\\u00BA) MASCULINE ORDINAL INDICATOR\" },\n  XK_guillemotright:                { code: 0x00bb, description: \"(\\u00BB) RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\" },\n  XK_onequarter:                    { code: 0x00bc, description: \"(\\u00BC) VULGAR FRACTION ONE QUARTER\" },\n  XK_onehalf:                       { code: 0x00bd, description: \"(\\u00BD) VULGAR FRACTION ONE HALF\" },\n  XK_threequarters:                 { code: 0x00be, description: \"(\\u00BE) VULGAR FRACTION THREE QUARTERS\" },\n  XK_questiondown:                  { code: 0x00bf, description: \"(\\u00BF) INVERTED QUESTION MARK\" },\n  XK_Agrave:                        { code: 0x00c0, description: \"(\\u00C0) LATIN CAPITAL LETTER A WITH GRAVE\" },\n  XK_Aacute:                        { code: 0x00c1, description: \"(\\u00C1) LATIN CAPITAL LETTER A WITH ACUTE\" },\n  XK_Acircumflex:                   { code: 0x00c2, description: \"(\\u00C2) LATIN CAPITAL LETTER A WITH CIRCUMFLEX\" },\n  XK_Atilde:                        { code: 0x00c3, description: \"(\\u00C3) LATIN CAPITAL LETTER A WITH TILDE\" },\n  XK_Adiaeresis:                    { code: 0x00c4, description: \"(\\u00C4) LATIN CAPITAL LETTER A WITH DIAERESIS\" },\n  XK_Aring:                         { code: 0x00c5, description: \"(\\u00C5) LATIN CAPITAL LETTER A WITH RING ABOVE\" },\n  XK_AE:                            { code: 0x00c6, description: \"(\\u00C6) LATIN CAPITAL LETTER AE\" },\n  XK_Ccedilla:                      { code: 0x00c7, description: \"(\\u00C7) LATIN CAPITAL LETTER C WITH CEDILLA\" },\n  XK_Egrave:                        { code: 0x00c8, description: \"(\\u00C8) LATIN CAPITAL LETTER E WITH GRAVE\" },\n  XK_Eacute:                        { code: 0x00c9, description: \"(\\u00C9) LATIN CAPITAL LETTER E WITH ACUTE\" },\n  XK_Ecircumflex:                   { code: 0x00ca, description: \"(\\u00CA) LATIN CAPITAL LETTER E WITH CIRCUMFLEX\" },\n  XK_Ediaeresis:                    { code: 0x00cb, description: \"(\\u00CB) LATIN CAPITAL LETTER E WITH DIAERESIS\" },\n  XK_Igrave:                        { code: 0x00cc, description: \"(\\u00CC) LATIN CAPITAL LETTER I WITH GRAVE\" },\n  XK_Iacute:                        { code: 0x00cd, description: \"(\\u00CD) LATIN CAPITAL LETTER I WITH ACUTE\" },\n  XK_Icircumflex:                   { code: 0x00ce, description: \"(\\u00CE) LATIN CAPITAL LETTER I WITH CIRCUMFLEX\" },\n  XK_Idiaeresis:                    { code: 0x00cf, description: \"(\\u00CF) LATIN CAPITAL LETTER I WITH DIAERESIS\" },\n  XK_ETH:                           { code: 0x00d0, description: \"(\\u00D0) LATIN CAPITAL LETTER ETH\" },\n  XK_Eth:                           { code: 0x00d0, description: \"deprecated\" },\n  XK_Ntilde:                        { code: 0x00d1, description: \"(\\u00D1) LATIN CAPITAL LETTER N WITH TILDE\" },\n  XK_Ograve:                        { code: 0x00d2, description: \"(\\u00D2) LATIN CAPITAL LETTER O WITH GRAVE\" },\n  XK_Oacute:                        { code: 0x00d3, description: \"(\\u00D3) LATIN CAPITAL LETTER O WITH ACUTE\" },\n  XK_Ocircumflex:                   { code: 0x00d4, description: \"(\\u00D4) LATIN CAPITAL LETTER O WITH CIRCUMFLEX\" },\n  XK_Otilde:                        { code: 0x00d5, description: \"(\\u00D5) LATIN CAPITAL LETTER O WITH TILDE\" },\n  XK_Odiaeresis:                    { code: 0x00d6, description: \"(\\u00D6) LATIN CAPITAL LETTER O WITH DIAERESIS\" },\n  XK_multiply:                      { code: 0x00d7, description: \"(\\u00D7) MULTIPLICATION SIGN\" },\n  XK_Oslash:                        { code: 0x00d8, description: \"(\\u00D8) LATIN CAPITAL LETTER O WITH STROKE\" },\n  XK_Ooblique:                      { code: 0x00d8, description: \"(\\u00D8) LATIN CAPITAL LETTER O WITH STROKE\" },\n  XK_Ugrave:                        { code: 0x00d9, description: \"(\\u00D9) LATIN CAPITAL LETTER U WITH GRAVE\" },\n  XK_Uacute:                        { code: 0x00da, description: \"(\\u00DA) LATIN CAPITAL LETTER U WITH ACUTE\" },\n  XK_Ucircumflex:                   { code: 0x00db, description: \"(\\u00DB) LATIN CAPITAL LETTER U WITH CIRCUMFLEX\" },\n  XK_Udiaeresis:                    { code: 0x00dc, description: \"(\\u00DC) LATIN CAPITAL LETTER U WITH DIAERESIS\" },\n  XK_Yacute:                        { code: 0x00dd, description: \"(\\u00DD) LATIN CAPITAL LETTER Y WITH ACUTE\" },\n  XK_THORN:                         { code: 0x00de, description: \"(\\u00DE) LATIN CAPITAL LETTER THORN\" },\n  XK_Thorn:                         { code: 0x00de, description: \"deprecated\" },\n  XK_ssharp:                        { code: 0x00df, description: \"(\\u00DF) LATIN SMALL LETTER SHARP S\" },\n  XK_agrave:                        { code: 0x00e0, description: \"(\\u00E0) LATIN SMALL LETTER A WITH GRAVE\" },\n  XK_aacute:                        { code: 0x00e1, description: \"(\\u00E1) LATIN SMALL LETTER A WITH ACUTE\" },\n  XK_acircumflex:                   { code: 0x00e2, description: \"(\\u00E2) LATIN SMALL LETTER A WITH CIRCUMFLEX\" },\n  XK_atilde:                        { code: 0x00e3, description: \"(\\u00E3) LATIN SMALL LETTER A WITH TILDE\" },\n  XK_adiaeresis:                    { code: 0x00e4, description: \"(\\u00E4) LATIN SMALL LETTER A WITH DIAERESIS\" },\n  XK_aring:                         { code: 0x00e5, description: \"(\\u00E5) LATIN SMALL LETTER A WITH RING ABOVE\" },\n  XK_ae:                            { code: 0x00e6, description: \"(\\u00E6) LATIN SMALL LETTER AE\" },\n  XK_ccedilla:                      { code: 0x00e7, description: \"(\\u00E7) LATIN SMALL LETTER C WITH CEDILLA\" },\n  XK_egrave:                        { code: 0x00e8, description: \"(\\u00E8) LATIN SMALL LETTER E WITH GRAVE\" },\n  XK_eacute:                        { code: 0x00e9, description: \"(\\u00E9) LATIN SMALL LETTER E WITH ACUTE\" },\n  XK_ecircumflex:                   { code: 0x00ea, description: \"(\\u00EA) LATIN SMALL LETTER E WITH CIRCUMFLEX\" },\n  XK_ediaeresis:                    { code: 0x00eb, description: \"(\\u00EB) LATIN SMALL LETTER E WITH DIAERESIS\" },\n  XK_igrave:                        { code: 0x00ec, description: \"(\\u00EC) LATIN SMALL LETTER I WITH GRAVE\" },\n  XK_iacute:                        { code: 0x00ed, description: \"(\\u00ED) LATIN SMALL LETTER I WITH ACUTE\" },\n  XK_icircumflex:                   { code: 0x00ee, description: \"(\\u00EE) LATIN SMALL LETTER I WITH CIRCUMFLEX\" },\n  XK_idiaeresis:                    { code: 0x00ef, description: \"(\\u00EF) LATIN SMALL LETTER I WITH DIAERESIS\" },\n  XK_eth:                           { code: 0x00f0, description: \"(\\u00F0) LATIN SMALL LETTER ETH\" },\n  XK_ntilde:                        { code: 0x00f1, description: \"(\\u00F1) LATIN SMALL LETTER N WITH TILDE\" },\n  XK_ograve:                        { code: 0x00f2, description: \"(\\u00F2) LATIN SMALL LETTER O WITH GRAVE\" },\n  XK_oacute:                        { code: 0x00f3, description: \"(\\u00F3) LATIN SMALL LETTER O WITH ACUTE\" },\n  XK_ocircumflex:                   { code: 0x00f4, description: \"(\\u00F4) LATIN SMALL LETTER O WITH CIRCUMFLEX\" },\n  XK_otilde:                        { code: 0x00f5, description: \"(\\u00F5) LATIN SMALL LETTER O WITH TILDE\" },\n  XK_odiaeresis:                    { code: 0x00f6, description: \"(\\u00F6) LATIN SMALL LETTER O WITH DIAERESIS\" },\n  XK_division:                      { code: 0x00f7, description: \"(\\u00F7) DIVISION SIGN\" },\n  XK_oslash:                        { code: 0x00f8, description: \"(\\u00F8) LATIN SMALL LETTER O WITH STROKE\" },\n  XK_ooblique:                      { code: 0x00f8, description: \"(\\u00F8) LATIN SMALL LETTER O WITH STROKE\" },\n  XK_ugrave:                        { code: 0x00f9, description: \"(\\u00F9) LATIN SMALL LETTER U WITH GRAVE\" },\n  XK_uacute:                        { code: 0x00fa, description: \"(\\u00FA) LATIN SMALL LETTER U WITH ACUTE\" },\n  XK_ucircumflex:                   { code: 0x00fb, description: \"(\\u00FB) LATIN SMALL LETTER U WITH CIRCUMFLEX\" },\n  XK_udiaeresis:                    { code: 0x00fc, description: \"(\\u00FC) LATIN SMALL LETTER U WITH DIAERESIS\" },\n  XK_yacute:                        { code: 0x00fd, description: \"(\\u00FD) LATIN SMALL LETTER Y WITH ACUTE\" },\n  XK_thorn:                         { code: 0x00fe, description: \"(\\u00FE) LATIN SMALL LETTER THORN\" },\n  XK_ydiaeresis:                    { code: 0x00ff, description: \"(\\u00FF) LATIN SMALL LETTER Y WITH DIAERESIS\" },\n\n\n/*\n * Latin 2\n * Byte 3 = 1\n */\n\n// Group XK_LATIN2\n  XK_Aogonek:                       { code: 0x01a1, description: \"(\\u0104) LATIN CAPITAL LETTER A WITH OGONEK\" },\n  XK_breve:                         { code: 0x01a2, description: \"(\\u02D8) BREVE\" },\n  XK_Lstroke:                       { code: 0x01a3, description: \"(\\u0141) LATIN CAPITAL LETTER L WITH STROKE\" },\n  XK_Lcaron:                        { code: 0x01a5, description: \"(\\u013D) LATIN CAPITAL LETTER L WITH CARON\" },\n  XK_Sacute:                        { code: 0x01a6, description: \"(\\u015A) LATIN CAPITAL LETTER S WITH ACUTE\" },\n  XK_Scaron:                        { code: 0x01a9, description: \"(\\u0160) LATIN CAPITAL LETTER S WITH CARON\" },\n  XK_Scedilla:                      { code: 0x01aa, description: \"(\\u015E) LATIN CAPITAL LETTER S WITH CEDILLA\" },\n  XK_Tcaron:                        { code: 0x01ab, description: \"(\\u0164) LATIN CAPITAL LETTER T WITH CARON\" },\n  XK_Zacute:                        { code: 0x01ac, description: \"(\\u0179) LATIN CAPITAL LETTER Z WITH ACUTE\" },\n  XK_Zcaron:                        { code: 0x01ae, description: \"(\\u017D) LATIN CAPITAL LETTER Z WITH CARON\" },\n  XK_Zabovedot:                     { code: 0x01af, description: \"(\\u017B) LATIN CAPITAL LETTER Z WITH DOT ABOVE\" },\n  XK_aogonek:                       { code: 0x01b1, description: \"(\\u0105) LATIN SMALL LETTER A WITH OGONEK\" },\n  XK_ogonek:                        { code: 0x01b2, description: \"(\\u02DB) OGONEK\" },\n  XK_lstroke:                       { code: 0x01b3, description: \"(\\u0142) LATIN SMALL LETTER L WITH STROKE\" },\n  XK_lcaron:                        { code: 0x01b5, description: \"(\\u013E) LATIN SMALL LETTER L WITH CARON\" },\n  XK_sacute:                        { code: 0x01b6, description: \"(\\u015B) LATIN SMALL LETTER S WITH ACUTE\" },\n  XK_caron:                         { code: 0x01b7, description: \"(\\u02C7) CARON\" },\n  XK_scaron:                        { code: 0x01b9, description: \"(\\u0161) LATIN SMALL LETTER S WITH CARON\" },\n  XK_scedilla:                      { code: 0x01ba, description: \"(\\u015F) LATIN SMALL LETTER S WITH CEDILLA\" },\n  XK_tcaron:                        { code: 0x01bb, description: \"(\\u0165) LATIN SMALL LETTER T WITH CARON\" },\n  XK_zacute:                        { code: 0x01bc, description: \"(\\u017A) LATIN SMALL LETTER Z WITH ACUTE\" },\n  XK_doubleacute:                   { code: 0x01bd, description: \"(\\u02DD) DOUBLE ACUTE ACCENT\" },\n  XK_zcaron:                        { code: 0x01be, description: \"(\\u017E) LATIN SMALL LETTER Z WITH CARON\" },\n  XK_zabovedot:                     { code: 0x01bf, description: \"(\\u017C) LATIN SMALL LETTER Z WITH DOT ABOVE\" },\n  XK_Racute:                        { code: 0x01c0, description: \"(\\u0154) LATIN CAPITAL LETTER R WITH ACUTE\" },\n  XK_Abreve:                        { code: 0x01c3, description: \"(\\u0102) LATIN CAPITAL LETTER A WITH BREVE\" },\n  XK_Lacute:                        { code: 0x01c5, description: \"(\\u0139) LATIN CAPITAL LETTER L WITH ACUTE\" },\n  XK_Cacute:                        { code: 0x01c6, description: \"(\\u0106) LATIN CAPITAL LETTER C WITH ACUTE\" },\n  XK_Ccaron:                        { code: 0x01c8, description: \"(\\u010C) LATIN CAPITAL LETTER C WITH CARON\" },\n  XK_Eogonek:                       { code: 0x01ca, description: \"(\\u0118) LATIN CAPITAL LETTER E WITH OGONEK\" },\n  XK_Ecaron:                        { code: 0x01cc, description: \"(\\u011A) LATIN CAPITAL LETTER E WITH CARON\" },\n  XK_Dcaron:                        { code: 0x01cf, description: \"(\\u010E) LATIN CAPITAL LETTER D WITH CARON\" },\n  XK_Dstroke:                       { code: 0x01d0, description: \"(\\u0110) LATIN CAPITAL LETTER D WITH STROKE\" },\n  XK_Nacute:                        { code: 0x01d1, description: \"(\\u0143) LATIN CAPITAL LETTER N WITH ACUTE\" },\n  XK_Ncaron:                        { code: 0x01d2, description: \"(\\u0147) LATIN CAPITAL LETTER N WITH CARON\" },\n  XK_Odoubleacute:                  { code: 0x01d5, description: \"(\\u0150) LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\" },\n  XK_Rcaron:                        { code: 0x01d8, description: \"(\\u0158) LATIN CAPITAL LETTER R WITH CARON\" },\n  XK_Uring:                         { code: 0x01d9, description: \"(\\u016E) LATIN CAPITAL LETTER U WITH RING ABOVE\" },\n  XK_Udoubleacute:                  { code: 0x01db, description: \"(\\u0170) LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\" },\n  XK_Tcedilla:                      { code: 0x01de, description: \"(\\u0162) LATIN CAPITAL LETTER T WITH CEDILLA\" },\n  XK_racute:                        { code: 0x01e0, description: \"(\\u0155) LATIN SMALL LETTER R WITH ACUTE\" },\n  XK_abreve:                        { code: 0x01e3, description: \"(\\u0103) LATIN SMALL LETTER A WITH BREVE\" },\n  XK_lacute:                        { code: 0x01e5, description: \"(\\u013A) LATIN SMALL LETTER L WITH ACUTE\" },\n  XK_cacute:                        { code: 0x01e6, description: \"(\\u0107) LATIN SMALL LETTER C WITH ACUTE\" },\n  XK_ccaron:                        { code: 0x01e8, description: \"(\\u010D) LATIN SMALL LETTER C WITH CARON\" },\n  XK_eogonek:                       { code: 0x01ea, description: \"(\\u0119) LATIN SMALL LETTER E WITH OGONEK\" },\n  XK_ecaron:                        { code: 0x01ec, description: \"(\\u011B) LATIN SMALL LETTER E WITH CARON\" },\n  XK_dcaron:                        { code: 0x01ef, description: \"(\\u010F) LATIN SMALL LETTER D WITH CARON\" },\n  XK_dstroke:                       { code: 0x01f0, description: \"(\\u0111) LATIN SMALL LETTER D WITH STROKE\" },\n  XK_nacute:                        { code: 0x01f1, description: \"(\\u0144) LATIN SMALL LETTER N WITH ACUTE\" },\n  XK_ncaron:                        { code: 0x01f2, description: \"(\\u0148) LATIN SMALL LETTER N WITH CARON\" },\n  XK_odoubleacute:                  { code: 0x01f5, description: \"(\\u0151) LATIN SMALL LETTER O WITH DOUBLE ACUTE\" },\n  XK_rcaron:                        { code: 0x01f8, description: \"(\\u0159) LATIN SMALL LETTER R WITH CARON\" },\n  XK_uring:                         { code: 0x01f9, description: \"(\\u016F) LATIN SMALL LETTER U WITH RING ABOVE\" },\n  XK_udoubleacute:                  { code: 0x01fb, description: \"(\\u0171) LATIN SMALL LETTER U WITH DOUBLE ACUTE\" },\n  XK_tcedilla:                      { code: 0x01fe, description: \"(\\u0163) LATIN SMALL LETTER T WITH CEDILLA\" },\n  XK_abovedot:                      { code: 0x01ff, description: \"(\\u02D9) DOT ABOVE\" },\n\n\n/*\n * Latin 3\n * Byte 3 = 2\n */\n\n// Group XK_LATIN3\n  XK_Hstroke:                       { code: 0x02a1, description: \"(\\u0126) LATIN CAPITAL LETTER H WITH STROKE\" },\n  XK_Hcircumflex:                   { code: 0x02a6, description: \"(\\u0124) LATIN CAPITAL LETTER H WITH CIRCUMFLEX\" },\n  XK_Iabovedot:                     { code: 0x02a9, description: \"(\\u0130) LATIN CAPITAL LETTER I WITH DOT ABOVE\" },\n  XK_Gbreve:                        { code: 0x02ab, description: \"(\\u011E) LATIN CAPITAL LETTER G WITH BREVE\" },\n  XK_Jcircumflex:                   { code: 0x02ac, description: \"(\\u0134) LATIN CAPITAL LETTER J WITH CIRCUMFLEX\" },\n  XK_hstroke:                       { code: 0x02b1, description: \"(\\u0127) LATIN SMALL LETTER H WITH STROKE\" },\n  XK_hcircumflex:                   { code: 0x02b6, description: \"(\\u0125) LATIN SMALL LETTER H WITH CIRCUMFLEX\" },\n  XK_idotless:                      { code: 0x02b9, description: \"(\\u0131) LATIN SMALL LETTER DOTLESS I\" },\n  XK_gbreve:                        { code: 0x02bb, description: \"(\\u011F) LATIN SMALL LETTER G WITH BREVE\" },\n  XK_jcircumflex:                   { code: 0x02bc, description: \"(\\u0135) LATIN SMALL LETTER J WITH CIRCUMFLEX\" },\n  XK_Cabovedot:                     { code: 0x02c5, description: \"(\\u010A) LATIN CAPITAL LETTER C WITH DOT ABOVE\" },\n  XK_Ccircumflex:                   { code: 0x02c6, description: \"(\\u0108) LATIN CAPITAL LETTER C WITH CIRCUMFLEX\" },\n  XK_Gabovedot:                     { code: 0x02d5, description: \"(\\u0120) LATIN CAPITAL LETTER G WITH DOT ABOVE\" },\n  XK_Gcircumflex:                   { code: 0x02d8, description: \"(\\u011C) LATIN CAPITAL LETTER G WITH CIRCUMFLEX\" },\n  XK_Ubreve:                        { code: 0x02dd, description: \"(\\u016C) LATIN CAPITAL LETTER U WITH BREVE\" },\n  XK_Scircumflex:                   { code: 0x02de, description: \"(\\u015C) LATIN CAPITAL LETTER S WITH CIRCUMFLEX\" },\n  XK_cabovedot:                     { code: 0x02e5, description: \"(\\u010B) LATIN SMALL LETTER C WITH DOT ABOVE\" },\n  XK_ccircumflex:                   { code: 0x02e6, description: \"(\\u0109) LATIN SMALL LETTER C WITH CIRCUMFLEX\" },\n  XK_gabovedot:                     { code: 0x02f5, description: \"(\\u0121) LATIN SMALL LETTER G WITH DOT ABOVE\" },\n  XK_gcircumflex:                   { code: 0x02f8, description: \"(\\u011D) LATIN SMALL LETTER G WITH CIRCUMFLEX\" },\n  XK_ubreve:                        { code: 0x02fd, description: \"(\\u016D) LATIN SMALL LETTER U WITH BREVE\" },\n  XK_scircumflex:                   { code: 0x02fe, description: \"(\\u015D) LATIN SMALL LETTER S WITH CIRCUMFLEX\" },\n\n\n\n/*\n * Latin 4\n * Byte 3 = 3\n */\n\n// Group XK_LATIN4\n  XK_kra:                           { code: 0x03a2, description: \"(\\u0138) LATIN SMALL LETTER KRA\" },\n  XK_kappa:                         { code: 0x03a2, description: \"deprecated\" },\n  XK_Rcedilla:                      { code: 0x03a3, description: \"(\\u0156) LATIN CAPITAL LETTER R WITH CEDILLA\" },\n  XK_Itilde:                        { code: 0x03a5, description: \"(\\u0128) LATIN CAPITAL LETTER I WITH TILDE\" },\n  XK_Lcedilla:                      { code: 0x03a6, description: \"(\\u013B) LATIN CAPITAL LETTER L WITH CEDILLA\" },\n  XK_Emacron:                       { code: 0x03aa, description: \"(\\u0112) LATIN CAPITAL LETTER E WITH MACRON\" },\n  XK_Gcedilla:                      { code: 0x03ab, description: \"(\\u0122) LATIN CAPITAL LETTER G WITH CEDILLA\" },\n  XK_Tslash:                        { code: 0x03ac, description: \"(\\u0166) LATIN CAPITAL LETTER T WITH STROKE\" },\n  XK_rcedilla:                      { code: 0x03b3, description: \"(\\u0157) LATIN SMALL LETTER R WITH CEDILLA\" },\n  XK_itilde:                        { code: 0x03b5, description: \"(\\u0129) LATIN SMALL LETTER I WITH TILDE\" },\n  XK_lcedilla:                      { code: 0x03b6, description: \"(\\u013C) LATIN SMALL LETTER L WITH CEDILLA\" },\n  XK_emacron:                       { code: 0x03ba, description: \"(\\u0113) LATIN SMALL LETTER E WITH MACRON\" },\n  XK_gcedilla:                      { code: 0x03bb, description: \"(\\u0123) LATIN SMALL LETTER G WITH CEDILLA\" },\n  XK_tslash:                        { code: 0x03bc, description: \"(\\u0167) LATIN SMALL LETTER T WITH STROKE\" },\n  XK_ENG:                           { code: 0x03bd, description: \"(\\u014A) LATIN CAPITAL LETTER ENG\" },\n  XK_eng:                           { code: 0x03bf, description: \"(\\u014B) LATIN SMALL LETTER ENG\" },\n  XK_Amacron:                       { code: 0x03c0, description: \"(\\u0100) LATIN CAPITAL LETTER A WITH MACRON\" },\n  XK_Iogonek:                       { code: 0x03c7, description: \"(\\u012E) LATIN CAPITAL LETTER I WITH OGONEK\" },\n  XK_Eabovedot:                     { code: 0x03cc, description: \"(\\u0116) LATIN CAPITAL LETTER E WITH DOT ABOVE\" },\n  XK_Imacron:                       { code: 0x03cf, description: \"(\\u012A) LATIN CAPITAL LETTER I WITH MACRON\" },\n  XK_Ncedilla:                      { code: 0x03d1, description: \"(\\u0145) LATIN CAPITAL LETTER N WITH CEDILLA\" },\n  XK_Omacron:                       { code: 0x03d2, description: \"(\\u014C) LATIN CAPITAL LETTER O WITH MACRON\" },\n  XK_Kcedilla:                      { code: 0x03d3, description: \"(\\u0136) LATIN CAPITAL LETTER K WITH CEDILLA\" },\n  XK_Uogonek:                       { code: 0x03d9, description: \"(\\u0172) LATIN CAPITAL LETTER U WITH OGONEK\" },\n  XK_Utilde:                        { code: 0x03dd, description: \"(\\u0168) LATIN CAPITAL LETTER U WITH TILDE\" },\n  XK_Umacron:                       { code: 0x03de, description: \"(\\u016A) LATIN CAPITAL LETTER U WITH MACRON\" },\n  XK_amacron:                       { code: 0x03e0, description: \"(\\u0101) LATIN SMALL LETTER A WITH MACRON\" },\n  XK_iogonek:                       { code: 0x03e7, description: \"(\\u012F) LATIN SMALL LETTER I WITH OGONEK\" },\n  XK_eabovedot:                     { code: 0x03ec, description: \"(\\u0117) LATIN SMALL LETTER E WITH DOT ABOVE\" },\n  XK_imacron:                       { code: 0x03ef, description: \"(\\u012B) LATIN SMALL LETTER I WITH MACRON\" },\n  XK_ncedilla:                      { code: 0x03f1, description: \"(\\u0146) LATIN SMALL LETTER N WITH CEDILLA\" },\n  XK_omacron:                       { code: 0x03f2, description: \"(\\u014D) LATIN SMALL LETTER O WITH MACRON\" },\n  XK_kcedilla:                      { code: 0x03f3, description: \"(\\u0137) LATIN SMALL LETTER K WITH CEDILLA\" },\n  XK_uogonek:                       { code: 0x03f9, description: \"(\\u0173) LATIN SMALL LETTER U WITH OGONEK\" },\n  XK_utilde:                        { code: 0x03fd, description: \"(\\u0169) LATIN SMALL LETTER U WITH TILDE\" },\n  XK_umacron:                       { code: 0x03fe, description: \"(\\u016B) LATIN SMALL LETTER U WITH MACRON\" },\n\n\n/*\n * Latin 8\n */\n// Group XK_LATIN8\n  XK_Wcircumflex:                { code: 0x1000174, description: \"(\\u0174) LATIN CAPITAL LETTER W WITH CIRCUMFLEX\" },\n  XK_wcircumflex:                { code: 0x1000175, description: \"(\\u0175) LATIN SMALL LETTER W WITH CIRCUMFLEX\" },\n  XK_Ycircumflex:                { code: 0x1000176, description: \"(\\u0176) LATIN CAPITAL LETTER Y WITH CIRCUMFLEX\" },\n  XK_ycircumflex:                { code: 0x1000177, description: \"(\\u0177) LATIN SMALL LETTER Y WITH CIRCUMFLEX\" },\n  XK_Babovedot:                  { code: 0x1001e02, description: \"(\\u1E02) LATIN CAPITAL LETTER B WITH DOT ABOVE\" },\n  XK_babovedot:                  { code: 0x1001e03, description: \"(\\u1E03) LATIN SMALL LETTER B WITH DOT ABOVE\" },\n  XK_Dabovedot:                  { code: 0x1001e0a, description: \"(\\u1E0A) LATIN CAPITAL LETTER D WITH DOT ABOVE\" },\n  XK_dabovedot:                  { code: 0x1001e0b, description: \"(\\u1E0B) LATIN SMALL LETTER D WITH DOT ABOVE\" },\n  XK_Fabovedot:                  { code: 0x1001e1e, description: \"(\\u1E1E) LATIN CAPITAL LETTER F WITH DOT ABOVE\" },\n  XK_fabovedot:                  { code: 0x1001e1f, description: \"(\\u1E1F) LATIN SMALL LETTER F WITH DOT ABOVE\" },\n  XK_Mabovedot:                  { code: 0x1001e40, description: \"(\\u1E40) LATIN CAPITAL LETTER M WITH DOT ABOVE\" },\n  XK_mabovedot:                  { code: 0x1001e41, description: \"(\\u1E41) LATIN SMALL LETTER M WITH DOT ABOVE\" },\n  XK_Pabovedot:                  { code: 0x1001e56, description: \"(\\u1E56) LATIN CAPITAL LETTER P WITH DOT ABOVE\" },\n  XK_pabovedot:                  { code: 0x1001e57, description: \"(\\u1E57) LATIN SMALL LETTER P WITH DOT ABOVE\" },\n  XK_Sabovedot:                  { code: 0x1001e60, description: \"(\\u1E60) LATIN CAPITAL LETTER S WITH DOT ABOVE\" },\n  XK_sabovedot:                  { code: 0x1001e61, description: \"(\\u1E61) LATIN SMALL LETTER S WITH DOT ABOVE\" },\n  XK_Tabovedot:                  { code: 0x1001e6a, description: \"(\\u1E6A) LATIN CAPITAL LETTER T WITH DOT ABOVE\" },\n  XK_tabovedot:                  { code: 0x1001e6b, description: \"(\\u1E6B) LATIN SMALL LETTER T WITH DOT ABOVE\" },\n  XK_Wgrave:                     { code: 0x1001e80, description: \"(\\u1E80) LATIN CAPITAL LETTER W WITH GRAVE\" },\n  XK_wgrave:                     { code: 0x1001e81, description: \"(\\u1E81) LATIN SMALL LETTER W WITH GRAVE\" },\n  XK_Wacute:                     { code: 0x1001e82, description: \"(\\u1E82) LATIN CAPITAL LETTER W WITH ACUTE\" },\n  XK_wacute:                     { code: 0x1001e83, description: \"(\\u1E83) LATIN SMALL LETTER W WITH ACUTE\" },\n  XK_Wdiaeresis:                 { code: 0x1001e84, description: \"(\\u1E84) LATIN CAPITAL LETTER W WITH DIAERESIS\" },\n  XK_wdiaeresis:                 { code: 0x1001e85, description: \"(\\u1E85) LATIN SMALL LETTER W WITH DIAERESIS\" },\n  XK_Ygrave:                     { code: 0x1001ef2, description: \"(\\u1EF2) LATIN CAPITAL LETTER Y WITH GRAVE\" },\n  XK_ygrave:                     { code: 0x1001ef3, description: \"(\\u1EF3) LATIN SMALL LETTER Y WITH GRAVE\" },\n\n\n/*\n * Latin 9\n * Byte 3 = 0x13\n */\n\n// Group XK_LATIN9\n  XK_OE:                            { code: 0x13bc, description: \"(\\u0152) LATIN CAPITAL LIGATURE OE\" },\n  XK_oe:                            { code: 0x13bd, description: \"(\\u0153) LATIN SMALL LIGATURE OE\" },\n  XK_Ydiaeresis:                    { code: 0x13be, description: \"(\\u0178) LATIN CAPITAL LETTER Y WITH DIAERESIS\" },\n\n\n/*\n * Katakana\n * Byte 3 = 4\n */\n\n// Group XK_KATAKANA\n  XK_overline:                      { code: 0x047e, description: \"(\\u203E) OVERLINE\" },\n  XK_kana_fullstop:                 { code: 0x04a1, description: \"(\\u3002) IDEOGRAPHIC FULL STOP\" },\n  XK_kana_openingbracket:           { code: 0x04a2, description: \"(\\u300C) LEFT CORNER BRACKET\" },\n  XK_kana_closingbracket:           { code: 0x04a3, description: \"(\\u300D) RIGHT CORNER BRACKET\" },\n  XK_kana_comma:                    { code: 0x04a4, description: \"(\\u3001) IDEOGRAPHIC COMMA\" },\n  XK_kana_conjunctive:              { code: 0x04a5, description: \"(\\u30FB) KATAKANA MIDDLE DOT\" },\n  XK_kana_middledot:                { code: 0x04a5, description: \"deprecated\" },\n  XK_kana_WO:                       { code: 0x04a6, description: \"(\\u30F2) KATAKANA LETTER WO\" },\n  XK_kana_a:                        { code: 0x04a7, description: \"(\\u30A1) KATAKANA LETTER SMALL A\" },\n  XK_kana_i:                        { code: 0x04a8, description: \"(\\u30A3) KATAKANA LETTER SMALL I\" },\n  XK_kana_u:                        { code: 0x04a9, description: \"(\\u30A5) KATAKANA LETTER SMALL U\" },\n  XK_kana_e:                        { code: 0x04aa, description: \"(\\u30A7) KATAKANA LETTER SMALL E\" },\n  XK_kana_o:                        { code: 0x04ab, description: \"(\\u30A9) KATAKANA LETTER SMALL O\" },\n  XK_kana_ya:                       { code: 0x04ac, description: \"(\\u30E3) KATAKANA LETTER SMALL YA\" },\n  XK_kana_yu:                       { code: 0x04ad, description: \"(\\u30E5) KATAKANA LETTER SMALL YU\" },\n  XK_kana_yo:                       { code: 0x04ae, description: \"(\\u30E7) KATAKANA LETTER SMALL YO\" },\n  XK_kana_tsu:                      { code: 0x04af, description: \"(\\u30C3) KATAKANA LETTER SMALL TU\" },\n  XK_kana_tu:                       { code: 0x04af, description: \"deprecated\" },\n  XK_prolongedsound:                { code: 0x04b0, description: \"(\\u30FC) KATAKANA-HIRAGANA PROLONGED SOUND MARK\" },\n  XK_kana_A:                        { code: 0x04b1, description: \"(\\u30A2) KATAKANA LETTER A\" },\n  XK_kana_I:                        { code: 0x04b2, description: \"(\\u30A4) KATAKANA LETTER I\" },\n  XK_kana_U:                        { code: 0x04b3, description: \"(\\u30A6) KATAKANA LETTER U\" },\n  XK_kana_E:                        { code: 0x04b4, description: \"(\\u30A8) KATAKANA LETTER E\" },\n  XK_kana_O:                        { code: 0x04b5, description: \"(\\u30AA) KATAKANA LETTER O\" },\n  XK_kana_KA:                       { code: 0x04b6, description: \"(\\u30AB) KATAKANA LETTER KA\" },\n  XK_kana_KI:                       { code: 0x04b7, description: \"(\\u30AD) KATAKANA LETTER KI\" },\n  XK_kana_KU:                       { code: 0x04b8, description: \"(\\u30AF) KATAKANA LETTER KU\" },\n  XK_kana_KE:                       { code: 0x04b9, description: \"(\\u30B1) KATAKANA LETTER KE\" },\n  XK_kana_KO:                       { code: 0x04ba, description: \"(\\u30B3) KATAKANA LETTER KO\" },\n  XK_kana_SA:                       { code: 0x04bb, description: \"(\\u30B5) KATAKANA LETTER SA\" },\n  XK_kana_SHI:                      { code: 0x04bc, description: \"(\\u30B7) KATAKANA LETTER SI\" },\n  XK_kana_SU:                       { code: 0x04bd, description: \"(\\u30B9) KATAKANA LETTER SU\" },\n  XK_kana_SE:                       { code: 0x04be, description: \"(\\u30BB) KATAKANA LETTER SE\" },\n  XK_kana_SO:                       { code: 0x04bf, description: \"(\\u30BD) KATAKANA LETTER SO\" },\n  XK_kana_TA:                       { code: 0x04c0, description: \"(\\u30BF) KATAKANA LETTER TA\" },\n  XK_kana_CHI:                      { code: 0x04c1, description: \"(\\u30C1) KATAKANA LETTER TI\" },\n  XK_kana_TI:                       { code: 0x04c1, description: \"deprecated\" },\n  XK_kana_TSU:                      { code: 0x04c2, description: \"(\\u30C4) KATAKANA LETTER TU\" },\n  XK_kana_TU:                       { code: 0x04c2, description: \"deprecated\" },\n  XK_kana_TE:                       { code: 0x04c3, description: \"(\\u30C6) KATAKANA LETTER TE\" },\n  XK_kana_TO:                       { code: 0x04c4, description: \"(\\u30C8) KATAKANA LETTER TO\" },\n  XK_kana_NA:                       { code: 0x04c5, description: \"(\\u30CA) KATAKANA LETTER NA\" },\n  XK_kana_NI:                       { code: 0x04c6, description: \"(\\u30CB) KATAKANA LETTER NI\" },\n  XK_kana_NU:                       { code: 0x04c7, description: \"(\\u30CC) KATAKANA LETTER NU\" },\n  XK_kana_NE:                       { code: 0x04c8, description: \"(\\u30CD) KATAKANA LETTER NE\" },\n  XK_kana_NO:                       { code: 0x04c9, description: \"(\\u30CE) KATAKANA LETTER NO\" },\n  XK_kana_HA:                       { code: 0x04ca, description: \"(\\u30CF) KATAKANA LETTER HA\" },\n  XK_kana_HI:                       { code: 0x04cb, description: \"(\\u30D2) KATAKANA LETTER HI\" },\n  XK_kana_FU:                       { code: 0x04cc, description: \"(\\u30D5) KATAKANA LETTER HU\" },\n  XK_kana_HU:                       { code: 0x04cc, description: \"deprecated\" },\n  XK_kana_HE:                       { code: 0x04cd, description: \"(\\u30D8) KATAKANA LETTER HE\" },\n  XK_kana_HO:                       { code: 0x04ce, description: \"(\\u30DB) KATAKANA LETTER HO\" },\n  XK_kana_MA:                       { code: 0x04cf, description: \"(\\u30DE) KATAKANA LETTER MA\" },\n  XK_kana_MI:                       { code: 0x04d0, description: \"(\\u30DF) KATAKANA LETTER MI\" },\n  XK_kana_MU:                       { code: 0x04d1, description: \"(\\u30E0) KATAKANA LETTER MU\" },\n  XK_kana_ME:                       { code: 0x04d2, description: \"(\\u30E1) KATAKANA LETTER ME\" },\n  XK_kana_MO:                       { code: 0x04d3, description: \"(\\u30E2) KATAKANA LETTER MO\" },\n  XK_kana_YA:                       { code: 0x04d4, description: \"(\\u30E4) KATAKANA LETTER YA\" },\n  XK_kana_YU:                       { code: 0x04d5, description: \"(\\u30E6) KATAKANA LETTER YU\" },\n  XK_kana_YO:                       { code: 0x04d6, description: \"(\\u30E8) KATAKANA LETTER YO\" },\n  XK_kana_RA:                       { code: 0x04d7, description: \"(\\u30E9) KATAKANA LETTER RA\" },\n  XK_kana_RI:                       { code: 0x04d8, description: \"(\\u30EA) KATAKANA LETTER RI\" },\n  XK_kana_RU:                       { code: 0x04d9, description: \"(\\u30EB) KATAKANA LETTER RU\" },\n  XK_kana_RE:                       { code: 0x04da, description: \"(\\u30EC) KATAKANA LETTER RE\" },\n  XK_kana_RO:                       { code: 0x04db, description: \"(\\u30ED) KATAKANA LETTER RO\" },\n  XK_kana_WA:                       { code: 0x04dc, description: \"(\\u30EF) KATAKANA LETTER WA\" },\n  XK_kana_N:                        { code: 0x04dd, description: \"(\\u30F3) KATAKANA LETTER N\" },\n  XK_voicedsound:                   { code: 0x04de, description: \"(\\u309B) KATAKANA-HIRAGANA VOICED SOUND MARK\" },\n  XK_semivoicedsound:               { code: 0x04df, description: \"(\\u309C) KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\" },\n  XK_kana_switch:                   { code: 0xff7e, description: \"Alias for mode_switch\" },\n\n\n/*\n * Arabic\n * Byte 3 = 5\n */\n\n// Group XK_ARABIC\n  XK_Farsi_0:                    { code: 0x10006f0, description: \"(\\u06F0) EXTENDED ARABIC-INDIC DIGIT ZERO\" },\n  XK_Farsi_1:                    { code: 0x10006f1, description: \"(\\u06F1) EXTENDED ARABIC-INDIC DIGIT ONE\" },\n  XK_Farsi_2:                    { code: 0x10006f2, description: \"(\\u06F2) EXTENDED ARABIC-INDIC DIGIT TWO\" },\n  XK_Farsi_3:                    { code: 0x10006f3, description: \"(\\u06F3) EXTENDED ARABIC-INDIC DIGIT THREE\" },\n  XK_Farsi_4:                    { code: 0x10006f4, description: \"(\\u06F4) EXTENDED ARABIC-INDIC DIGIT FOUR\" },\n  XK_Farsi_5:                    { code: 0x10006f5, description: \"(\\u06F5) EXTENDED ARABIC-INDIC DIGIT FIVE\" },\n  XK_Farsi_6:                    { code: 0x10006f6, description: \"(\\u06F6) EXTENDED ARABIC-INDIC DIGIT SIX\" },\n  XK_Farsi_7:                    { code: 0x10006f7, description: \"(\\u06F7) EXTENDED ARABIC-INDIC DIGIT SEVEN\" },\n  XK_Farsi_8:                    { code: 0x10006f8, description: \"(\\u06F8) EXTENDED ARABIC-INDIC DIGIT EIGHT\" },\n  XK_Farsi_9:                    { code: 0x10006f9, description: \"(\\u06F9) EXTENDED ARABIC-INDIC DIGIT NINE\" },\n  XK_Arabic_percent:             { code: 0x100066a, description: \"(\\u066A) ARABIC PERCENT SIGN\" },\n  XK_Arabic_superscript_alef:    { code: 0x1000670, description: \"(\\u0670) ARABIC LETTER SUPERSCRIPT ALEF\" },\n  XK_Arabic_tteh:                { code: 0x1000679, description: \"(\\u0679) ARABIC LETTER TTEH\" },\n  XK_Arabic_peh:                 { code: 0x100067e, description: \"(\\u067E) ARABIC LETTER PEH\" },\n  XK_Arabic_tcheh:               { code: 0x1000686, description: \"(\\u0686) ARABIC LETTER TCHEH\" },\n  XK_Arabic_ddal:                { code: 0x1000688, description: \"(\\u0688) ARABIC LETTER DDAL\" },\n  XK_Arabic_rreh:                { code: 0x1000691, description: \"(\\u0691) ARABIC LETTER RREH\" },\n  XK_Arabic_comma:                  { code: 0x05ac, description: \"(\\u060C) ARABIC COMMA\" },\n  XK_Arabic_fullstop:            { code: 0x10006d4, description: \"(\\u06D4) ARABIC FULL STOP\" },\n  XK_Arabic_0:                   { code: 0x1000660, description: \"(\\u0660) ARABIC-INDIC DIGIT ZERO\" },\n  XK_Arabic_1:                   { code: 0x1000661, description: \"(\\u0661) ARABIC-INDIC DIGIT ONE\" },\n  XK_Arabic_2:                   { code: 0x1000662, description: \"(\\u0662) ARABIC-INDIC DIGIT TWO\" },\n  XK_Arabic_3:                   { code: 0x1000663, description: \"(\\u0663) ARABIC-INDIC DIGIT THREE\" },\n  XK_Arabic_4:                   { code: 0x1000664, description: \"(\\u0664) ARABIC-INDIC DIGIT FOUR\" },\n  XK_Arabic_5:                   { code: 0x1000665, description: \"(\\u0665) ARABIC-INDIC DIGIT FIVE\" },\n  XK_Arabic_6:                   { code: 0x1000666, description: \"(\\u0666) ARABIC-INDIC DIGIT SIX\" },\n  XK_Arabic_7:                   { code: 0x1000667, description: \"(\\u0667) ARABIC-INDIC DIGIT SEVEN\" },\n  XK_Arabic_8:                   { code: 0x1000668, description: \"(\\u0668) ARABIC-INDIC DIGIT EIGHT\" },\n  XK_Arabic_9:                   { code: 0x1000669, description: \"(\\u0669) ARABIC-INDIC DIGIT NINE\" },\n  XK_Arabic_semicolon:              { code: 0x05bb, description: \"(\\u061B) ARABIC SEMICOLON\" },\n  XK_Arabic_question_mark:          { code: 0x05bf, description: \"(\\u061F) ARABIC QUESTION MARK\" },\n  XK_Arabic_hamza:                  { code: 0x05c1, description: \"(\\u0621) ARABIC LETTER HAMZA\" },\n  XK_Arabic_maddaonalef:            { code: 0x05c2, description: \"(\\u0622) ARABIC LETTER ALEF WITH MADDA ABOVE\" },\n  XK_Arabic_hamzaonalef:            { code: 0x05c3, description: \"(\\u0623) ARABIC LETTER ALEF WITH HAMZA ABOVE\" },\n  XK_Arabic_hamzaonwaw:             { code: 0x05c4, description: \"(\\u0624) ARABIC LETTER WAW WITH HAMZA ABOVE\" },\n  XK_Arabic_hamzaunderalef:         { code: 0x05c5, description: \"(\\u0625) ARABIC LETTER ALEF WITH HAMZA BELOW\" },\n  XK_Arabic_hamzaonyeh:             { code: 0x05c6, description: \"(\\u0626) ARABIC LETTER YEH WITH HAMZA ABOVE\" },\n  XK_Arabic_alef:                   { code: 0x05c7, description: \"(\\u0627) ARABIC LETTER ALEF\" },\n  XK_Arabic_beh:                    { code: 0x05c8, description: \"(\\u0628) ARABIC LETTER BEH\" },\n  XK_Arabic_tehmarbuta:             { code: 0x05c9, description: \"(\\u0629) ARABIC LETTER TEH MARBUTA\" },\n  XK_Arabic_teh:                    { code: 0x05ca, description: \"(\\u062A) ARABIC LETTER TEH\" },\n  XK_Arabic_theh:                   { code: 0x05cb, description: \"(\\u062B) ARABIC LETTER THEH\" },\n  XK_Arabic_jeem:                   { code: 0x05cc, description: \"(\\u062C) ARABIC LETTER JEEM\" },\n  XK_Arabic_hah:                    { code: 0x05cd, description: \"(\\u062D) ARABIC LETTER HAH\" },\n  XK_Arabic_khah:                   { code: 0x05ce, description: \"(\\u062E) ARABIC LETTER KHAH\" },\n  XK_Arabic_dal:                    { code: 0x05cf, description: \"(\\u062F) ARABIC LETTER DAL\" },\n  XK_Arabic_thal:                   { code: 0x05d0, description: \"(\\u0630) ARABIC LETTER THAL\" },\n  XK_Arabic_ra:                     { code: 0x05d1, description: \"(\\u0631) ARABIC LETTER REH\" },\n  XK_Arabic_zain:                   { code: 0x05d2, description: \"(\\u0632) ARABIC LETTER ZAIN\" },\n  XK_Arabic_seen:                   { code: 0x05d3, description: \"(\\u0633) ARABIC LETTER SEEN\" },\n  XK_Arabic_sheen:                  { code: 0x05d4, description: \"(\\u0634) ARABIC LETTER SHEEN\" },\n  XK_Arabic_sad:                    { code: 0x05d5, description: \"(\\u0635) ARABIC LETTER SAD\" },\n  XK_Arabic_dad:                    { code: 0x05d6, description: \"(\\u0636) ARABIC LETTER DAD\" },\n  XK_Arabic_tah:                    { code: 0x05d7, description: \"(\\u0637) ARABIC LETTER TAH\" },\n  XK_Arabic_zah:                    { code: 0x05d8, description: \"(\\u0638) ARABIC LETTER ZAH\" },\n  XK_Arabic_ain:                    { code: 0x05d9, description: \"(\\u0639) ARABIC LETTER AIN\" },\n  XK_Arabic_ghain:                  { code: 0x05da, description: \"(\\u063A) ARABIC LETTER GHAIN\" },\n  XK_Arabic_tatweel:                { code: 0x05e0, description: \"(\\u0640) ARABIC TATWEEL\" },\n  XK_Arabic_feh:                    { code: 0x05e1, description: \"(\\u0641) ARABIC LETTER FEH\" },\n  XK_Arabic_qaf:                    { code: 0x05e2, description: \"(\\u0642) ARABIC LETTER QAF\" },\n  XK_Arabic_kaf:                    { code: 0x05e3, description: \"(\\u0643) ARABIC LETTER KAF\" },\n  XK_Arabic_lam:                    { code: 0x05e4, description: \"(\\u0644) ARABIC LETTER LAM\" },\n  XK_Arabic_meem:                   { code: 0x05e5, description: \"(\\u0645) ARABIC LETTER MEEM\" },\n  XK_Arabic_noon:                   { code: 0x05e6, description: \"(\\u0646) ARABIC LETTER NOON\" },\n  XK_Arabic_ha:                     { code: 0x05e7, description: \"(\\u0647) ARABIC LETTER HEH\" },\n  XK_Arabic_heh:                    { code: 0x05e7, description: \"deprecated\" },\n  XK_Arabic_waw:                    { code: 0x05e8, description: \"(\\u0648) ARABIC LETTER WAW\" },\n  XK_Arabic_alefmaksura:            { code: 0x05e9, description: \"(\\u0649) ARABIC LETTER ALEF MAKSURA\" },\n  XK_Arabic_yeh:                    { code: 0x05ea, description: \"(\\u064A) ARABIC LETTER YEH\" },\n  XK_Arabic_fathatan:               { code: 0x05eb, description: \"(\\u064B) ARABIC FATHATAN\" },\n  XK_Arabic_dammatan:               { code: 0x05ec, description: \"(\\u064C) ARABIC DAMMATAN\" },\n  XK_Arabic_kasratan:               { code: 0x05ed, description: \"(\\u064D) ARABIC KASRATAN\" },\n  XK_Arabic_fatha:                  { code: 0x05ee, description: \"(\\u064E) ARABIC FATHA\" },\n  XK_Arabic_damma:                  { code: 0x05ef, description: \"(\\u064F) ARABIC DAMMA\" },\n  XK_Arabic_kasra:                  { code: 0x05f0, description: \"(\\u0650) ARABIC KASRA\" },\n  XK_Arabic_shadda:                 { code: 0x05f1, description: \"(\\u0651) ARABIC SHADDA\" },\n  XK_Arabic_sukun:                  { code: 0x05f2, description: \"(\\u0652) ARABIC SUKUN\" },\n  XK_Arabic_madda_above:         { code: 0x1000653, description: \"(\\u0653) ARABIC MADDAH ABOVE\" },\n  XK_Arabic_hamza_above:         { code: 0x1000654, description: \"(\\u0654) ARABIC HAMZA ABOVE\" },\n  XK_Arabic_hamza_below:         { code: 0x1000655, description: \"(\\u0655) ARABIC HAMZA BELOW\" },\n  XK_Arabic_jeh:                 { code: 0x1000698, description: \"(\\u0698) ARABIC LETTER JEH\" },\n  XK_Arabic_veh:                 { code: 0x10006a4, description: \"(\\u06A4) ARABIC LETTER VEH\" },\n  XK_Arabic_keheh:               { code: 0x10006a9, description: \"(\\u06A9) ARABIC LETTER KEHEH\" },\n  XK_Arabic_gaf:                 { code: 0x10006af, description: \"(\\u06AF) ARABIC LETTER GAF\" },\n  XK_Arabic_noon_ghunna:         { code: 0x10006ba, description: \"(\\u06BA) ARABIC LETTER NOON GHUNNA\" },\n  XK_Arabic_heh_doachashmee:     { code: 0x10006be, description: \"(\\u06BE) ARABIC LETTER HEH DOACHASHMEE\" },\n  XK_Farsi_yeh:                  { code: 0x10006cc, description: \"(\\u06CC) ARABIC LETTER FARSI YEH\" },\n  XK_Arabic_farsi_yeh:           { code: 0x10006cc, description: \"(\\u06CC) ARABIC LETTER FARSI YEH\" },\n  XK_Arabic_yeh_baree:           { code: 0x10006d2, description: \"(\\u06D2) ARABIC LETTER YEH BARREE\" },\n  XK_Arabic_heh_goal:            { code: 0x10006c1, description: \"(\\u06C1) ARABIC LETTER HEH GOAL\" },\n  XK_Arabic_switch:                 { code: 0xff7e, description: \"Alias for mode_switch\" },\n\n\n/*\n * Cyrillic\n * Byte 3 = 6\n */\n// Group XK_CYRILLIC\n  XK_Cyrillic_GHE_bar:           { code: 0x1000492, description: \"(\\u0492) CYRILLIC CAPITAL LETTER GHE WITH STROKE\" },\n  XK_Cyrillic_ghe_bar:           { code: 0x1000493, description: \"(\\u0493) CYRILLIC SMALL LETTER GHE WITH STROKE\" },\n  XK_Cyrillic_ZHE_descender:     { code: 0x1000496, description: \"(\\u0496) CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER\" },\n  XK_Cyrillic_zhe_descender:     { code: 0x1000497, description: \"(\\u0497) CYRILLIC SMALL LETTER ZHE WITH DESCENDER\" },\n  XK_Cyrillic_KA_descender:      { code: 0x100049a, description: \"(\\u049A) CYRILLIC CAPITAL LETTER KA WITH DESCENDER\" },\n  XK_Cyrillic_ka_descender:      { code: 0x100049b, description: \"(\\u049B) CYRILLIC SMALL LETTER KA WITH DESCENDER\" },\n  XK_Cyrillic_KA_vertstroke:     { code: 0x100049c, description: \"(\\u049C) CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE\" },\n  XK_Cyrillic_ka_vertstroke:     { code: 0x100049d, description: \"(\\u049D) CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE\" },\n  XK_Cyrillic_EN_descender:      { code: 0x10004a2, description: \"(\\u04A2) CYRILLIC CAPITAL LETTER EN WITH DESCENDER\" },\n  XK_Cyrillic_en_descender:      { code: 0x10004a3, description: \"(\\u04A3) CYRILLIC SMALL LETTER EN WITH DESCENDER\" },\n  XK_Cyrillic_U_straight:        { code: 0x10004ae, description: \"(\\u04AE) CYRILLIC CAPITAL LETTER STRAIGHT U\" },\n  XK_Cyrillic_u_straight:        { code: 0x10004af, description: \"(\\u04AF) CYRILLIC SMALL LETTER STRAIGHT U\" },\n  XK_Cyrillic_U_straight_bar:    { code: 0x10004b0, description: \"(\\u04B0) CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE\" },\n  XK_Cyrillic_u_straight_bar:    { code: 0x10004b1, description: \"(\\u04B1) CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE\" },\n  XK_Cyrillic_HA_descender:      { code: 0x10004b2, description: \"(\\u04B2) CYRILLIC CAPITAL LETTER HA WITH DESCENDER\" },\n  XK_Cyrillic_ha_descender:      { code: 0x10004b3, description: \"(\\u04B3) CYRILLIC SMALL LETTER HA WITH DESCENDER\" },\n  XK_Cyrillic_CHE_descender:     { code: 0x10004b6, description: \"(\\u04B6) CYRILLIC CAPITAL LETTER CHE WITH DESCENDER\" },\n  XK_Cyrillic_che_descender:     { code: 0x10004b7, description: \"(\\u04B7) CYRILLIC SMALL LETTER CHE WITH DESCENDER\" },\n  XK_Cyrillic_CHE_vertstroke:    { code: 0x10004b8, description: \"(\\u04B8) CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE\" },\n  XK_Cyrillic_che_vertstroke:    { code: 0x10004b9, description: \"(\\u04B9) CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE\" },\n  XK_Cyrillic_SHHA:              { code: 0x10004ba, description: \"(\\u04BA) CYRILLIC CAPITAL LETTER SHHA\" },\n  XK_Cyrillic_shha:              { code: 0x10004bb, description: \"(\\u04BB) CYRILLIC SMALL LETTER SHHA\" },\n\n  XK_Cyrillic_SCHWA:             { code: 0x10004d8, description: \"(\\u04D8) CYRILLIC CAPITAL LETTER SCHWA\" },\n  XK_Cyrillic_schwa:             { code: 0x10004d9, description: \"(\\u04D9) CYRILLIC SMALL LETTER SCHWA\" },\n  XK_Cyrillic_I_macron:          { code: 0x10004e2, description: \"(\\u04E2) CYRILLIC CAPITAL LETTER I WITH MACRON\" },\n  XK_Cyrillic_i_macron:          { code: 0x10004e3, description: \"(\\u04E3) CYRILLIC SMALL LETTER I WITH MACRON\" },\n  XK_Cyrillic_O_bar:             { code: 0x10004e8, description: \"(\\u04E8) CYRILLIC CAPITAL LETTER BARRED O\" },\n  XK_Cyrillic_o_bar:             { code: 0x10004e9, description: \"(\\u04E9) CYRILLIC SMALL LETTER BARRED O\" },\n  XK_Cyrillic_U_macron:          { code: 0x10004ee, description: \"(\\u04EE) CYRILLIC CAPITAL LETTER U WITH MACRON\" },\n  XK_Cyrillic_u_macron:          { code: 0x10004ef, description: \"(\\u04EF) CYRILLIC SMALL LETTER U WITH MACRON\" },\n\n  XK_Serbian_dje:                   { code: 0x06a1, description: \"(\\u0452) CYRILLIC SMALL LETTER DJE\" },\n  XK_Macedonia_gje:                 { code: 0x06a2, description: \"(\\u0453) CYRILLIC SMALL LETTER GJE\" },\n  XK_Cyrillic_io:                   { code: 0x06a3, description: \"(\\u0451) CYRILLIC SMALL LETTER IO\" },\n  XK_Ukrainian_ie:                  { code: 0x06a4, description: \"(\\u0454) CYRILLIC SMALL LETTER UKRAINIAN IE\" },\n  XK_Ukranian_je:                   { code: 0x06a4, description: \"deprecated\" },\n  XK_Macedonia_dse:                 { code: 0x06a5, description: \"(\\u0455) CYRILLIC SMALL LETTER DZE\" },\n  XK_Ukrainian_i:                   { code: 0x06a6, description: \"(\\u0456) CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\" },\n  XK_Ukranian_i:                    { code: 0x06a6, description: \"deprecated\" },\n  XK_Ukrainian_yi:                  { code: 0x06a7, description: \"(\\u0457) CYRILLIC SMALL LETTER YI\" },\n  XK_Ukranian_yi:                   { code: 0x06a7, description: \"deprecated\" },\n  XK_Cyrillic_je:                   { code: 0x06a8, description: \"(\\u0458) CYRILLIC SMALL LETTER JE\" },\n  XK_Serbian_je:                    { code: 0x06a8, description: \"deprecated\" },\n  XK_Cyrillic_lje:                  { code: 0x06a9, description: \"(\\u0459) CYRILLIC SMALL LETTER LJE\" },\n  XK_Serbian_lje:                   { code: 0x06a9, description: \"deprecated\" },\n  XK_Cyrillic_nje:                  { code: 0x06aa, description: \"(\\u045A) CYRILLIC SMALL LETTER NJE\" },\n  XK_Serbian_nje:                   { code: 0x06aa, description: \"deprecated\" },\n  XK_Serbian_tshe:                  { code: 0x06ab, description: \"(\\u045B) CYRILLIC SMALL LETTER TSHE\" },\n  XK_Macedonia_kje:                 { code: 0x06ac, description: \"(\\u045C) CYRILLIC SMALL LETTER KJE\" },\n  XK_Ukrainian_ghe_with_upturn:     { code: 0x06ad, description: \"(\\u0491) CYRILLIC SMALL LETTER GHE WITH UPTURN\" },\n  XK_Byelorussian_shortu:           { code: 0x06ae, description: \"(\\u045E) CYRILLIC SMALL LETTER SHORT U\" },\n  XK_Cyrillic_dzhe:                 { code: 0x06af, description: \"(\\u045F) CYRILLIC SMALL LETTER DZHE\" },\n  XK_Serbian_dze:                   { code: 0x06af, description: \"deprecated\" },\n  XK_numerosign:                    { code: 0x06b0, description: \"(\\u2116) NUMERO SIGN\" },\n  XK_Serbian_DJE:                   { code: 0x06b1, description: \"(\\u0402) CYRILLIC CAPITAL LETTER DJE\" },\n  XK_Macedonia_GJE:                 { code: 0x06b2, description: \"(\\u0403) CYRILLIC CAPITAL LETTER GJE\" },\n  XK_Cyrillic_IO:                   { code: 0x06b3, description: \"(\\u0401) CYRILLIC CAPITAL LETTER IO\" },\n  XK_Ukrainian_IE:                  { code: 0x06b4, description: \"(\\u0404) CYRILLIC CAPITAL LETTER UKRAINIAN IE\" },\n  XK_Ukranian_JE:                   { code: 0x06b4, description: \"deprecated\" },\n  XK_Macedonia_DSE:                 { code: 0x06b5, description: \"(\\u0405) CYRILLIC CAPITAL LETTER DZE\" },\n  XK_Ukrainian_I:                   { code: 0x06b6, description: \"(\\u0406) CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I\" },\n  XK_Ukranian_I:                    { code: 0x06b6, description: \"deprecated\" },\n  XK_Ukrainian_YI:                  { code: 0x06b7, description: \"(\\u0407) CYRILLIC CAPITAL LETTER YI\" },\n  XK_Ukranian_YI:                   { code: 0x06b7, description: \"deprecated\" },\n  XK_Cyrillic_JE:                   { code: 0x06b8, description: \"(\\u0408) CYRILLIC CAPITAL LETTER JE\" },\n  XK_Serbian_JE:                    { code: 0x06b8, description: \"deprecated\" },\n  XK_Cyrillic_LJE:                  { code: 0x06b9, description: \"(\\u0409) CYRILLIC CAPITAL LETTER LJE\" },\n  XK_Serbian_LJE:                   { code: 0x06b9, description: \"deprecated\" },\n  XK_Cyrillic_NJE:                  { code: 0x06ba, description: \"(\\u040A) CYRILLIC CAPITAL LETTER NJE\" },\n  XK_Serbian_NJE:                   { code: 0x06ba, description: \"deprecated\" },\n  XK_Serbian_TSHE:                  { code: 0x06bb, description: \"(\\u040B) CYRILLIC CAPITAL LETTER TSHE\" },\n  XK_Macedonia_KJE:                 { code: 0x06bc, description: \"(\\u040C) CYRILLIC CAPITAL LETTER KJE\" },\n  XK_Ukrainian_GHE_WITH_UPTURN:     { code: 0x06bd, description: \"(\\u0490) CYRILLIC CAPITAL LETTER GHE WITH UPTURN\" },\n  XK_Byelorussian_SHORTU:           { code: 0x06be, description: \"(\\u040E) CYRILLIC CAPITAL LETTER SHORT U\" },\n  XK_Cyrillic_DZHE:                 { code: 0x06bf, description: \"(\\u040F) CYRILLIC CAPITAL LETTER DZHE\" },\n  XK_Serbian_DZE:                   { code: 0x06bf, description: \"deprecated\" },\n  XK_Cyrillic_yu:                   { code: 0x06c0, description: \"(\\u044E) CYRILLIC SMALL LETTER YU\" },\n  XK_Cyrillic_a:                    { code: 0x06c1, description: \"(\\u0430) CYRILLIC SMALL LETTER A\" },\n  XK_Cyrillic_be:                   { code: 0x06c2, description: \"(\\u0431) CYRILLIC SMALL LETTER BE\" },\n  XK_Cyrillic_tse:                  { code: 0x06c3, description: \"(\\u0446) CYRILLIC SMALL LETTER TSE\" },\n  XK_Cyrillic_de:                   { code: 0x06c4, description: \"(\\u0434) CYRILLIC SMALL LETTER DE\" },\n  XK_Cyrillic_ie:                   { code: 0x06c5, description: \"(\\u0435) CYRILLIC SMALL LETTER IE\" },\n  XK_Cyrillic_ef:                   { code: 0x06c6, description: \"(\\u0444) CYRILLIC SMALL LETTER EF\" },\n  XK_Cyrillic_ghe:                  { code: 0x06c7, description: \"(\\u0433) CYRILLIC SMALL LETTER GHE\" },\n  XK_Cyrillic_ha:                   { code: 0x06c8, description: \"(\\u0445) CYRILLIC SMALL LETTER HA\" },\n  XK_Cyrillic_i:                    { code: 0x06c9, description: \"(\\u0438) CYRILLIC SMALL LETTER I\" },\n  XK_Cyrillic_shorti:               { code: 0x06ca, description: \"(\\u0439) CYRILLIC SMALL LETTER SHORT I\" },\n  XK_Cyrillic_ka:                   { code: 0x06cb, description: \"(\\u043A) CYRILLIC SMALL LETTER KA\" },\n  XK_Cyrillic_el:                   { code: 0x06cc, description: \"(\\u043B) CYRILLIC SMALL LETTER EL\" },\n  XK_Cyrillic_em:                   { code: 0x06cd, description: \"(\\u043C) CYRILLIC SMALL LETTER EM\" },\n  XK_Cyrillic_en:                   { code: 0x06ce, description: \"(\\u043D) CYRILLIC SMALL LETTER EN\" },\n  XK_Cyrillic_o:                    { code: 0x06cf, description: \"(\\u043E) CYRILLIC SMALL LETTER O\" },\n  XK_Cyrillic_pe:                   { code: 0x06d0, description: \"(\\u043F) CYRILLIC SMALL LETTER PE\" },\n  XK_Cyrillic_ya:                   { code: 0x06d1, description: \"(\\u044F) CYRILLIC SMALL LETTER YA\" },\n  XK_Cyrillic_er:                   { code: 0x06d2, description: \"(\\u0440) CYRILLIC SMALL LETTER ER\" },\n  XK_Cyrillic_es:                   { code: 0x06d3, description: \"(\\u0441) CYRILLIC SMALL LETTER ES\" },\n  XK_Cyrillic_te:                   { code: 0x06d4, description: \"(\\u0442) CYRILLIC SMALL LETTER TE\" },\n  XK_Cyrillic_u:                    { code: 0x06d5, description: \"(\\u0443) CYRILLIC SMALL LETTER U\" },\n  XK_Cyrillic_zhe:                  { code: 0x06d6, description: \"(\\u0436) CYRILLIC SMALL LETTER ZHE\" },\n  XK_Cyrillic_ve:                   { code: 0x06d7, description: \"(\\u0432) CYRILLIC SMALL LETTER VE\" },\n  XK_Cyrillic_softsign:             { code: 0x06d8, description: \"(\\u044C) CYRILLIC SMALL LETTER SOFT SIGN\" },\n  XK_Cyrillic_yeru:                 { code: 0x06d9, description: \"(\\u044B) CYRILLIC SMALL LETTER YERU\" },\n  XK_Cyrillic_ze:                   { code: 0x06da, description: \"(\\u0437) CYRILLIC SMALL LETTER ZE\" },\n  XK_Cyrillic_sha:                  { code: 0x06db, description: \"(\\u0448) CYRILLIC SMALL LETTER SHA\" },\n  XK_Cyrillic_e:                    { code: 0x06dc, description: \"(\\u044D) CYRILLIC SMALL LETTER E\" },\n  XK_Cyrillic_shcha:                { code: 0x06dd, description: \"(\\u0449) CYRILLIC SMALL LETTER SHCHA\" },\n  XK_Cyrillic_che:                  { code: 0x06de, description: \"(\\u0447) CYRILLIC SMALL LETTER CHE\" },\n  XK_Cyrillic_hardsign:             { code: 0x06df, description: \"(\\u044A) CYRILLIC SMALL LETTER HARD SIGN\" },\n  XK_Cyrillic_YU:                   { code: 0x06e0, description: \"(\\u042E) CYRILLIC CAPITAL LETTER YU\" },\n  XK_Cyrillic_A:                    { code: 0x06e1, description: \"(\\u0410) CYRILLIC CAPITAL LETTER A\" },\n  XK_Cyrillic_BE:                   { code: 0x06e2, description: \"(\\u0411) CYRILLIC CAPITAL LETTER BE\" },\n  XK_Cyrillic_TSE:                  { code: 0x06e3, description: \"(\\u0426) CYRILLIC CAPITAL LETTER TSE\" },\n  XK_Cyrillic_DE:                   { code: 0x06e4, description: \"(\\u0414) CYRILLIC CAPITAL LETTER DE\" },\n  XK_Cyrillic_IE:                   { code: 0x06e5, description: \"(\\u0415) CYRILLIC CAPITAL LETTER IE\" },\n  XK_Cyrillic_EF:                   { code: 0x06e6, description: \"(\\u0424) CYRILLIC CAPITAL LETTER EF\" },\n  XK_Cyrillic_GHE:                  { code: 0x06e7, description: \"(\\u0413) CYRILLIC CAPITAL LETTER GHE\" },\n  XK_Cyrillic_HA:                   { code: 0x06e8, description: \"(\\u0425) CYRILLIC CAPITAL LETTER HA\" },\n  XK_Cyrillic_I:                    { code: 0x06e9, description: \"(\\u0418) CYRILLIC CAPITAL LETTER I\" },\n  XK_Cyrillic_SHORTI:               { code: 0x06ea, description: \"(\\u0419) CYRILLIC CAPITAL LETTER SHORT I\" },\n  XK_Cyrillic_KA:                   { code: 0x06eb, description: \"(\\u041A) CYRILLIC CAPITAL LETTER KA\" },\n  XK_Cyrillic_EL:                   { code: 0x06ec, description: \"(\\u041B) CYRILLIC CAPITAL LETTER EL\" },\n  XK_Cyrillic_EM:                   { code: 0x06ed, description: \"(\\u041C) CYRILLIC CAPITAL LETTER EM\" },\n  XK_Cyrillic_EN:                   { code: 0x06ee, description: \"(\\u041D) CYRILLIC CAPITAL LETTER EN\" },\n  XK_Cyrillic_O:                    { code: 0x06ef, description: \"(\\u041E) CYRILLIC CAPITAL LETTER O\" },\n  XK_Cyrillic_PE:                   { code: 0x06f0, description: \"(\\u041F) CYRILLIC CAPITAL LETTER PE\" },\n  XK_Cyrillic_YA:                   { code: 0x06f1, description: \"(\\u042F) CYRILLIC CAPITAL LETTER YA\" },\n  XK_Cyrillic_ER:                   { code: 0x06f2, description: \"(\\u0420) CYRILLIC CAPITAL LETTER ER\" },\n  XK_Cyrillic_ES:                   { code: 0x06f3, description: \"(\\u0421) CYRILLIC CAPITAL LETTER ES\" },\n  XK_Cyrillic_TE:                   { code: 0x06f4, description: \"(\\u0422) CYRILLIC CAPITAL LETTER TE\" },\n  XK_Cyrillic_U:                    { code: 0x06f5, description: \"(\\u0423) CYRILLIC CAPITAL LETTER U\" },\n  XK_Cyrillic_ZHE:                  { code: 0x06f6, description: \"(\\u0416) CYRILLIC CAPITAL LETTER ZHE\" },\n  XK_Cyrillic_VE:                   { code: 0x06f7, description: \"(\\u0412) CYRILLIC CAPITAL LETTER VE\" },\n  XK_Cyrillic_SOFTSIGN:             { code: 0x06f8, description: \"(\\u042C) CYRILLIC CAPITAL LETTER SOFT SIGN\" },\n  XK_Cyrillic_YERU:                 { code: 0x06f9, description: \"(\\u042B) CYRILLIC CAPITAL LETTER YERU\" },\n  XK_Cyrillic_ZE:                   { code: 0x06fa, description: \"(\\u0417) CYRILLIC CAPITAL LETTER ZE\" },\n  XK_Cyrillic_SHA:                  { code: 0x06fb, description: \"(\\u0428) CYRILLIC CAPITAL LETTER SHA\" },\n  XK_Cyrillic_E:                    { code: 0x06fc, description: \"(\\u042D) CYRILLIC CAPITAL LETTER E\" },\n  XK_Cyrillic_SHCHA:                { code: 0x06fd, description: \"(\\u0429) CYRILLIC CAPITAL LETTER SHCHA\" },\n  XK_Cyrillic_CHE:                  { code: 0x06fe, description: \"(\\u0427) CYRILLIC CAPITAL LETTER CHE\" },\n  XK_Cyrillic_HARDSIGN:             { code: 0x06ff, description: \"(\\u042A) CYRILLIC CAPITAL LETTER HARD SIGN\" },\n\n\n/*\n * Greek\n * (based on an early draft of, and not quite identical to, ISO/IEC 8859-7)\n * Byte 3 = 7\n */\n\n// Group XK_GREEK\n  XK_Greek_ALPHAaccent:             { code: 0x07a1, description: \"(\\u0386) GREEK CAPITAL LETTER ALPHA WITH TONOS\" },\n  XK_Greek_EPSILONaccent:           { code: 0x07a2, description: \"(\\u0388) GREEK CAPITAL LETTER EPSILON WITH TONOS\" },\n  XK_Greek_ETAaccent:               { code: 0x07a3, description: \"(\\u0389) GREEK CAPITAL LETTER ETA WITH TONOS\" },\n  XK_Greek_IOTAaccent:              { code: 0x07a4, description: \"(\\u038A) GREEK CAPITAL LETTER IOTA WITH TONOS\" },\n  XK_Greek_IOTAdieresis:            { code: 0x07a5, description: \"(\\u03AA) GREEK CAPITAL LETTER IOTA WITH DIALYTIKA\" },\n  XK_Greek_IOTAdiaeresis:           { code: 0x07a5, description: \"old typo\" },\n  XK_Greek_OMICRONaccent:           { code: 0x07a7, description: \"(\\u038C) GREEK CAPITAL LETTER OMICRON WITH TONOS\" },\n  XK_Greek_UPSILONaccent:           { code: 0x07a8, description: \"(\\u038E) GREEK CAPITAL LETTER UPSILON WITH TONOS\" },\n  XK_Greek_UPSILONdieresis:         { code: 0x07a9, description: \"(\\u03AB) GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA\" },\n  XK_Greek_OMEGAaccent:             { code: 0x07ab, description: \"(\\u038F) GREEK CAPITAL LETTER OMEGA WITH TONOS\" },\n  XK_Greek_accentdieresis:          { code: 0x07ae, description: \"(\\u0385) GREEK DIALYTIKA TONOS\" },\n  XK_Greek_horizbar:                { code: 0x07af, description: \"(\\u2015) HORIZONTAL BAR\" },\n  XK_Greek_alphaaccent:             { code: 0x07b1, description: \"(\\u03AC) GREEK SMALL LETTER ALPHA WITH TONOS\" },\n  XK_Greek_epsilonaccent:           { code: 0x07b2, description: \"(\\u03AD) GREEK SMALL LETTER EPSILON WITH TONOS\" },\n  XK_Greek_etaaccent:               { code: 0x07b3, description: \"(\\u03AE) GREEK SMALL LETTER ETA WITH TONOS\" },\n  XK_Greek_iotaaccent:              { code: 0x07b4, description: \"(\\u03AF) GREEK SMALL LETTER IOTA WITH TONOS\" },\n  XK_Greek_iotadieresis:            { code: 0x07b5, description: \"(\\u03CA) GREEK SMALL LETTER IOTA WITH DIALYTIKA\" },\n  XK_Greek_iotaaccentdieresis:      { code: 0x07b6, description: \"(\\u0390) GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS\" },\n  XK_Greek_omicronaccent:           { code: 0x07b7, description: \"(\\u03CC) GREEK SMALL LETTER OMICRON WITH TONOS\" },\n  XK_Greek_upsilonaccent:           { code: 0x07b8, description: \"(\\u03CD) GREEK SMALL LETTER UPSILON WITH TONOS\" },\n  XK_Greek_upsilondieresis:         { code: 0x07b9, description: \"(\\u03CB) GREEK SMALL LETTER UPSILON WITH DIALYTIKA\" },\n  XK_Greek_upsilonaccentdieresis:   { code: 0x07ba, description: \"(\\u03B0) GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS\" },\n  XK_Greek_omegaaccent:             { code: 0x07bb, description: \"(\\u03CE) GREEK SMALL LETTER OMEGA WITH TONOS\" },\n  XK_Greek_ALPHA:                   { code: 0x07c1, description: \"(\\u0391) GREEK CAPITAL LETTER ALPHA\" },\n  XK_Greek_BETA:                    { code: 0x07c2, description: \"(\\u0392) GREEK CAPITAL LETTER BETA\" },\n  XK_Greek_GAMMA:                   { code: 0x07c3, description: \"(\\u0393) GREEK CAPITAL LETTER GAMMA\" },\n  XK_Greek_DELTA:                   { code: 0x07c4, description: \"(\\u0394) GREEK CAPITAL LETTER DELTA\" },\n  XK_Greek_EPSILON:                 { code: 0x07c5, description: \"(\\u0395) GREEK CAPITAL LETTER EPSILON\" },\n  XK_Greek_ZETA:                    { code: 0x07c6, description: \"(\\u0396) GREEK CAPITAL LETTER ZETA\" },\n  XK_Greek_ETA:                     { code: 0x07c7, description: \"(\\u0397) GREEK CAPITAL LETTER ETA\" },\n  XK_Greek_THETA:                   { code: 0x07c8, description: \"(\\u0398) GREEK CAPITAL LETTER THETA\" },\n  XK_Greek_IOTA:                    { code: 0x07c9, description: \"(\\u0399) GREEK CAPITAL LETTER IOTA\" },\n  XK_Greek_KAPPA:                   { code: 0x07ca, description: \"(\\u039A) GREEK CAPITAL LETTER KAPPA\" },\n  XK_Greek_LAMDA:                   { code: 0x07cb, description: \"(\\u039B) GREEK CAPITAL LETTER LAMDA\" },\n  XK_Greek_LAMBDA:                  { code: 0x07cb, description: \"(\\u039B) GREEK CAPITAL LETTER LAMDA\" },\n  XK_Greek_MU:                      { code: 0x07cc, description: \"(\\u039C) GREEK CAPITAL LETTER MU\" },\n  XK_Greek_NU:                      { code: 0x07cd, description: \"(\\u039D) GREEK CAPITAL LETTER NU\" },\n  XK_Greek_XI:                      { code: 0x07ce, description: \"(\\u039E) GREEK CAPITAL LETTER XI\" },\n  XK_Greek_OMICRON:                 { code: 0x07cf, description: \"(\\u039F) GREEK CAPITAL LETTER OMICRON\" },\n  XK_Greek_PI:                      { code: 0x07d0, description: \"(\\u03A0) GREEK CAPITAL LETTER PI\" },\n  XK_Greek_RHO:                     { code: 0x07d1, description: \"(\\u03A1) GREEK CAPITAL LETTER RHO\" },\n  XK_Greek_SIGMA:                   { code: 0x07d2, description: \"(\\u03A3) GREEK CAPITAL LETTER SIGMA\" },\n  XK_Greek_TAU:                     { code: 0x07d4, description: \"(\\u03A4) GREEK CAPITAL LETTER TAU\" },\n  XK_Greek_UPSILON:                 { code: 0x07d5, description: \"(\\u03A5) GREEK CAPITAL LETTER UPSILON\" },\n  XK_Greek_PHI:                     { code: 0x07d6, description: \"(\\u03A6) GREEK CAPITAL LETTER PHI\" },\n  XK_Greek_CHI:                     { code: 0x07d7, description: \"(\\u03A7) GREEK CAPITAL LETTER CHI\" },\n  XK_Greek_PSI:                     { code: 0x07d8, description: \"(\\u03A8) GREEK CAPITAL LETTER PSI\" },\n  XK_Greek_OMEGA:                   { code: 0x07d9, description: \"(\\u03A9) GREEK CAPITAL LETTER OMEGA\" },\n  XK_Greek_alpha:                   { code: 0x07e1, description: \"(\\u03B1) GREEK SMALL LETTER ALPHA\" },\n  XK_Greek_beta:                    { code: 0x07e2, description: \"(\\u03B2) GREEK SMALL LETTER BETA\" },\n  XK_Greek_gamma:                   { code: 0x07e3, description: \"(\\u03B3) GREEK SMALL LETTER GAMMA\" },\n  XK_Greek_delta:                   { code: 0x07e4, description: \"(\\u03B4) GREEK SMALL LETTER DELTA\" },\n  XK_Greek_epsilon:                 { code: 0x07e5, description: \"(\\u03B5) GREEK SMALL LETTER EPSILON\" },\n  XK_Greek_zeta:                    { code: 0x07e6, description: \"(\\u03B6) GREEK SMALL LETTER ZETA\" },\n  XK_Greek_eta:                     { code: 0x07e7, description: \"(\\u03B7) GREEK SMALL LETTER ETA\" },\n  XK_Greek_theta:                   { code: 0x07e8, description: \"(\\u03B8) GREEK SMALL LETTER THETA\" },\n  XK_Greek_iota:                    { code: 0x07e9, description: \"(\\u03B9) GREEK SMALL LETTER IOTA\" },\n  XK_Greek_kappa:                   { code: 0x07ea, description: \"(\\u03BA) GREEK SMALL LETTER KAPPA\" },\n  XK_Greek_lamda:                   { code: 0x07eb, description: \"(\\u03BB) GREEK SMALL LETTER LAMDA\" },\n  XK_Greek_lambda:                  { code: 0x07eb, description: \"(\\u03BB) GREEK SMALL LETTER LAMDA\" },\n  XK_Greek_mu:                      { code: 0x07ec, description: \"(\\u03BC) GREEK SMALL LETTER MU\" },\n  XK_Greek_nu:                      { code: 0x07ed, description: \"(\\u03BD) GREEK SMALL LETTER NU\" },\n  XK_Greek_xi:                      { code: 0x07ee, description: \"(\\u03BE) GREEK SMALL LETTER XI\" },\n  XK_Greek_omicron:                 { code: 0x07ef, description: \"(\\u03BF) GREEK SMALL LETTER OMICRON\" },\n  XK_Greek_pi:                      { code: 0x07f0, description: \"(\\u03C0) GREEK SMALL LETTER PI\" },\n  XK_Greek_rho:                     { code: 0x07f1, description: \"(\\u03C1) GREEK SMALL LETTER RHO\" },\n  XK_Greek_sigma:                   { code: 0x07f2, description: \"(\\u03C3) GREEK SMALL LETTER SIGMA\" },\n  XK_Greek_finalsmallsigma:         { code: 0x07f3, description: \"(\\u03C2) GREEK SMALL LETTER FINAL SIGMA\" },\n  XK_Greek_tau:                     { code: 0x07f4, description: \"(\\u03C4) GREEK SMALL LETTER TAU\" },\n  XK_Greek_upsilon:                 { code: 0x07f5, description: \"(\\u03C5) GREEK SMALL LETTER UPSILON\" },\n  XK_Greek_phi:                     { code: 0x07f6, description: \"(\\u03C6) GREEK SMALL LETTER PHI\" },\n  XK_Greek_chi:                     { code: 0x07f7, description: \"(\\u03C7) GREEK SMALL LETTER CHI\" },\n  XK_Greek_psi:                     { code: 0x07f8, description: \"(\\u03C8) GREEK SMALL LETTER PSI\" },\n  XK_Greek_omega:                   { code: 0x07f9, description: \"(\\u03C9) GREEK SMALL LETTER OMEGA\" },\n  XK_Greek_switch:                  { code: 0xff7e, description: \"Alias for mode_switch\" },\n\n\n/*\n * Technical\n * (from the DEC VT330/VT420 Technical Character Set, http://vt100.net/charsets/technical.html)\n * Byte 3 = 8\n */\n\n// Group XK_TECHNICAL\n  XK_leftradical:                   { code: 0x08a1, description: \"(\\u23B7) RADICAL SYMBOL BOTTOM\" },\n  XK_topleftradical:                { code: 0x08a2, description: \"((\\u250C) BOX DRAWINGS LIGHT DOWN AND RIGHT)\" },\n  XK_horizconnector:                { code: 0x08a3, description: \"((\\u2500) BOX DRAWINGS LIGHT HORIZONTAL)\" },\n  XK_topintegral:                   { code: 0x08a4, description: \"(\\u2320) TOP HALF INTEGRAL\" },\n  XK_botintegral:                   { code: 0x08a5, description: \"(\\u2321) BOTTOM HALF INTEGRAL\" },\n  XK_vertconnector:                 { code: 0x08a6, description: \"((\\u2502) BOX DRAWINGS LIGHT VERTICAL)\" },\n  XK_topleftsqbracket:              { code: 0x08a7, description: \"(\\u23A1) LEFT SQUARE BRACKET UPPER CORNER\" },\n  XK_botleftsqbracket:              { code: 0x08a8, description: \"(\\u23A3) LEFT SQUARE BRACKET LOWER CORNER\" },\n  XK_toprightsqbracket:             { code: 0x08a9, description: \"(\\u23A4) RIGHT SQUARE BRACKET UPPER CORNER\" },\n  XK_botrightsqbracket:             { code: 0x08aa, description: \"(\\u23A6) RIGHT SQUARE BRACKET LOWER CORNER\" },\n  XK_topleftparens:                 { code: 0x08ab, description: \"(\\u239B) LEFT PARENTHESIS UPPER HOOK\" },\n  XK_botleftparens:                 { code: 0x08ac, description: \"(\\u239D) LEFT PARENTHESIS LOWER HOOK\" },\n  XK_toprightparens:                { code: 0x08ad, description: \"(\\u239E) RIGHT PARENTHESIS UPPER HOOK\" },\n  XK_botrightparens:                { code: 0x08ae, description: \"(\\u23A0) RIGHT PARENTHESIS LOWER HOOK\" },\n  XK_leftmiddlecurlybrace:          { code: 0x08af, description: \"(\\u23A8) LEFT CURLY BRACKET MIDDLE PIECE\" },\n  XK_rightmiddlecurlybrace:         { code: 0x08b0, description: \"(\\u23AC) RIGHT CURLY BRACKET MIDDLE PIECE\" },\n  XK_topleftsummation:              { code: 0x08b1, description: null },\n  XK_botleftsummation:              { code: 0x08b2, description: null },\n  XK_topvertsummationconnector:     { code: 0x08b3, description: null },\n  XK_botvertsummationconnector:     { code: 0x08b4, description: null },\n  XK_toprightsummation:             { code: 0x08b5, description: null },\n  XK_botrightsummation:             { code: 0x08b6, description: null },\n  XK_rightmiddlesummation:          { code: 0x08b7, description: null },\n  XK_lessthanequal:                 { code: 0x08bc, description: \"(\\u2264) LESS-THAN OR EQUAL TO\" },\n  XK_notequal:                      { code: 0x08bd, description: \"(\\u2260) NOT EQUAL TO\" },\n  XK_greaterthanequal:              { code: 0x08be, description: \"(\\u2265) GREATER-THAN OR EQUAL TO\" },\n  XK_integral:                      { code: 0x08bf, description: \"(\\u222B) INTEGRAL\" },\n  XK_therefore:                     { code: 0x08c0, description: \"(\\u2234) THEREFORE\" },\n  XK_variation:                     { code: 0x08c1, description: \"(\\u221D) PROPORTIONAL TO\" },\n  XK_infinity:                      { code: 0x08c2, description: \"(\\u221E) INFINITY\" },\n  XK_nabla:                         { code: 0x08c5, description: \"(\\u2207) NABLA\" },\n  XK_approximate:                   { code: 0x08c8, description: \"(\\u223C) TILDE OPERATOR\" },\n  XK_similarequal:                  { code: 0x08c9, description: \"(\\u2243) ASYMPTOTICALLY EQUAL TO\" },\n  XK_ifonlyif:                      { code: 0x08cd, description: \"(\\u21D4) LEFT RIGHT DOUBLE ARROW\" },\n  XK_implies:                       { code: 0x08ce, description: \"(\\u21D2) RIGHTWARDS DOUBLE ARROW\" },\n  XK_identical:                     { code: 0x08cf, description: \"(\\u2261) IDENTICAL TO\" },\n  XK_radical:                       { code: 0x08d6, description: \"(\\u221A) SQUARE ROOT\" },\n  XK_includedin:                    { code: 0x08da, description: \"(\\u2282) SUBSET OF\" },\n  XK_includes:                      { code: 0x08db, description: \"(\\u2283) SUPERSET OF\" },\n  XK_intersection:                  { code: 0x08dc, description: \"(\\u2229) INTERSECTION\" },\n  XK_union:                         { code: 0x08dd, description: \"(\\u222A) UNION\" },\n  XK_logicaland:                    { code: 0x08de, description: \"(\\u2227) LOGICAL AND\" },\n  XK_logicalor:                     { code: 0x08df, description: \"(\\u2228) LOGICAL OR\" },\n  XK_partialderivative:             { code: 0x08ef, description: \"(\\u2202) PARTIAL DIFFERENTIAL\" },\n  XK_function:                      { code: 0x08f6, description: \"(\\u0192) LATIN SMALL LETTER F WITH HOOK\" },\n  XK_leftarrow:                     { code: 0x08fb, description: \"(\\u2190) LEFTWARDS ARROW\" },\n  XK_uparrow:                       { code: 0x08fc, description: \"(\\u2191) UPWARDS ARROW\" },\n  XK_rightarrow:                    { code: 0x08fd, description: \"(\\u2192) RIGHTWARDS ARROW\" },\n  XK_downarrow:                     { code: 0x08fe, description: \"(\\u2193) DOWNWARDS ARROW\" },\n\n\n/*\n * Special\n * (from the DEC VT100 Special Graphics Character Set)\n * Byte 3 = 9\n */\n\n// Group XK_SPECIAL\n  XK_blank:                         { code: 0x09df, description: null },\n  XK_soliddiamond:                  { code: 0x09e0, description: \"(\\u25C6) BLACK DIAMOND\" },\n  XK_checkerboard:                  { code: 0x09e1, description: \"(\\u2592) MEDIUM SHADE\" },\n  XK_ht:                            { code: 0x09e2, description: \"(\\u2409) SYMBOL FOR HORIZONTAL TABULATION\" },\n  XK_ff:                            { code: 0x09e3, description: \"(\\u240C) SYMBOL FOR FORM FEED\" },\n  XK_cr:                            { code: 0x09e4, description: \"(\\u240D) SYMBOL FOR CARRIAGE RETURN\" },\n  XK_lf:                            { code: 0x09e5, description: \"(\\u240A) SYMBOL FOR LINE FEED\" },\n  XK_nl:                            { code: 0x09e8, description: \"(\\u2424) SYMBOL FOR NEWLINE\" },\n  XK_vt:                            { code: 0x09e9, description: \"(\\u240B) SYMBOL FOR VERTICAL TABULATION\" },\n  XK_lowrightcorner:                { code: 0x09ea, description: \"(\\u2518) BOX DRAWINGS LIGHT UP AND LEFT\" },\n  XK_uprightcorner:                 { code: 0x09eb, description: \"(\\u2510) BOX DRAWINGS LIGHT DOWN AND LEFT\" },\n  XK_upleftcorner:                  { code: 0x09ec, description: \"(\\u250C) BOX DRAWINGS LIGHT DOWN AND RIGHT\" },\n  XK_lowleftcorner:                 { code: 0x09ed, description: \"(\\u2514) BOX DRAWINGS LIGHT UP AND RIGHT\" },\n  XK_crossinglines:                 { code: 0x09ee, description: \"(\\u253C) BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL\" },\n  XK_horizlinescan1:                { code: 0x09ef, description: \"(\\u23BA) HORIZONTAL SCAN LINE-1\" },\n  XK_horizlinescan3:                { code: 0x09f0, description: \"(\\u23BB) HORIZONTAL SCAN LINE-3\" },\n  XK_horizlinescan5:                { code: 0x09f1, description: \"(\\u2500) BOX DRAWINGS LIGHT HORIZONTAL\" },\n  XK_horizlinescan7:                { code: 0x09f2, description: \"(\\u23BC) HORIZONTAL SCAN LINE-7\" },\n  XK_horizlinescan9:                { code: 0x09f3, description: \"(\\u23BD) HORIZONTAL SCAN LINE-9\" },\n  XK_leftt:                         { code: 0x09f4, description: \"(\\u251C) BOX DRAWINGS LIGHT VERTICAL AND RIGHT\" },\n  XK_rightt:                        { code: 0x09f5, description: \"(\\u2524) BOX DRAWINGS LIGHT VERTICAL AND LEFT\" },\n  XK_bott:                          { code: 0x09f6, description: \"(\\u2534) BOX DRAWINGS LIGHT UP AND HORIZONTAL\" },\n  XK_topt:                          { code: 0x09f7, description: \"(\\u252C) BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\" },\n  XK_vertbar:                       { code: 0x09f8, description: \"(\\u2502) BOX DRAWINGS LIGHT VERTICAL\" },\n\n\n/*\n * Publishing\n * (these are probably from a long forgotten DEC Publishing\n * font that once shipped with DECwrite)\n * Byte 3 = 0x0a\n */\n\n// Group XK_PUBLISHING\n  XK_emspace:                       { code: 0x0aa1, description: \"(\\u2003) EM SPACE\" },\n  XK_enspace:                       { code: 0x0aa2, description: \"(\\u2002) EN SPACE\" },\n  XK_em3space:                      { code: 0x0aa3, description: \"(\\u2004) THREE-PER-EM SPACE\" },\n  XK_em4space:                      { code: 0x0aa4, description: \"(\\u2005) FOUR-PER-EM SPACE\" },\n  XK_digitspace:                    { code: 0x0aa5, description: \"(\\u2007) FIGURE SPACE\" },\n  XK_punctspace:                    { code: 0x0aa6, description: \"(\\u2008) PUNCTUATION SPACE\" },\n  XK_thinspace:                     { code: 0x0aa7, description: \"(\\u2009) THIN SPACE\" },\n  XK_hairspace:                     { code: 0x0aa8, description: \"(\\u200A) HAIR SPACE\" },\n  XK_emdash:                        { code: 0x0aa9, description: \"(\\u2014) EM DASH\" },\n  XK_endash:                        { code: 0x0aaa, description: \"(\\u2013) EN DASH\" },\n  XK_signifblank:                   { code: 0x0aac, description: \"((\\u2423) OPEN BOX)\" },\n  XK_ellipsis:                      { code: 0x0aae, description: \"(\\u2026) HORIZONTAL ELLIPSIS\" },\n  XK_doubbaselinedot:               { code: 0x0aaf, description: \"(\\u2025) TWO DOT LEADER\" },\n  XK_onethird:                      { code: 0x0ab0, description: \"(\\u2153) VULGAR FRACTION ONE THIRD\" },\n  XK_twothirds:                     { code: 0x0ab1, description: \"(\\u2154) VULGAR FRACTION TWO THIRDS\" },\n  XK_onefifth:                      { code: 0x0ab2, description: \"(\\u2155) VULGAR FRACTION ONE FIFTH\" },\n  XK_twofifths:                     { code: 0x0ab3, description: \"(\\u2156) VULGAR FRACTION TWO FIFTHS\" },\n  XK_threefifths:                   { code: 0x0ab4, description: \"(\\u2157) VULGAR FRACTION THREE FIFTHS\" },\n  XK_fourfifths:                    { code: 0x0ab5, description: \"(\\u2158) VULGAR FRACTION FOUR FIFTHS\" },\n  XK_onesixth:                      { code: 0x0ab6, description: \"(\\u2159) VULGAR FRACTION ONE SIXTH\" },\n  XK_fivesixths:                    { code: 0x0ab7, description: \"(\\u215A) VULGAR FRACTION FIVE SIXTHS\" },\n  XK_careof:                        { code: 0x0ab8, description: \"(\\u2105) CARE OF\" },\n  XK_figdash:                       { code: 0x0abb, description: \"(\\u2012) FIGURE DASH\" },\n  XK_leftanglebracket:              { code: 0x0abc, description: \"((\\u27E8) MATHEMATICAL LEFT ANGLE BRACKET)\" },\n  XK_decimalpoint:                  { code: 0x0abd, description: \"((\\u002E) FULL STOP)\" },\n  XK_rightanglebracket:             { code: 0x0abe, description: \"((\\u27E9) MATHEMATICAL RIGHT ANGLE BRACKET)\" },\n  XK_marker:                        { code: 0x0abf, description: null },\n  XK_oneeighth:                     { code: 0x0ac3, description: \"(\\u215B) VULGAR FRACTION ONE EIGHTH\" },\n  XK_threeeighths:                  { code: 0x0ac4, description: \"(\\u215C) VULGAR FRACTION THREE EIGHTHS\" },\n  XK_fiveeighths:                   { code: 0x0ac5, description: \"(\\u215D) VULGAR FRACTION FIVE EIGHTHS\" },\n  XK_seveneighths:                  { code: 0x0ac6, description: \"(\\u215E) VULGAR FRACTION SEVEN EIGHTHS\" },\n  XK_trademark:                     { code: 0x0ac9, description: \"(\\u2122) TRADE MARK SIGN\" },\n  XK_signaturemark:                 { code: 0x0aca, description: \"((\\u2613) SALTIRE)\" },\n  XK_trademarkincircle:             { code: 0x0acb, description: null },\n  XK_leftopentriangle:              { code: 0x0acc, description: \"((\\u25C1) WHITE LEFT-POINTING TRIANGLE)\" },\n  XK_rightopentriangle:             { code: 0x0acd, description: \"((\\u25B7) WHITE RIGHT-POINTING TRIANGLE)\" },\n  XK_emopencircle:                  { code: 0x0ace, description: \"((\\u25CB) WHITE CIRCLE)\" },\n  XK_emopenrectangle:               { code: 0x0acf, description: \"((\\u25AF) WHITE VERTICAL RECTANGLE)\" },\n  XK_leftsinglequotemark:           { code: 0x0ad0, description: \"(\\u2018) LEFT SINGLE QUOTATION MARK\" },\n  XK_rightsinglequotemark:          { code: 0x0ad1, description: \"(\\u2019) RIGHT SINGLE QUOTATION MARK\" },\n  XK_leftdoublequotemark:           { code: 0x0ad2, description: \"(\\u201C) LEFT DOUBLE QUOTATION MARK\" },\n  XK_rightdoublequotemark:          { code: 0x0ad3, description: \"(\\u201D) RIGHT DOUBLE QUOTATION MARK\" },\n  XK_prescription:                  { code: 0x0ad4, description: \"(\\u211E) PRESCRIPTION TAKE\" },\n  XK_permille:                      { code: 0x0ad5, description: \"(\\u2030) PER MILLE SIGN\" },\n  XK_minutes:                       { code: 0x0ad6, description: \"(\\u2032) PRIME\" },\n  XK_seconds:                       { code: 0x0ad7, description: \"(\\u2033) DOUBLE PRIME\" },\n  XK_latincross:                    { code: 0x0ad9, description: \"(\\u271D) LATIN CROSS\" },\n  XK_hexagram:                      { code: 0x0ada, description: null },\n  XK_filledrectbullet:              { code: 0x0adb, description: \"((\\u25AC) BLACK RECTANGLE)\" },\n  XK_filledlefttribullet:           { code: 0x0adc, description: \"((\\u25C0) BLACK LEFT-POINTING TRIANGLE)\" },\n  XK_filledrighttribullet:          { code: 0x0add, description: \"((\\u25B6) BLACK RIGHT-POINTING TRIANGLE)\" },\n  XK_emfilledcircle:                { code: 0x0ade, description: \"((\\u25CF) BLACK CIRCLE)\" },\n  XK_emfilledrect:                  { code: 0x0adf, description: \"((\\u25AE) BLACK VERTICAL RECTANGLE)\" },\n  XK_enopencircbullet:              { code: 0x0ae0, description: \"((\\u25E6) WHITE BULLET)\" },\n  XK_enopensquarebullet:            { code: 0x0ae1, description: \"((\\u25AB) WHITE SMALL SQUARE)\" },\n  XK_openrectbullet:                { code: 0x0ae2, description: \"((\\u25AD) WHITE RECTANGLE)\" },\n  XK_opentribulletup:               { code: 0x0ae3, description: \"((\\u25B3) WHITE UP-POINTING TRIANGLE)\" },\n  XK_opentribulletdown:             { code: 0x0ae4, description: \"((\\u25BD) WHITE DOWN-POINTING TRIANGLE)\" },\n  XK_openstar:                      { code: 0x0ae5, description: \"((\\u2606) WHITE STAR)\" },\n  XK_enfilledcircbullet:            { code: 0x0ae6, description: \"((\\u2022) BULLET)\" },\n  XK_enfilledsqbullet:              { code: 0x0ae7, description: \"((\\u25AA) BLACK SMALL SQUARE)\" },\n  XK_filledtribulletup:             { code: 0x0ae8, description: \"((\\u25B2) BLACK UP-POINTING TRIANGLE)\" },\n  XK_filledtribulletdown:           { code: 0x0ae9, description: \"((\\u25BC) BLACK DOWN-POINTING TRIANGLE)\" },\n  XK_leftpointer:                   { code: 0x0aea, description: \"((\\u261C) WHITE LEFT POINTING INDEX)\" },\n  XK_rightpointer:                  { code: 0x0aeb, description: \"((\\u261E) WHITE RIGHT POINTING INDEX)\" },\n  XK_club:                          { code: 0x0aec, description: \"(\\u2663) BLACK CLUB SUIT\" },\n  XK_diamond:                       { code: 0x0aed, description: \"(\\u2666) BLACK DIAMOND SUIT\" },\n  XK_heart:                         { code: 0x0aee, description: \"(\\u2665) BLACK HEART SUIT\" },\n  XK_maltesecross:                  { code: 0x0af0, description: \"(\\u2720) MALTESE CROSS\" },\n  XK_dagger:                        { code: 0x0af1, description: \"(\\u2020) DAGGER\" },\n  XK_doubledagger:                  { code: 0x0af2, description: \"(\\u2021) DOUBLE DAGGER\" },\n  XK_checkmark:                     { code: 0x0af3, description: \"(\\u2713) CHECK MARK\" },\n  XK_ballotcross:                   { code: 0x0af4, description: \"(\\u2717) BALLOT X\" },\n  XK_musicalsharp:                  { code: 0x0af5, description: \"(\\u266F) MUSIC SHARP SIGN\" },\n  XK_musicalflat:                   { code: 0x0af6, description: \"(\\u266D) MUSIC FLAT SIGN\" },\n  XK_malesymbol:                    { code: 0x0af7, description: \"(\\u2642) MALE SIGN\" },\n  XK_femalesymbol:                  { code: 0x0af8, description: \"(\\u2640) FEMALE SIGN\" },\n  XK_telephone:                     { code: 0x0af9, description: \"(\\u260E) BLACK TELEPHONE\" },\n  XK_telephonerecorder:             { code: 0x0afa, description: \"(\\u2315) TELEPHONE RECORDER\" },\n  XK_phonographcopyright:           { code: 0x0afb, description: \"(\\u2117) SOUND RECORDING COPYRIGHT\" },\n  XK_caret:                         { code: 0x0afc, description: \"(\\u2038) CARET\" },\n  XK_singlelowquotemark:            { code: 0x0afd, description: \"(\\u201A) SINGLE LOW-9 QUOTATION MARK\" },\n  XK_doublelowquotemark:            { code: 0x0afe, description: \"(\\u201E) DOUBLE LOW-9 QUOTATION MARK\" },\n  XK_cursor:                        { code: 0x0aff, description: null },\n\n\n/*\n * APL\n * Byte 3 = 0x0b\n */\n\n// Group XK_APL\n  XK_leftcaret:                     { code: 0x0ba3, description: \"((\\u003C) LESS-THAN SIGN)\" },\n  XK_rightcaret:                    { code: 0x0ba6, description: \"((\\u003E) GREATER-THAN SIGN)\" },\n  XK_downcaret:                     { code: 0x0ba8, description: \"((\\u2228) LOGICAL OR)\" },\n  XK_upcaret:                       { code: 0x0ba9, description: \"((\\u2227) LOGICAL AND)\" },\n  XK_overbar:                       { code: 0x0bc0, description: \"((\\u00AF) MACRON)\" },\n  XK_downtack:                      { code: 0x0bc2, description: \"(\\u22A4) DOWN TACK\" },\n  XK_upshoe:                        { code: 0x0bc3, description: \"((\\u2229) INTERSECTION)\" },\n  XK_downstile:                     { code: 0x0bc4, description: \"(\\u230A) LEFT FLOOR\" },\n  XK_underbar:                      { code: 0x0bc6, description: \"((\\u005F) LOW LINE)\" },\n  XK_jot:                           { code: 0x0bca, description: \"(\\u2218) RING OPERATOR\" },\n  XK_quad:                          { code: 0x0bcc, description: \"(\\u2395) APL FUNCTIONAL SYMBOL QUAD\" },\n  XK_uptack:                        { code: 0x0bce, description: \"(\\u22A5) UP TACK\" },\n  XK_circle:                        { code: 0x0bcf, description: \"(\\u25CB) WHITE CIRCLE\" },\n  XK_upstile:                       { code: 0x0bd3, description: \"(\\u2308) LEFT CEILING\" },\n  XK_downshoe:                      { code: 0x0bd6, description: \"((\\u222A) UNION)\" },\n  XK_rightshoe:                     { code: 0x0bd8, description: \"((\\u2283) SUPERSET OF)\" },\n  XK_leftshoe:                      { code: 0x0bda, description: \"((\\u2282) SUBSET OF)\" },\n  XK_lefttack:                      { code: 0x0bdc, description: \"(\\u22A3) LEFT TACK\" },\n  XK_righttack:                     { code: 0x0bfc, description: \"(\\u22A2) RIGHT TACK\" },\n\n\n/*\n * Hebrew\n * Byte 3 = 0x0c\n */\n\n// Group XK_HEBREW\n  XK_hebrew_doublelowline:          { code: 0x0cdf, description: \"(\\u2017) DOUBLE LOW LINE\" },\n  XK_hebrew_aleph:                  { code: 0x0ce0, description: \"(\\u05D0) HEBREW LETTER ALEF\" },\n  XK_hebrew_bet:                    { code: 0x0ce1, description: \"(\\u05D1) HEBREW LETTER BET\" },\n  XK_hebrew_beth:                   { code: 0x0ce1, description: \"deprecated\" },\n  XK_hebrew_gimel:                  { code: 0x0ce2, description: \"(\\u05D2) HEBREW LETTER GIMEL\" },\n  XK_hebrew_gimmel:                 { code: 0x0ce2, description: \"deprecated\" },\n  XK_hebrew_dalet:                  { code: 0x0ce3, description: \"(\\u05D3) HEBREW LETTER DALET\" },\n  XK_hebrew_daleth:                 { code: 0x0ce3, description: \"deprecated\" },\n  XK_hebrew_he:                     { code: 0x0ce4, description: \"(\\u05D4) HEBREW LETTER HE\" },\n  XK_hebrew_waw:                    { code: 0x0ce5, description: \"(\\u05D5) HEBREW LETTER VAV\" },\n  XK_hebrew_zain:                   { code: 0x0ce6, description: \"(\\u05D6) HEBREW LETTER ZAYIN\" },\n  XK_hebrew_zayin:                  { code: 0x0ce6, description: \"deprecated\" },\n  XK_hebrew_chet:                   { code: 0x0ce7, description: \"(\\u05D7) HEBREW LETTER HET\" },\n  XK_hebrew_het:                    { code: 0x0ce7, description: \"deprecated\" },\n  XK_hebrew_tet:                    { code: 0x0ce8, description: \"(\\u05D8) HEBREW LETTER TET\" },\n  XK_hebrew_teth:                   { code: 0x0ce8, description: \"deprecated\" },\n  XK_hebrew_yod:                    { code: 0x0ce9, description: \"(\\u05D9) HEBREW LETTER YOD\" },\n  XK_hebrew_finalkaph:              { code: 0x0cea, description: \"(\\u05DA) HEBREW LETTER FINAL KAF\" },\n  XK_hebrew_kaph:                   { code: 0x0ceb, description: \"(\\u05DB) HEBREW LETTER KAF\" },\n  XK_hebrew_lamed:                  { code: 0x0cec, description: \"(\\u05DC) HEBREW LETTER LAMED\" },\n  XK_hebrew_finalmem:               { code: 0x0ced, description: \"(\\u05DD) HEBREW LETTER FINAL MEM\" },\n  XK_hebrew_mem:                    { code: 0x0cee, description: \"(\\u05DE) HEBREW LETTER MEM\" },\n  XK_hebrew_finalnun:               { code: 0x0cef, description: \"(\\u05DF) HEBREW LETTER FINAL NUN\" },\n  XK_hebrew_nun:                    { code: 0x0cf0, description: \"(\\u05E0) HEBREW LETTER NUN\" },\n  XK_hebrew_samech:                 { code: 0x0cf1, description: \"(\\u05E1) HEBREW LETTER SAMEKH\" },\n  XK_hebrew_samekh:                 { code: 0x0cf1, description: \"deprecated\" },\n  XK_hebrew_ayin:                   { code: 0x0cf2, description: \"(\\u05E2) HEBREW LETTER AYIN\" },\n  XK_hebrew_finalpe:                { code: 0x0cf3, description: \"(\\u05E3) HEBREW LETTER FINAL PE\" },\n  XK_hebrew_pe:                     { code: 0x0cf4, description: \"(\\u05E4) HEBREW LETTER PE\" },\n  XK_hebrew_finalzade:              { code: 0x0cf5, description: \"(\\u05E5) HEBREW LETTER FINAL TSADI\" },\n  XK_hebrew_finalzadi:              { code: 0x0cf5, description: \"deprecated\" },\n  XK_hebrew_zade:                   { code: 0x0cf6, description: \"(\\u05E6) HEBREW LETTER TSADI\" },\n  XK_hebrew_zadi:                   { code: 0x0cf6, description: \"deprecated\" },\n  XK_hebrew_qoph:                   { code: 0x0cf7, description: \"(\\u05E7) HEBREW LETTER QOF\" },\n  XK_hebrew_kuf:                    { code: 0x0cf7, description: \"deprecated\" },\n  XK_hebrew_resh:                   { code: 0x0cf8, description: \"(\\u05E8) HEBREW LETTER RESH\" },\n  XK_hebrew_shin:                   { code: 0x0cf9, description: \"(\\u05E9) HEBREW LETTER SHIN\" },\n  XK_hebrew_taw:                    { code: 0x0cfa, description: \"(\\u05EA) HEBREW LETTER TAV\" },\n  XK_hebrew_taf:                    { code: 0x0cfa, description: \"deprecated\" },\n  XK_Hebrew_switch:                 { code: 0xff7e, description: \"Alias for mode_switch\" },\n\n\n/*\n * Thai\n * Byte 3 = 0x0d\n */\n\n// Group XK_THAI\n  XK_Thai_kokai:                    { code: 0x0da1, description: \"(\\u0E01) THAI CHARACTER KO KAI\" },\n  XK_Thai_khokhai:                  { code: 0x0da2, description: \"(\\u0E02) THAI CHARACTER KHO KHAI\" },\n  XK_Thai_khokhuat:                 { code: 0x0da3, description: \"(\\u0E03) THAI CHARACTER KHO KHUAT\" },\n  XK_Thai_khokhwai:                 { code: 0x0da4, description: \"(\\u0E04) THAI CHARACTER KHO KHWAI\" },\n  XK_Thai_khokhon:                  { code: 0x0da5, description: \"(\\u0E05) THAI CHARACTER KHO KHON\" },\n  XK_Thai_khorakhang:               { code: 0x0da6, description: \"(\\u0E06) THAI CHARACTER KHO RAKHANG\" },\n  XK_Thai_ngongu:                   { code: 0x0da7, description: \"(\\u0E07) THAI CHARACTER NGO NGU\" },\n  XK_Thai_chochan:                  { code: 0x0da8, description: \"(\\u0E08) THAI CHARACTER CHO CHAN\" },\n  XK_Thai_choching:                 { code: 0x0da9, description: \"(\\u0E09) THAI CHARACTER CHO CHING\" },\n  XK_Thai_chochang:                 { code: 0x0daa, description: \"(\\u0E0A) THAI CHARACTER CHO CHANG\" },\n  XK_Thai_soso:                     { code: 0x0dab, description: \"(\\u0E0B) THAI CHARACTER SO SO\" },\n  XK_Thai_chochoe:                  { code: 0x0dac, description: \"(\\u0E0C) THAI CHARACTER CHO CHOE\" },\n  XK_Thai_yoying:                   { code: 0x0dad, description: \"(\\u0E0D) THAI CHARACTER YO YING\" },\n  XK_Thai_dochada:                  { code: 0x0dae, description: \"(\\u0E0E) THAI CHARACTER DO CHADA\" },\n  XK_Thai_topatak:                  { code: 0x0daf, description: \"(\\u0E0F) THAI CHARACTER TO PATAK\" },\n  XK_Thai_thothan:                  { code: 0x0db0, description: \"(\\u0E10) THAI CHARACTER THO THAN\" },\n  XK_Thai_thonangmontho:            { code: 0x0db1, description: \"(\\u0E11) THAI CHARACTER THO NANGMONTHO\" },\n  XK_Thai_thophuthao:               { code: 0x0db2, description: \"(\\u0E12) THAI CHARACTER THO PHUTHAO\" },\n  XK_Thai_nonen:                    { code: 0x0db3, description: \"(\\u0E13) THAI CHARACTER NO NEN\" },\n  XK_Thai_dodek:                    { code: 0x0db4, description: \"(\\u0E14) THAI CHARACTER DO DEK\" },\n  XK_Thai_totao:                    { code: 0x0db5, description: \"(\\u0E15) THAI CHARACTER TO TAO\" },\n  XK_Thai_thothung:                 { code: 0x0db6, description: \"(\\u0E16) THAI CHARACTER THO THUNG\" },\n  XK_Thai_thothahan:                { code: 0x0db7, description: \"(\\u0E17) THAI CHARACTER THO THAHAN\" },\n  XK_Thai_thothong:                 { code: 0x0db8, description: \"(\\u0E18) THAI CHARACTER THO THONG\" },\n  XK_Thai_nonu:                     { code: 0x0db9, description: \"(\\u0E19) THAI CHARACTER NO NU\" },\n  XK_Thai_bobaimai:                 { code: 0x0dba, description: \"(\\u0E1A) THAI CHARACTER BO BAIMAI\" },\n  XK_Thai_popla:                    { code: 0x0dbb, description: \"(\\u0E1B) THAI CHARACTER PO PLA\" },\n  XK_Thai_phophung:                 { code: 0x0dbc, description: \"(\\u0E1C) THAI CHARACTER PHO PHUNG\" },\n  XK_Thai_fofa:                     { code: 0x0dbd, description: \"(\\u0E1D) THAI CHARACTER FO FA\" },\n  XK_Thai_phophan:                  { code: 0x0dbe, description: \"(\\u0E1E) THAI CHARACTER PHO PHAN\" },\n  XK_Thai_fofan:                    { code: 0x0dbf, description: \"(\\u0E1F) THAI CHARACTER FO FAN\" },\n  XK_Thai_phosamphao:               { code: 0x0dc0, description: \"(\\u0E20) THAI CHARACTER PHO SAMPHAO\" },\n  XK_Thai_moma:                     { code: 0x0dc1, description: \"(\\u0E21) THAI CHARACTER MO MA\" },\n  XK_Thai_yoyak:                    { code: 0x0dc2, description: \"(\\u0E22) THAI CHARACTER YO YAK\" },\n  XK_Thai_rorua:                    { code: 0x0dc3, description: \"(\\u0E23) THAI CHARACTER RO RUA\" },\n  XK_Thai_ru:                       { code: 0x0dc4, description: \"(\\u0E24) THAI CHARACTER RU\" },\n  XK_Thai_loling:                   { code: 0x0dc5, description: \"(\\u0E25) THAI CHARACTER LO LING\" },\n  XK_Thai_lu:                       { code: 0x0dc6, description: \"(\\u0E26) THAI CHARACTER LU\" },\n  XK_Thai_wowaen:                   { code: 0x0dc7, description: \"(\\u0E27) THAI CHARACTER WO WAEN\" },\n  XK_Thai_sosala:                   { code: 0x0dc8, description: \"(\\u0E28) THAI CHARACTER SO SALA\" },\n  XK_Thai_sorusi:                   { code: 0x0dc9, description: \"(\\u0E29) THAI CHARACTER SO RUSI\" },\n  XK_Thai_sosua:                    { code: 0x0dca, description: \"(\\u0E2A) THAI CHARACTER SO SUA\" },\n  XK_Thai_hohip:                    { code: 0x0dcb, description: \"(\\u0E2B) THAI CHARACTER HO HIP\" },\n  XK_Thai_lochula:                  { code: 0x0dcc, description: \"(\\u0E2C) THAI CHARACTER LO CHULA\" },\n  XK_Thai_oang:                     { code: 0x0dcd, description: \"(\\u0E2D) THAI CHARACTER O ANG\" },\n  XK_Thai_honokhuk:                 { code: 0x0dce, description: \"(\\u0E2E) THAI CHARACTER HO NOKHUK\" },\n  XK_Thai_paiyannoi:                { code: 0x0dcf, description: \"(\\u0E2F) THAI CHARACTER PAIYANNOI\" },\n  XK_Thai_saraa:                    { code: 0x0dd0, description: \"(\\u0E30) THAI CHARACTER SARA A\" },\n  XK_Thai_maihanakat:               { code: 0x0dd1, description: \"(\\u0E31) THAI CHARACTER MAI HAN-AKAT\" },\n  XK_Thai_saraaa:                   { code: 0x0dd2, description: \"(\\u0E32) THAI CHARACTER SARA AA\" },\n  XK_Thai_saraam:                   { code: 0x0dd3, description: \"(\\u0E33) THAI CHARACTER SARA AM\" },\n  XK_Thai_sarai:                    { code: 0x0dd4, description: \"(\\u0E34) THAI CHARACTER SARA I\" },\n  XK_Thai_saraii:                   { code: 0x0dd5, description: \"(\\u0E35) THAI CHARACTER SARA II\" },\n  XK_Thai_saraue:                   { code: 0x0dd6, description: \"(\\u0E36) THAI CHARACTER SARA UE\" },\n  XK_Thai_sarauee:                  { code: 0x0dd7, description: \"(\\u0E37) THAI CHARACTER SARA UEE\" },\n  XK_Thai_sarau:                    { code: 0x0dd8, description: \"(\\u0E38) THAI CHARACTER SARA U\" },\n  XK_Thai_sarauu:                   { code: 0x0dd9, description: \"(\\u0E39) THAI CHARACTER SARA UU\" },\n  XK_Thai_phinthu:                  { code: 0x0dda, description: \"(\\u0E3A) THAI CHARACTER PHINTHU\" },\n  XK_Thai_maihanakat_maitho:        { code: 0x0dde, description: null },\n  XK_Thai_baht:                     { code: 0x0ddf, description: \"(\\u0E3F) THAI CURRENCY SYMBOL BAHT\" },\n  XK_Thai_sarae:                    { code: 0x0de0, description: \"(\\u0E40) THAI CHARACTER SARA E\" },\n  XK_Thai_saraae:                   { code: 0x0de1, description: \"(\\u0E41) THAI CHARACTER SARA AE\" },\n  XK_Thai_sarao:                    { code: 0x0de2, description: \"(\\u0E42) THAI CHARACTER SARA O\" },\n  XK_Thai_saraaimaimuan:            { code: 0x0de3, description: \"(\\u0E43) THAI CHARACTER SARA AI MAIMUAN\" },\n  XK_Thai_saraaimaimalai:           { code: 0x0de4, description: \"(\\u0E44) THAI CHARACTER SARA AI MAIMALAI\" },\n  XK_Thai_lakkhangyao:              { code: 0x0de5, description: \"(\\u0E45) THAI CHARACTER LAKKHANGYAO\" },\n  XK_Thai_maiyamok:                 { code: 0x0de6, description: \"(\\u0E46) THAI CHARACTER MAIYAMOK\" },\n  XK_Thai_maitaikhu:                { code: 0x0de7, description: \"(\\u0E47) THAI CHARACTER MAITAIKHU\" },\n  XK_Thai_maiek:                    { code: 0x0de8, description: \"(\\u0E48) THAI CHARACTER MAI EK\" },\n  XK_Thai_maitho:                   { code: 0x0de9, description: \"(\\u0E49) THAI CHARACTER MAI THO\" },\n  XK_Thai_maitri:                   { code: 0x0dea, description: \"(\\u0E4A) THAI CHARACTER MAI TRI\" },\n  XK_Thai_maichattawa:              { code: 0x0deb, description: \"(\\u0E4B) THAI CHARACTER MAI CHATTAWA\" },\n  XK_Thai_thanthakhat:              { code: 0x0dec, description: \"(\\u0E4C) THAI CHARACTER THANTHAKHAT\" },\n  XK_Thai_nikhahit:                 { code: 0x0ded, description: \"(\\u0E4D) THAI CHARACTER NIKHAHIT\" },\n  XK_Thai_leksun:                   { code: 0x0df0, description: \"(\\u0E50) THAI DIGIT ZERO\" },\n  XK_Thai_leknung:                  { code: 0x0df1, description: \"(\\u0E51) THAI DIGIT ONE\" },\n  XK_Thai_leksong:                  { code: 0x0df2, description: \"(\\u0E52) THAI DIGIT TWO\" },\n  XK_Thai_leksam:                   { code: 0x0df3, description: \"(\\u0E53) THAI DIGIT THREE\" },\n  XK_Thai_leksi:                    { code: 0x0df4, description: \"(\\u0E54) THAI DIGIT FOUR\" },\n  XK_Thai_lekha:                    { code: 0x0df5, description: \"(\\u0E55) THAI DIGIT FIVE\" },\n  XK_Thai_lekhok:                   { code: 0x0df6, description: \"(\\u0E56) THAI DIGIT SIX\" },\n  XK_Thai_lekchet:                  { code: 0x0df7, description: \"(\\u0E57) THAI DIGIT SEVEN\" },\n  XK_Thai_lekpaet:                  { code: 0x0df8, description: \"(\\u0E58) THAI DIGIT EIGHT\" },\n  XK_Thai_lekkao:                   { code: 0x0df9, description: \"(\\u0E59) THAI DIGIT NINE\" },\n\n\n/*\n * Korean\n * Byte 3 = 0x0e\n */\n\n// Group XK_KOREAN\n\n  XK_Hangul:                        { code: 0xff31, description: \"Hangul start/stop(toggle)\" },\n  XK_Hangul_Start:                  { code: 0xff32, description: \"Hangul start\" },\n  XK_Hangul_End:                    { code: 0xff33, description: \"Hangul end, English start\" },\n  XK_Hangul_Hanja:                  { code: 0xff34, description: \"Start Hangul->Hanja Conversion\" },\n  XK_Hangul_Jamo:                   { code: 0xff35, description: \"Hangul Jamo mode\" },\n  XK_Hangul_Romaja:                 { code: 0xff36, description: \"Hangul Romaja mode\" },\n  XK_Hangul_Codeinput:              { code: 0xff37, description: \"Hangul code input mode\" },\n  XK_Hangul_Jeonja:                 { code: 0xff38, description: \"Jeonja mode\" },\n  XK_Hangul_Banja:                  { code: 0xff39, description: \"Banja mode\" },\n  XK_Hangul_PreHanja:               { code: 0xff3a, description: \"Pre Hanja conversion\" },\n  XK_Hangul_PostHanja:              { code: 0xff3b, description: \"Post Hanja conversion\" },\n  XK_Hangul_SingleCandidate:        { code: 0xff3c, description: \"Single candidate\" },\n  XK_Hangul_MultipleCandidate:      { code: 0xff3d, description: \"Multiple candidate\" },\n  XK_Hangul_PreviousCandidate:      { code: 0xff3e, description: \"Previous candidate\" },\n  XK_Hangul_Special:                { code: 0xff3f, description: \"Special symbols\" },\n  XK_Hangul_switch:                 { code: 0xff7e, description: \"Alias for mode_switch\" },\n\n/* Hangul Consonant Characters */\n  XK_Hangul_Kiyeog:                 { code: 0x0ea1, description: null },\n  XK_Hangul_SsangKiyeog:            { code: 0x0ea2, description: null },\n  XK_Hangul_KiyeogSios:             { code: 0x0ea3, description: null },\n  XK_Hangul_Nieun:                  { code: 0x0ea4, description: null },\n  XK_Hangul_NieunJieuj:             { code: 0x0ea5, description: null },\n  XK_Hangul_NieunHieuh:             { code: 0x0ea6, description: null },\n  XK_Hangul_Dikeud:                 { code: 0x0ea7, description: null },\n  XK_Hangul_SsangDikeud:            { code: 0x0ea8, description: null },\n  XK_Hangul_Rieul:                  { code: 0x0ea9, description: null },\n  XK_Hangul_RieulKiyeog:            { code: 0x0eaa, description: null },\n  XK_Hangul_RieulMieum:             { code: 0x0eab, description: null },\n  XK_Hangul_RieulPieub:             { code: 0x0eac, description: null },\n  XK_Hangul_RieulSios:              { code: 0x0ead, description: null },\n  XK_Hangul_RieulTieut:             { code: 0x0eae, description: null },\n  XK_Hangul_RieulPhieuf:            { code: 0x0eaf, description: null },\n  XK_Hangul_RieulHieuh:             { code: 0x0eb0, description: null },\n  XK_Hangul_Mieum:                  { code: 0x0eb1, description: null },\n  XK_Hangul_Pieub:                  { code: 0x0eb2, description: null },\n  XK_Hangul_SsangPieub:             { code: 0x0eb3, description: null },\n  XK_Hangul_PieubSios:              { code: 0x0eb4, description: null },\n  XK_Hangul_Sios:                   { code: 0x0eb5, description: null },\n  XK_Hangul_SsangSios:              { code: 0x0eb6, description: null },\n  XK_Hangul_Ieung:                  { code: 0x0eb7, description: null },\n  XK_Hangul_Jieuj:                  { code: 0x0eb8, description: null },\n  XK_Hangul_SsangJieuj:             { code: 0x0eb9, description: null },\n  XK_Hangul_Cieuc:                  { code: 0x0eba, description: null },\n  XK_Hangul_Khieuq:                 { code: 0x0ebb, description: null },\n  XK_Hangul_Tieut:                  { code: 0x0ebc, description: null },\n  XK_Hangul_Phieuf:                 { code: 0x0ebd, description: null },\n  XK_Hangul_Hieuh:                  { code: 0x0ebe, description: null },\n\n/* Hangul Vowel Characters */\n  XK_Hangul_A:                      { code: 0x0ebf, description: null },\n  XK_Hangul_AE:                     { code: 0x0ec0, description: null },\n  XK_Hangul_YA:                     { code: 0x0ec1, description: null },\n  XK_Hangul_YAE:                    { code: 0x0ec2, description: null },\n  XK_Hangul_EO:                     { code: 0x0ec3, description: null },\n  XK_Hangul_E:                      { code: 0x0ec4, description: null },\n  XK_Hangul_YEO:                    { code: 0x0ec5, description: null },\n  XK_Hangul_YE:                     { code: 0x0ec6, description: null },\n  XK_Hangul_O:                      { code: 0x0ec7, description: null },\n  XK_Hangul_WA:                     { code: 0x0ec8, description: null },\n  XK_Hangul_WAE:                    { code: 0x0ec9, description: null },\n  XK_Hangul_OE:                     { code: 0x0eca, description: null },\n  XK_Hangul_YO:                     { code: 0x0ecb, description: null },\n  XK_Hangul_U:                      { code: 0x0ecc, description: null },\n  XK_Hangul_WEO:                    { code: 0x0ecd, description: null },\n  XK_Hangul_WE:                     { code: 0x0ece, description: null },\n  XK_Hangul_WI:                     { code: 0x0ecf, description: null },\n  XK_Hangul_YU:                     { code: 0x0ed0, description: null },\n  XK_Hangul_EU:                     { code: 0x0ed1, description: null },\n  XK_Hangul_YI:                     { code: 0x0ed2, description: null },\n  XK_Hangul_I:                      { code: 0x0ed3, description: null },\n\n/* Hangul syllable-final (JongSeong) Characters */\n  XK_Hangul_J_Kiyeog:               { code: 0x0ed4, description: null },\n  XK_Hangul_J_SsangKiyeog:          { code: 0x0ed5, description: null },\n  XK_Hangul_J_KiyeogSios:           { code: 0x0ed6, description: null },\n  XK_Hangul_J_Nieun:                { code: 0x0ed7, description: null },\n  XK_Hangul_J_NieunJieuj:           { code: 0x0ed8, description: null },\n  XK_Hangul_J_NieunHieuh:           { code: 0x0ed9, description: null },\n  XK_Hangul_J_Dikeud:               { code: 0x0eda, description: null },\n  XK_Hangul_J_Rieul:                { code: 0x0edb, description: null },\n  XK_Hangul_J_RieulKiyeog:          { code: 0x0edc, description: null },\n  XK_Hangul_J_RieulMieum:           { code: 0x0edd, description: null },\n  XK_Hangul_J_RieulPieub:           { code: 0x0ede, description: null },\n  XK_Hangul_J_RieulSios:            { code: 0x0edf, description: null },\n  XK_Hangul_J_RieulTieut:           { code: 0x0ee0, description: null },\n  XK_Hangul_J_RieulPhieuf:          { code: 0x0ee1, description: null },\n  XK_Hangul_J_RieulHieuh:           { code: 0x0ee2, description: null },\n  XK_Hangul_J_Mieum:                { code: 0x0ee3, description: null },\n  XK_Hangul_J_Pieub:                { code: 0x0ee4, description: null },\n  XK_Hangul_J_PieubSios:            { code: 0x0ee5, description: null },\n  XK_Hangul_J_Sios:                 { code: 0x0ee6, description: null },\n  XK_Hangul_J_SsangSios:            { code: 0x0ee7, description: null },\n  XK_Hangul_J_Ieung:                { code: 0x0ee8, description: null },\n  XK_Hangul_J_Jieuj:                { code: 0x0ee9, description: null },\n  XK_Hangul_J_Cieuc:                { code: 0x0eea, description: null },\n  XK_Hangul_J_Khieuq:               { code: 0x0eeb, description: null },\n  XK_Hangul_J_Tieut:                { code: 0x0eec, description: null },\n  XK_Hangul_J_Phieuf:               { code: 0x0eed, description: null },\n  XK_Hangul_J_Hieuh:                { code: 0x0eee, description: null },\n\n/* Ancient Hangul Consonant Characters */\n  XK_Hangul_RieulYeorinHieuh:       { code: 0x0eef, description: null },\n  XK_Hangul_SunkyeongeumMieum:      { code: 0x0ef0, description: null },\n  XK_Hangul_SunkyeongeumPieub:      { code: 0x0ef1, description: null },\n  XK_Hangul_PanSios:                { code: 0x0ef2, description: null },\n  XK_Hangul_KkogjiDalrinIeung:      { code: 0x0ef3, description: null },\n  XK_Hangul_SunkyeongeumPhieuf:     { code: 0x0ef4, description: null },\n  XK_Hangul_YeorinHieuh:            { code: 0x0ef5, description: null },\n\n/* Ancient Hangul Vowel Characters */\n  XK_Hangul_AraeA:                  { code: 0x0ef6, description: null },\n  XK_Hangul_AraeAE:                 { code: 0x0ef7, description: null },\n\n/* Ancient Hangul syllable-final (JongSeong) Characters */\n  XK_Hangul_J_PanSios:              { code: 0x0ef8, description: null },\n  XK_Hangul_J_KkogjiDalrinIeung:    { code: 0x0ef9, description: null },\n  XK_Hangul_J_YeorinHieuh:          { code: 0x0efa, description: null },\n\n/* Korean currency symbol */\n  XK_Korean_Won:                    { code: 0x0eff, description: \"((\\u20A9) WON SIGN)\" },\n\n\n\n/*\n * Armenian\n */\n\n// Group XK_ARMENIAN\n  XK_Armenian_ligature_ew:       { code: 0x1000587, description: \"(\\u0587) ARMENIAN SMALL LIGATURE ECH YIWN\" },\n  XK_Armenian_full_stop:         { code: 0x1000589, description: \"(\\u0589) ARMENIAN FULL STOP\" },\n  XK_Armenian_verjaket:          { code: 0x1000589, description: \"(\\u0589) ARMENIAN FULL STOP\" },\n  XK_Armenian_separation_mark:   { code: 0x100055d, description: \"(\\u055D) ARMENIAN COMMA\" },\n  XK_Armenian_but:               { code: 0x100055d, description: \"(\\u055D) ARMENIAN COMMA\" },\n  XK_Armenian_hyphen:            { code: 0x100058a, description: \"(\\u058A) ARMENIAN HYPHEN\" },\n  XK_Armenian_yentamna:          { code: 0x100058a, description: \"(\\u058A) ARMENIAN HYPHEN\" },\n  XK_Armenian_exclam:            { code: 0x100055c, description: \"(\\u055C) ARMENIAN EXCLAMATION MARK\" },\n  XK_Armenian_amanak:            { code: 0x100055c, description: \"(\\u055C) ARMENIAN EXCLAMATION MARK\" },\n  XK_Armenian_accent:            { code: 0x100055b, description: \"(\\u055B) ARMENIAN EMPHASIS MARK\" },\n  XK_Armenian_shesht:            { code: 0x100055b, description: \"(\\u055B) ARMENIAN EMPHASIS MARK\" },\n  XK_Armenian_question:          { code: 0x100055e, description: \"(\\u055E) ARMENIAN QUESTION MARK\" },\n  XK_Armenian_paruyk:            { code: 0x100055e, description: \"(\\u055E) ARMENIAN QUESTION MARK\" },\n  XK_Armenian_AYB:               { code: 0x1000531, description: \"(\\u0531) ARMENIAN CAPITAL LETTER AYB\" },\n  XK_Armenian_ayb:               { code: 0x1000561, description: \"(\\u0561) ARMENIAN SMALL LETTER AYB\" },\n  XK_Armenian_BEN:               { code: 0x1000532, description: \"(\\u0532) ARMENIAN CAPITAL LETTER BEN\" },\n  XK_Armenian_ben:               { code: 0x1000562, description: \"(\\u0562) ARMENIAN SMALL LETTER BEN\" },\n  XK_Armenian_GIM:               { code: 0x1000533, description: \"(\\u0533) ARMENIAN CAPITAL LETTER GIM\" },\n  XK_Armenian_gim:               { code: 0x1000563, description: \"(\\u0563) ARMENIAN SMALL LETTER GIM\" },\n  XK_Armenian_DA:                { code: 0x1000534, description: \"(\\u0534) ARMENIAN CAPITAL LETTER DA\" },\n  XK_Armenian_da:                { code: 0x1000564, description: \"(\\u0564) ARMENIAN SMALL LETTER DA\" },\n  XK_Armenian_YECH:              { code: 0x1000535, description: \"(\\u0535) ARMENIAN CAPITAL LETTER ECH\" },\n  XK_Armenian_yech:              { code: 0x1000565, description: \"(\\u0565) ARMENIAN SMALL LETTER ECH\" },\n  XK_Armenian_ZA:                { code: 0x1000536, description: \"(\\u0536) ARMENIAN CAPITAL LETTER ZA\" },\n  XK_Armenian_za:                { code: 0x1000566, description: \"(\\u0566) ARMENIAN SMALL LETTER ZA\" },\n  XK_Armenian_E:                 { code: 0x1000537, description: \"(\\u0537) ARMENIAN CAPITAL LETTER EH\" },\n  XK_Armenian_e:                 { code: 0x1000567, description: \"(\\u0567) ARMENIAN SMALL LETTER EH\" },\n  XK_Armenian_AT:                { code: 0x1000538, description: \"(\\u0538) ARMENIAN CAPITAL LETTER ET\" },\n  XK_Armenian_at:                { code: 0x1000568, description: \"(\\u0568) ARMENIAN SMALL LETTER ET\" },\n  XK_Armenian_TO:                { code: 0x1000539, description: \"(\\u0539) ARMENIAN CAPITAL LETTER TO\" },\n  XK_Armenian_to:                { code: 0x1000569, description: \"(\\u0569) ARMENIAN SMALL LETTER TO\" },\n  XK_Armenian_ZHE:               { code: 0x100053a, description: \"(\\u053A) ARMENIAN CAPITAL LETTER ZHE\" },\n  XK_Armenian_zhe:               { code: 0x100056a, description: \"(\\u056A) ARMENIAN SMALL LETTER ZHE\" },\n  XK_Armenian_INI:               { code: 0x100053b, description: \"(\\u053B) ARMENIAN CAPITAL LETTER INI\" },\n  XK_Armenian_ini:               { code: 0x100056b, description: \"(\\u056B) ARMENIAN SMALL LETTER INI\" },\n  XK_Armenian_LYUN:              { code: 0x100053c, description: \"(\\u053C) ARMENIAN CAPITAL LETTER LIWN\" },\n  XK_Armenian_lyun:              { code: 0x100056c, description: \"(\\u056C) ARMENIAN SMALL LETTER LIWN\" },\n  XK_Armenian_KHE:               { code: 0x100053d, description: \"(\\u053D) ARMENIAN CAPITAL LETTER XEH\" },\n  XK_Armenian_khe:               { code: 0x100056d, description: \"(\\u056D) ARMENIAN SMALL LETTER XEH\" },\n  XK_Armenian_TSA:               { code: 0x100053e, description: \"(\\u053E) ARMENIAN CAPITAL LETTER CA\" },\n  XK_Armenian_tsa:               { code: 0x100056e, description: \"(\\u056E) ARMENIAN SMALL LETTER CA\" },\n  XK_Armenian_KEN:               { code: 0x100053f, description: \"(\\u053F) ARMENIAN CAPITAL LETTER KEN\" },\n  XK_Armenian_ken:               { code: 0x100056f, description: \"(\\u056F) ARMENIAN SMALL LETTER KEN\" },\n  XK_Armenian_HO:                { code: 0x1000540, description: \"(\\u0540) ARMENIAN CAPITAL LETTER HO\" },\n  XK_Armenian_ho:                { code: 0x1000570, description: \"(\\u0570) ARMENIAN SMALL LETTER HO\" },\n  XK_Armenian_DZA:               { code: 0x1000541, description: \"(\\u0541) ARMENIAN CAPITAL LETTER JA\" },\n  XK_Armenian_dza:               { code: 0x1000571, description: \"(\\u0571) ARMENIAN SMALL LETTER JA\" },\n  XK_Armenian_GHAT:              { code: 0x1000542, description: \"(\\u0542) ARMENIAN CAPITAL LETTER GHAD\" },\n  XK_Armenian_ghat:              { code: 0x1000572, description: \"(\\u0572) ARMENIAN SMALL LETTER GHAD\" },\n  XK_Armenian_TCHE:              { code: 0x1000543, description: \"(\\u0543) ARMENIAN CAPITAL LETTER CHEH\" },\n  XK_Armenian_tche:              { code: 0x1000573, description: \"(\\u0573) ARMENIAN SMALL LETTER CHEH\" },\n  XK_Armenian_MEN:               { code: 0x1000544, description: \"(\\u0544) ARMENIAN CAPITAL LETTER MEN\" },\n  XK_Armenian_men:               { code: 0x1000574, description: \"(\\u0574) ARMENIAN SMALL LETTER MEN\" },\n  XK_Armenian_HI:                { code: 0x1000545, description: \"(\\u0545) ARMENIAN CAPITAL LETTER YI\" },\n  XK_Armenian_hi:                { code: 0x1000575, description: \"(\\u0575) ARMENIAN SMALL LETTER YI\" },\n  XK_Armenian_NU:                { code: 0x1000546, description: \"(\\u0546) ARMENIAN CAPITAL LETTER NOW\" },\n  XK_Armenian_nu:                { code: 0x1000576, description: \"(\\u0576) ARMENIAN SMALL LETTER NOW\" },\n  XK_Armenian_SHA:               { code: 0x1000547, description: \"(\\u0547) ARMENIAN CAPITAL LETTER SHA\" },\n  XK_Armenian_sha:               { code: 0x1000577, description: \"(\\u0577) ARMENIAN SMALL LETTER SHA\" },\n  XK_Armenian_VO:                { code: 0x1000548, description: \"(\\u0548) ARMENIAN CAPITAL LETTER VO\" },\n  XK_Armenian_vo:                { code: 0x1000578, description: \"(\\u0578) ARMENIAN SMALL LETTER VO\" },\n  XK_Armenian_CHA:               { code: 0x1000549, description: \"(\\u0549) ARMENIAN CAPITAL LETTER CHA\" },\n  XK_Armenian_cha:               { code: 0x1000579, description: \"(\\u0579) ARMENIAN SMALL LETTER CHA\" },\n  XK_Armenian_PE:                { code: 0x100054a, description: \"(\\u054A) ARMENIAN CAPITAL LETTER PEH\" },\n  XK_Armenian_pe:                { code: 0x100057a, description: \"(\\u057A) ARMENIAN SMALL LETTER PEH\" },\n  XK_Armenian_JE:                { code: 0x100054b, description: \"(\\u054B) ARMENIAN CAPITAL LETTER JHEH\" },\n  XK_Armenian_je:                { code: 0x100057b, description: \"(\\u057B) ARMENIAN SMALL LETTER JHEH\" },\n  XK_Armenian_RA:                { code: 0x100054c, description: \"(\\u054C) ARMENIAN CAPITAL LETTER RA\" },\n  XK_Armenian_ra:                { code: 0x100057c, description: \"(\\u057C) ARMENIAN SMALL LETTER RA\" },\n  XK_Armenian_SE:                { code: 0x100054d, description: \"(\\u054D) ARMENIAN CAPITAL LETTER SEH\" },\n  XK_Armenian_se:                { code: 0x100057d, description: \"(\\u057D) ARMENIAN SMALL LETTER SEH\" },\n  XK_Armenian_VEV:               { code: 0x100054e, description: \"(\\u054E) ARMENIAN CAPITAL LETTER VEW\" },\n  XK_Armenian_vev:               { code: 0x100057e, description: \"(\\u057E) ARMENIAN SMALL LETTER VEW\" },\n  XK_Armenian_TYUN:              { code: 0x100054f, description: \"(\\u054F) ARMENIAN CAPITAL LETTER TIWN\" },\n  XK_Armenian_tyun:              { code: 0x100057f, description: \"(\\u057F) ARMENIAN SMALL LETTER TIWN\" },\n  XK_Armenian_RE:                { code: 0x1000550, description: \"(\\u0550) ARMENIAN CAPITAL LETTER REH\" },\n  XK_Armenian_re:                { code: 0x1000580, description: \"(\\u0580) ARMENIAN SMALL LETTER REH\" },\n  XK_Armenian_TSO:               { code: 0x1000551, description: \"(\\u0551) ARMENIAN CAPITAL LETTER CO\" },\n  XK_Armenian_tso:               { code: 0x1000581, description: \"(\\u0581) ARMENIAN SMALL LETTER CO\" },\n  XK_Armenian_VYUN:              { code: 0x1000552, description: \"(\\u0552) ARMENIAN CAPITAL LETTER YIWN\" },\n  XK_Armenian_vyun:              { code: 0x1000582, description: \"(\\u0582) ARMENIAN SMALL LETTER YIWN\" },\n  XK_Armenian_PYUR:              { code: 0x1000553, description: \"(\\u0553) ARMENIAN CAPITAL LETTER PIWR\" },\n  XK_Armenian_pyur:              { code: 0x1000583, description: \"(\\u0583) ARMENIAN SMALL LETTER PIWR\" },\n  XK_Armenian_KE:                { code: 0x1000554, description: \"(\\u0554) ARMENIAN CAPITAL LETTER KEH\" },\n  XK_Armenian_ke:                { code: 0x1000584, description: \"(\\u0584) ARMENIAN SMALL LETTER KEH\" },\n  XK_Armenian_O:                 { code: 0x1000555, description: \"(\\u0555) ARMENIAN CAPITAL LETTER OH\" },\n  XK_Armenian_o:                 { code: 0x1000585, description: \"(\\u0585) ARMENIAN SMALL LETTER OH\" },\n  XK_Armenian_FE:                { code: 0x1000556, description: \"(\\u0556) ARMENIAN CAPITAL LETTER FEH\" },\n  XK_Armenian_fe:                { code: 0x1000586, description: \"(\\u0586) ARMENIAN SMALL LETTER FEH\" },\n  XK_Armenian_apostrophe:        { code: 0x100055a, description: \"(\\u055A) ARMENIAN APOSTROPHE\" },\n\n\n/*\n * Georgian\n */\n\n// Group XK_GEORGIAN\n  XK_Georgian_an:                { code: 0x10010d0, description: \"(\\u10D0) GEORGIAN LETTER AN\" },\n  XK_Georgian_ban:               { code: 0x10010d1, description: \"(\\u10D1) GEORGIAN LETTER BAN\" },\n  XK_Georgian_gan:               { code: 0x10010d2, description: \"(\\u10D2) GEORGIAN LETTER GAN\" },\n  XK_Georgian_don:               { code: 0x10010d3, description: \"(\\u10D3) GEORGIAN LETTER DON\" },\n  XK_Georgian_en:                { code: 0x10010d4, description: \"(\\u10D4) GEORGIAN LETTER EN\" },\n  XK_Georgian_vin:               { code: 0x10010d5, description: \"(\\u10D5) GEORGIAN LETTER VIN\" },\n  XK_Georgian_zen:               { code: 0x10010d6, description: \"(\\u10D6) GEORGIAN LETTER ZEN\" },\n  XK_Georgian_tan:               { code: 0x10010d7, description: \"(\\u10D7) GEORGIAN LETTER TAN\" },\n  XK_Georgian_in:                { code: 0x10010d8, description: \"(\\u10D8) GEORGIAN LETTER IN\" },\n  XK_Georgian_kan:               { code: 0x10010d9, description: \"(\\u10D9) GEORGIAN LETTER KAN\" },\n  XK_Georgian_las:               { code: 0x10010da, description: \"(\\u10DA) GEORGIAN LETTER LAS\" },\n  XK_Georgian_man:               { code: 0x10010db, description: \"(\\u10DB) GEORGIAN LETTER MAN\" },\n  XK_Georgian_nar:               { code: 0x10010dc, description: \"(\\u10DC) GEORGIAN LETTER NAR\" },\n  XK_Georgian_on:                { code: 0x10010dd, description: \"(\\u10DD) GEORGIAN LETTER ON\" },\n  XK_Georgian_par:               { code: 0x10010de, description: \"(\\u10DE) GEORGIAN LETTER PAR\" },\n  XK_Georgian_zhar:              { code: 0x10010df, description: \"(\\u10DF) GEORGIAN LETTER ZHAR\" },\n  XK_Georgian_rae:               { code: 0x10010e0, description: \"(\\u10E0) GEORGIAN LETTER RAE\" },\n  XK_Georgian_san:               { code: 0x10010e1, description: \"(\\u10E1) GEORGIAN LETTER SAN\" },\n  XK_Georgian_tar:               { code: 0x10010e2, description: \"(\\u10E2) GEORGIAN LETTER TAR\" },\n  XK_Georgian_un:                { code: 0x10010e3, description: \"(\\u10E3) GEORGIAN LETTER UN\" },\n  XK_Georgian_phar:              { code: 0x10010e4, description: \"(\\u10E4) GEORGIAN LETTER PHAR\" },\n  XK_Georgian_khar:              { code: 0x10010e5, description: \"(\\u10E5) GEORGIAN LETTER KHAR\" },\n  XK_Georgian_ghan:              { code: 0x10010e6, description: \"(\\u10E6) GEORGIAN LETTER GHAN\" },\n  XK_Georgian_qar:               { code: 0x10010e7, description: \"(\\u10E7) GEORGIAN LETTER QAR\" },\n  XK_Georgian_shin:              { code: 0x10010e8, description: \"(\\u10E8) GEORGIAN LETTER SHIN\" },\n  XK_Georgian_chin:              { code: 0x10010e9, description: \"(\\u10E9) GEORGIAN LETTER CHIN\" },\n  XK_Georgian_can:               { code: 0x10010ea, description: \"(\\u10EA) GEORGIAN LETTER CAN\" },\n  XK_Georgian_jil:               { code: 0x10010eb, description: \"(\\u10EB) GEORGIAN LETTER JIL\" },\n  XK_Georgian_cil:               { code: 0x10010ec, description: \"(\\u10EC) GEORGIAN LETTER CIL\" },\n  XK_Georgian_char:              { code: 0x10010ed, description: \"(\\u10ED) GEORGIAN LETTER CHAR\" },\n  XK_Georgian_xan:               { code: 0x10010ee, description: \"(\\u10EE) GEORGIAN LETTER XAN\" },\n  XK_Georgian_jhan:              { code: 0x10010ef, description: \"(\\u10EF) GEORGIAN LETTER JHAN\" },\n  XK_Georgian_hae:               { code: 0x10010f0, description: \"(\\u10F0) GEORGIAN LETTER HAE\" },\n  XK_Georgian_he:                { code: 0x10010f1, description: \"(\\u10F1) GEORGIAN LETTER HE\" },\n  XK_Georgian_hie:               { code: 0x10010f2, description: \"(\\u10F2) GEORGIAN LETTER HIE\" },\n  XK_Georgian_we:                { code: 0x10010f3, description: \"(\\u10F3) GEORGIAN LETTER WE\" },\n  XK_Georgian_har:               { code: 0x10010f4, description: \"(\\u10F4) GEORGIAN LETTER HAR\" },\n  XK_Georgian_hoe:               { code: 0x10010f5, description: \"(\\u10F5) GEORGIAN LETTER HOE\" },\n  XK_Georgian_fi:                { code: 0x10010f6, description: \"(\\u10F6) GEORGIAN LETTER FI\" },\n\n\n/*\n * Azeri (and other Turkic or Caucasian languages)\n */\n\n// Group XK_CAUCASUS\n/* latin */\n  XK_Xabovedot:                  { code: 0x1001e8a, description: \"(\\u1E8A) LATIN CAPITAL LETTER X WITH DOT ABOVE\" },\n  XK_Ibreve:                     { code: 0x100012c, description: \"(\\u012C) LATIN CAPITAL LETTER I WITH BREVE\" },\n  XK_Zstroke:                    { code: 0x10001b5, description: \"(\\u01B5) LATIN CAPITAL LETTER Z WITH STROKE\" },\n  XK_Gcaron:                     { code: 0x10001e6, description: \"(\\u01E6) LATIN CAPITAL LETTER G WITH CARON\" },\n  XK_Ocaron:                     { code: 0x10001d1, description: \"(\\u01D2) LATIN CAPITAL LETTER O WITH CARON\" },\n  XK_Obarred:                    { code: 0x100019f, description: \"(\\u019F) LATIN CAPITAL LETTER O WITH MIDDLE TILDE\" },\n  XK_xabovedot:                  { code: 0x1001e8b, description: \"(\\u1E8B) LATIN SMALL LETTER X WITH DOT ABOVE\" },\n  XK_ibreve:                     { code: 0x100012d, description: \"(\\u012D) LATIN SMALL LETTER I WITH BREVE\" },\n  XK_zstroke:                    { code: 0x10001b6, description: \"(\\u01B6) LATIN SMALL LETTER Z WITH STROKE\" },\n  XK_gcaron:                     { code: 0x10001e7, description: \"(\\u01E7) LATIN SMALL LETTER G WITH CARON\" },\n  XK_ocaron:                     { code: 0x10001d2, description: \"(\\u01D2) LATIN SMALL LETTER O WITH CARON\" },\n  XK_obarred:                    { code: 0x1000275, description: \"(\\u0275) LATIN SMALL LETTER BARRED O\" },\n  XK_SCHWA:                      { code: 0x100018f, description: \"(\\u018F) LATIN CAPITAL LETTER SCHWA\" },\n  XK_schwa:                      { code: 0x1000259, description: \"(\\u0259) LATIN SMALL LETTER SCHWA\" },\n  XK_EZH:                        { code: 0x10001b7, description: \"(\\u01B7) LATIN CAPITAL LETTER EZH\" },\n  XK_ezh:                        { code: 0x1000292, description: \"(\\u0292) LATIN SMALL LETTER EZH\" },\n/* those are not really Caucasus */\n/* For Inupiak */\n  XK_Lbelowdot:                  { code: 0x1001e36, description: \"(\\u1E36) LATIN CAPITAL LETTER L WITH DOT BELOW\" },\n  XK_lbelowdot:                  { code: 0x1001e37, description: \"(\\u1E37) LATIN SMALL LETTER L WITH DOT BELOW\" },\n\n\n/*\n * Vietnamese\n */\n \n// Group XK_VIETNAMESE\n  XK_Abelowdot:                  { code: 0x1001ea0, description: \"(\\u1EA0) LATIN CAPITAL LETTER A WITH DOT BELOW\" },\n  XK_abelowdot:                  { code: 0x1001ea1, description: \"(\\u1EA1) LATIN SMALL LETTER A WITH DOT BELOW\" },\n  XK_Ahook:                      { code: 0x1001ea2, description: \"(\\u1EA2) LATIN CAPITAL LETTER A WITH HOOK ABOVE\" },\n  XK_ahook:                      { code: 0x1001ea3, description: \"(\\u1EA3) LATIN SMALL LETTER A WITH HOOK ABOVE\" },\n  XK_Acircumflexacute:           { code: 0x1001ea4, description: \"(\\u1EA4) LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE\" },\n  XK_acircumflexacute:           { code: 0x1001ea5, description: \"(\\u1EA5) LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE\" },\n  XK_Acircumflexgrave:           { code: 0x1001ea6, description: \"(\\u1EA6) LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE\" },\n  XK_acircumflexgrave:           { code: 0x1001ea7, description: \"(\\u1EA7) LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE\" },\n  XK_Acircumflexhook:            { code: 0x1001ea8, description: \"(\\u1EA8) LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_acircumflexhook:            { code: 0x1001ea9, description: \"(\\u1EA9) LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_Acircumflextilde:           { code: 0x1001eaa, description: \"(\\u1EAA) LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE\" },\n  XK_acircumflextilde:           { code: 0x1001eab, description: \"(\\u1EAB) LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE\" },\n  XK_Acircumflexbelowdot:        { code: 0x1001eac, description: \"(\\u1EAC) LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_acircumflexbelowdot:        { code: 0x1001ead, description: \"(\\u1EAD) LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_Abreveacute:                { code: 0x1001eae, description: \"(\\u1EAE) LATIN CAPITAL LETTER A WITH BREVE AND ACUTE\" },\n  XK_abreveacute:                { code: 0x1001eaf, description: \"(\\u1EAF) LATIN SMALL LETTER A WITH BREVE AND ACUTE\" },\n  XK_Abrevegrave:                { code: 0x1001eb0, description: \"(\\u1EB0) LATIN CAPITAL LETTER A WITH BREVE AND GRAVE\" },\n  XK_abrevegrave:                { code: 0x1001eb1, description: \"(\\u1EB1) LATIN SMALL LETTER A WITH BREVE AND GRAVE\" },\n  XK_Abrevehook:                 { code: 0x1001eb2, description: \"(\\u1EB2) LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE\" },\n  XK_abrevehook:                 { code: 0x1001eb3, description: \"(\\u1EB3) LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE\" },\n  XK_Abrevetilde:                { code: 0x1001eb4, description: \"(\\u1EB4) LATIN CAPITAL LETTER A WITH BREVE AND TILDE\" },\n  XK_abrevetilde:                { code: 0x1001eb5, description: \"(\\u1EB5) LATIN SMALL LETTER A WITH BREVE AND TILDE\" },\n  XK_Abrevebelowdot:             { code: 0x1001eb6, description: \"(\\u1EB6) LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW\" },\n  XK_abrevebelowdot:             { code: 0x1001eb7, description: \"(\\u1EB7) LATIN SMALL LETTER A WITH BREVE AND DOT BELOW\" },\n  XK_Ebelowdot:                  { code: 0x1001eb8, description: \"(\\u1EB8) LATIN CAPITAL LETTER E WITH DOT BELOW\" },\n  XK_ebelowdot:                  { code: 0x1001eb9, description: \"(\\u1EB9) LATIN SMALL LETTER E WITH DOT BELOW\" },\n  XK_Ehook:                      { code: 0x1001eba, description: \"(\\u1EBA) LATIN CAPITAL LETTER E WITH HOOK ABOVE\" },\n  XK_ehook:                      { code: 0x1001ebb, description: \"(\\u1EBB) LATIN SMALL LETTER E WITH HOOK ABOVE\" },\n  XK_Etilde:                     { code: 0x1001ebc, description: \"(\\u1EBC) LATIN CAPITAL LETTER E WITH TILDE\" },\n  XK_etilde:                     { code: 0x1001ebd, description: \"(\\u1EBD) LATIN SMALL LETTER E WITH TILDE\" },\n  XK_Ecircumflexacute:           { code: 0x1001ebe, description: \"(\\u1EBE) LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE\" },\n  XK_ecircumflexacute:           { code: 0x1001ebf, description: \"(\\u1EBF) LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE\" },\n  XK_Ecircumflexgrave:           { code: 0x1001ec0, description: \"(\\u1EC0) LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE\" },\n  XK_ecircumflexgrave:           { code: 0x1001ec1, description: \"(\\u1EC1) LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE\" },\n  XK_Ecircumflexhook:            { code: 0x1001ec2, description: \"(\\u1EC2) LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_ecircumflexhook:            { code: 0x1001ec3, description: \"(\\u1EC3) LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_Ecircumflextilde:           { code: 0x1001ec4, description: \"(\\u1EC4) LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE\" },\n  XK_ecircumflextilde:           { code: 0x1001ec5, description: \"(\\u1EC5) LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE\" },\n  XK_Ecircumflexbelowdot:        { code: 0x1001ec6, description: \"(\\u1EC6) LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_ecircumflexbelowdot:        { code: 0x1001ec7, description: \"(\\u1EC7) LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_Ihook:                      { code: 0x1001ec8, description: \"(\\u1EC8) LATIN CAPITAL LETTER I WITH HOOK ABOVE\" },\n  XK_ihook:                      { code: 0x1001ec9, description: \"(\\u1EC9) LATIN SMALL LETTER I WITH HOOK ABOVE\" },\n  XK_Ibelowdot:                  { code: 0x1001eca, description: \"(\\u1ECA) LATIN CAPITAL LETTER I WITH DOT BELOW\" },\n  XK_ibelowdot:                  { code: 0x1001ecb, description: \"(\\u1ECB) LATIN SMALL LETTER I WITH DOT BELOW\" },\n  XK_Obelowdot:                  { code: 0x1001ecc, description: \"(\\u1ECC) LATIN CAPITAL LETTER O WITH DOT BELOW\" },\n  XK_obelowdot:                  { code: 0x1001ecd, description: \"(\\u1ECD) LATIN SMALL LETTER O WITH DOT BELOW\" },\n  XK_Ohook:                      { code: 0x1001ece, description: \"(\\u1ECE) LATIN CAPITAL LETTER O WITH HOOK ABOVE\" },\n  XK_ohook:                      { code: 0x1001ecf, description: \"(\\u1ECF) LATIN SMALL LETTER O WITH HOOK ABOVE\" },\n  XK_Ocircumflexacute:           { code: 0x1001ed0, description: \"(\\u1ED0) LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE\" },\n  XK_ocircumflexacute:           { code: 0x1001ed1, description: \"(\\u1ED1) LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE\" },\n  XK_Ocircumflexgrave:           { code: 0x1001ed2, description: \"(\\u1ED2) LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE\" },\n  XK_ocircumflexgrave:           { code: 0x1001ed3, description: \"(\\u1ED3) LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE\" },\n  XK_Ocircumflexhook:            { code: 0x1001ed4, description: \"(\\u1ED4) LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_ocircumflexhook:            { code: 0x1001ed5, description: \"(\\u1ED5) LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE\" },\n  XK_Ocircumflextilde:           { code: 0x1001ed6, description: \"(\\u1ED6) LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE\" },\n  XK_ocircumflextilde:           { code: 0x1001ed7, description: \"(\\u1ED7) LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE\" },\n  XK_Ocircumflexbelowdot:        { code: 0x1001ed8, description: \"(\\u1ED8) LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_ocircumflexbelowdot:        { code: 0x1001ed9, description: \"(\\u1ED9) LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW\" },\n  XK_Ohornacute:                 { code: 0x1001eda, description: \"(\\u1EDA) LATIN CAPITAL LETTER O WITH HORN AND ACUTE\" },\n  XK_ohornacute:                 { code: 0x1001edb, description: \"(\\u1EDB) LATIN SMALL LETTER O WITH HORN AND ACUTE\" },\n  XK_Ohorngrave:                 { code: 0x1001edc, description: \"(\\u1EDC) LATIN CAPITAL LETTER O WITH HORN AND GRAVE\" },\n  XK_ohorngrave:                 { code: 0x1001edd, description: \"(\\u1EDD) LATIN SMALL LETTER O WITH HORN AND GRAVE\" },\n  XK_Ohornhook:                  { code: 0x1001ede, description: \"(\\u1EDE) LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE\" },\n  XK_ohornhook:                  { code: 0x1001edf, description: \"(\\u1EDF) LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE\" },\n  XK_Ohorntilde:                 { code: 0x1001ee0, description: \"(\\u1EE0) LATIN CAPITAL LETTER O WITH HORN AND TILDE\" },\n  XK_ohorntilde:                 { code: 0x1001ee1, description: \"(\\u1EE1) LATIN SMALL LETTER O WITH HORN AND TILDE\" },\n  XK_Ohornbelowdot:              { code: 0x1001ee2, description: \"(\\u1EE2) LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW\" },\n  XK_ohornbelowdot:              { code: 0x1001ee3, description: \"(\\u1EE3) LATIN SMALL LETTER O WITH HORN AND DOT BELOW\" },\n  XK_Ubelowdot:                  { code: 0x1001ee4, description: \"(\\u1EE4) LATIN CAPITAL LETTER U WITH DOT BELOW\" },\n  XK_ubelowdot:                  { code: 0x1001ee5, description: \"(\\u1EE5) LATIN SMALL LETTER U WITH DOT BELOW\" },\n  XK_Uhook:                      { code: 0x1001ee6, description: \"(\\u1EE6) LATIN CAPITAL LETTER U WITH HOOK ABOVE\" },\n  XK_uhook:                      { code: 0x1001ee7, description: \"(\\u1EE7) LATIN SMALL LETTER U WITH HOOK ABOVE\" },\n  XK_Uhornacute:                 { code: 0x1001ee8, description: \"(\\u1EE8) LATIN CAPITAL LETTER U WITH HORN AND ACUTE\" },\n  XK_uhornacute:                 { code: 0x1001ee9, description: \"(\\u1EE9) LATIN SMALL LETTER U WITH HORN AND ACUTE\" },\n  XK_Uhorngrave:                 { code: 0x1001eea, description: \"(\\u1EEA) LATIN CAPITAL LETTER U WITH HORN AND GRAVE\" },\n  XK_uhorngrave:                 { code: 0x1001eeb, description: \"(\\u1EEB) LATIN SMALL LETTER U WITH HORN AND GRAVE\" },\n  XK_Uhornhook:                  { code: 0x1001eec, description: \"(\\u1EEC) LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE\" },\n  XK_uhornhook:                  { code: 0x1001eed, description: \"(\\u1EED) LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE\" },\n  XK_Uhorntilde:                 { code: 0x1001eee, description: \"(\\u1EEE) LATIN CAPITAL LETTER U WITH HORN AND TILDE\" },\n  XK_uhorntilde:                 { code: 0x1001eef, description: \"(\\u1EEF) LATIN SMALL LETTER U WITH HORN AND TILDE\" },\n  XK_Uhornbelowdot:              { code: 0x1001ef0, description: \"(\\u1EF0) LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW\" },\n  XK_uhornbelowdot:              { code: 0x1001ef1, description: \"(\\u1EF1) LATIN SMALL LETTER U WITH HORN AND DOT BELOW\" },\n  XK_Ybelowdot:                  { code: 0x1001ef4, description: \"(\\u1EF4) LATIN CAPITAL LETTER Y WITH DOT BELOW\" },\n  XK_ybelowdot:                  { code: 0x1001ef5, description: \"(\\u1EF5) LATIN SMALL LETTER Y WITH DOT BELOW\" },\n  XK_Yhook:                      { code: 0x1001ef6, description: \"(\\u1EF6) LATIN CAPITAL LETTER Y WITH HOOK ABOVE\" },\n  XK_yhook:                      { code: 0x1001ef7, description: \"(\\u1EF7) LATIN SMALL LETTER Y WITH HOOK ABOVE\" },\n  XK_Ytilde:                     { code: 0x1001ef8, description: \"(\\u1EF8) LATIN CAPITAL LETTER Y WITH TILDE\" },\n  XK_ytilde:                     { code: 0x1001ef9, description: \"(\\u1EF9) LATIN SMALL LETTER Y WITH TILDE\" },\n  XK_Ohorn:                      { code: 0x10001a0, description: \"(\\u01A0) LATIN CAPITAL LETTER O WITH HORN\" },\n  XK_ohorn:                      { code: 0x10001a1, description: \"(\\u01A1) LATIN SMALL LETTER O WITH HORN\" },\n  XK_Uhorn:                      { code: 0x10001af, description: \"(\\u01AF) LATIN CAPITAL LETTER U WITH HORN\" },\n  XK_uhorn:                      { code: 0x10001b0, description: \"(\\u01B0) LATIN SMALL LETTER U WITH HORN\" },\n\n\n\n// Group XK_CURRENCY\n  XK_EcuSign:                    { code: 0x10020a0, description: \"(\\u20A0) EURO-CURRENCY SIGN\" },\n  XK_ColonSign:                  { code: 0x10020a1, description: \"(\\u20A1) COLON SIGN\" },\n  XK_CruzeiroSign:               { code: 0x10020a2, description: \"(\\u20A2) CRUZEIRO SIGN\" },\n  XK_FFrancSign:                 { code: 0x10020a3, description: \"(\\u20A3) FRENCH FRANC SIGN\" },\n  XK_LiraSign:                   { code: 0x10020a4, description: \"(\\u20A4) LIRA SIGN\" },\n  XK_MillSign:                   { code: 0x10020a5, description: \"(\\u20A5) MILL SIGN\" },\n  XK_NairaSign:                  { code: 0x10020a6, description: \"(\\u20A6) NAIRA SIGN\" },\n  XK_PesetaSign:                 { code: 0x10020a7, description: \"(\\u20A7) PESETA SIGN\" },\n  XK_RupeeSign:                  { code: 0x10020a8, description: \"(\\u20A8) RUPEE SIGN\" },\n  XK_WonSign:                    { code: 0x10020a9, description: \"(\\u20A9) WON SIGN\" },\n  XK_NewSheqelSign:              { code: 0x10020aa, description: \"(\\u20AA) NEW SHEQEL SIGN\" },\n  XK_DongSign:                   { code: 0x10020ab, description: \"(\\u20AB) DONG SIGN\" },\n  XK_EuroSign:                      { code: 0x20ac, description: \"(\\u20AC) EURO SIGN\" },\n\n\n// Group XK_MATHEMATICAL\n/* one, two and three are defined above. */\n  XK_zerosuperior:               { code: 0x1002070, description: \"(\\u2070) SUPERSCRIPT ZERO\" },\n  XK_foursuperior:               { code: 0x1002074, description: \"(\\u2074) SUPERSCRIPT FOUR\" },\n  XK_fivesuperior:               { code: 0x1002075, description: \"(\\u2075) SUPERSCRIPT FIVE\" },\n  XK_sixsuperior:                { code: 0x1002076, description: \"(\\u2076) SUPERSCRIPT SIX\" },\n  XK_sevensuperior:              { code: 0x1002077, description: \"(\\u2077) SUPERSCRIPT SEVEN\" },\n  XK_eightsuperior:              { code: 0x1002078, description: \"(\\u2078) SUPERSCRIPT EIGHT\" },\n  XK_ninesuperior:               { code: 0x1002079, description: \"(\\u2079) SUPERSCRIPT NINE\" },\n  XK_zerosubscript:              { code: 0x1002080, description: \"(\\u2080) SUBSCRIPT ZERO\" },\n  XK_onesubscript:               { code: 0x1002081, description: \"(\\u2081) SUBSCRIPT ONE\" },\n  XK_twosubscript:               { code: 0x1002082, description: \"(\\u2082) SUBSCRIPT TWO\" },\n  XK_threesubscript:             { code: 0x1002083, description: \"(\\u2083) SUBSCRIPT THREE\" },\n  XK_foursubscript:              { code: 0x1002084, description: \"(\\u2084) SUBSCRIPT FOUR\" },\n  XK_fivesubscript:              { code: 0x1002085, description: \"(\\u2085) SUBSCRIPT FIVE\" },\n  XK_sixsubscript:               { code: 0x1002086, description: \"(\\u2086) SUBSCRIPT SIX\" },\n  XK_sevensubscript:             { code: 0x1002087, description: \"(\\u2087) SUBSCRIPT SEVEN\" },\n  XK_eightsubscript:             { code: 0x1002088, description: \"(\\u2088) SUBSCRIPT EIGHT\" },\n  XK_ninesubscript:              { code: 0x1002089, description: \"(\\u2089) SUBSCRIPT NINE\" },\n  XK_partdifferential:           { code: 0x1002202, description: \"(\\u2202) PARTIAL DIFFERENTIAL\" },\n  XK_emptyset:                   { code: 0x1002205, description: \"(\\u2205) NULL SET\" },\n  XK_elementof:                  { code: 0x1002208, description: \"(\\u2208) ELEMENT OF\" },\n  XK_notelementof:               { code: 0x1002209, description: \"(\\u2209) NOT AN ELEMENT OF\" },\n  XK_containsas:                 { code: 0x100220B, description: \"(\\u220B) CONTAINS AS MEMBER\" },\n  XK_squareroot:                 { code: 0x100221A, description: \"(\\u221A) SQUARE ROOT\" },\n  XK_cuberoot:                   { code: 0x100221B, description: \"(\\u221B) CUBE ROOT\" },\n  XK_fourthroot:                 { code: 0x100221C, description: \"(\\u221C) FOURTH ROOT\" },\n  XK_dintegral:                  { code: 0x100222C, description: \"(\\u222C) DOUBLE INTEGRAL\" },\n  XK_tintegral:                  { code: 0x100222D, description: \"(\\u222D) TRIPLE INTEGRAL\" },\n  XK_because:                    { code: 0x1002235, description: \"(\\u2235) BECAUSE\" },\n  XK_approxeq:                   { code: 0x1002248, description: \"(\\u2245) ALMOST EQUAL TO\" },\n  XK_notapproxeq:                { code: 0x1002247, description: \"(\\u2247) NOT ALMOST EQUAL TO\" },\n  XK_notidentical:               { code: 0x1002262, description: \"(\\u2262) NOT IDENTICAL TO\" },\n  XK_stricteq:                   { code: 0x1002263, description: \"(\\u2263) STRICTLY EQUIVALENT TO\" },          \n\n\n// Group XK_BRAILLE\n  XK_braille_dot_1:                 { code: 0xfff1, description: null },\n  XK_braille_dot_2:                 { code: 0xfff2, description: null },\n  XK_braille_dot_3:                 { code: 0xfff3, description: null },\n  XK_braille_dot_4:                 { code: 0xfff4, description: null },\n  XK_braille_dot_5:                 { code: 0xfff5, description: null },\n  XK_braille_dot_6:                 { code: 0xfff6, description: null },\n  XK_braille_dot_7:                 { code: 0xfff7, description: null },\n  XK_braille_dot_8:                 { code: 0xfff8, description: null },\n  XK_braille_dot_9:                 { code: 0xfff9, description: null },\n  XK_braille_dot_10:                { code: 0xfffa, description: null },\n  XK_braille_blank:              { code: 0x1002800, description: \"(\\u2800) BRAILLE PATTERN BLANK\" },\n  XK_braille_dots_1:             { code: 0x1002801, description: \"(\\u2801) BRAILLE PATTERN DOTS-1\" },\n  XK_braille_dots_2:             { code: 0x1002802, description: \"(\\u2802) BRAILLE PATTERN DOTS-2\" },\n  XK_braille_dots_12:            { code: 0x1002803, description: \"(\\u2803) BRAILLE PATTERN DOTS-12\" },\n  XK_braille_dots_3:             { code: 0x1002804, description: \"(\\u2804) BRAILLE PATTERN DOTS-3\" },\n  XK_braille_dots_13:            { code: 0x1002805, description: \"(\\u2805) BRAILLE PATTERN DOTS-13\" },\n  XK_braille_dots_23:            { code: 0x1002806, description: \"(\\u2806) BRAILLE PATTERN DOTS-23\" },\n  XK_braille_dots_123:           { code: 0x1002807, description: \"(\\u2807) BRAILLE PATTERN DOTS-123\" },\n  XK_braille_dots_4:             { code: 0x1002808, description: \"(\\u2808) BRAILLE PATTERN DOTS-4\" },\n  XK_braille_dots_14:            { code: 0x1002809, description: \"(\\u2809) BRAILLE PATTERN DOTS-14\" },\n  XK_braille_dots_24:            { code: 0x100280a, description: \"(\\u280a) BRAILLE PATTERN DOTS-24\" },\n  XK_braille_dots_124:           { code: 0x100280b, description: \"(\\u280b) BRAILLE PATTERN DOTS-124\" },\n  XK_braille_dots_34:            { code: 0x100280c, description: \"(\\u280c) BRAILLE PATTERN DOTS-34\" },\n  XK_braille_dots_134:           { code: 0x100280d, description: \"(\\u280d) BRAILLE PATTERN DOTS-134\" },\n  XK_braille_dots_234:           { code: 0x100280e, description: \"(\\u280e) BRAILLE PATTERN DOTS-234\" },\n  XK_braille_dots_1234:          { code: 0x100280f, description: \"(\\u280f) BRAILLE PATTERN DOTS-1234\" },\n  XK_braille_dots_5:             { code: 0x1002810, description: \"(\\u2810) BRAILLE PATTERN DOTS-5\" },\n  XK_braille_dots_15:            { code: 0x1002811, description: \"(\\u2811) BRAILLE PATTERN DOTS-15\" },\n  XK_braille_dots_25:            { code: 0x1002812, description: \"(\\u2812) BRAILLE PATTERN DOTS-25\" },\n  XK_braille_dots_125:           { code: 0x1002813, description: \"(\\u2813) BRAILLE PATTERN DOTS-125\" },\n  XK_braille_dots_35:            { code: 0x1002814, description: \"(\\u2814) BRAILLE PATTERN DOTS-35\" },\n  XK_braille_dots_135:           { code: 0x1002815, description: \"(\\u2815) BRAILLE PATTERN DOTS-135\" },\n  XK_braille_dots_235:           { code: 0x1002816, description: \"(\\u2816) BRAILLE PATTERN DOTS-235\" },\n  XK_braille_dots_1235:          { code: 0x1002817, description: \"(\\u2817) BRAILLE PATTERN DOTS-1235\" },\n  XK_braille_dots_45:            { code: 0x1002818, description: \"(\\u2818) BRAILLE PATTERN DOTS-45\" },\n  XK_braille_dots_145:           { code: 0x1002819, description: \"(\\u2819) BRAILLE PATTERN DOTS-145\" },\n  XK_braille_dots_245:           { code: 0x100281a, description: \"(\\u281a) BRAILLE PATTERN DOTS-245\" },\n  XK_braille_dots_1245:          { code: 0x100281b, description: \"(\\u281b) BRAILLE PATTERN DOTS-1245\" },\n  XK_braille_dots_345:           { code: 0x100281c, description: \"(\\u281c) BRAILLE PATTERN DOTS-345\" },\n  XK_braille_dots_1345:          { code: 0x100281d, description: \"(\\u281d) BRAILLE PATTERN DOTS-1345\" },\n  XK_braille_dots_2345:          { code: 0x100281e, description: \"(\\u281e) BRAILLE PATTERN DOTS-2345\" },\n  XK_braille_dots_12345:         { code: 0x100281f, description: \"(\\u281f) BRAILLE PATTERN DOTS-12345\" },\n  XK_braille_dots_6:             { code: 0x1002820, description: \"(\\u2820) BRAILLE PATTERN DOTS-6\" },\n  XK_braille_dots_16:            { code: 0x1002821, description: \"(\\u2821) BRAILLE PATTERN DOTS-16\" },\n  XK_braille_dots_26:            { code: 0x1002822, description: \"(\\u2822) BRAILLE PATTERN DOTS-26\" },\n  XK_braille_dots_126:           { code: 0x1002823, description: \"(\\u2823) BRAILLE PATTERN DOTS-126\" },\n  XK_braille_dots_36:            { code: 0x1002824, description: \"(\\u2824) BRAILLE PATTERN DOTS-36\" },\n  XK_braille_dots_136:           { code: 0x1002825, description: \"(\\u2825) BRAILLE PATTERN DOTS-136\" },\n  XK_braille_dots_236:           { code: 0x1002826, description: \"(\\u2826) BRAILLE PATTERN DOTS-236\" },\n  XK_braille_dots_1236:          { code: 0x1002827, description: \"(\\u2827) BRAILLE PATTERN DOTS-1236\" },\n  XK_braille_dots_46:            { code: 0x1002828, description: \"(\\u2828) BRAILLE PATTERN DOTS-46\" },\n  XK_braille_dots_146:           { code: 0x1002829, description: \"(\\u2829) BRAILLE PATTERN DOTS-146\" },\n  XK_braille_dots_246:           { code: 0x100282a, description: \"(\\u282a) BRAILLE PATTERN DOTS-246\" },\n  XK_braille_dots_1246:          { code: 0x100282b, description: \"(\\u282b) BRAILLE PATTERN DOTS-1246\" },\n  XK_braille_dots_346:           { code: 0x100282c, description: \"(\\u282c) BRAILLE PATTERN DOTS-346\" },\n  XK_braille_dots_1346:          { code: 0x100282d, description: \"(\\u282d) BRAILLE PATTERN DOTS-1346\" },\n  XK_braille_dots_2346:          { code: 0x100282e, description: \"(\\u282e) BRAILLE PATTERN DOTS-2346\" },\n  XK_braille_dots_12346:         { code: 0x100282f, description: \"(\\u282f) BRAILLE PATTERN DOTS-12346\" },\n  XK_braille_dots_56:            { code: 0x1002830, description: \"(\\u2830) BRAILLE PATTERN DOTS-56\" },\n  XK_braille_dots_156:           { code: 0x1002831, description: \"(\\u2831) BRAILLE PATTERN DOTS-156\" },\n  XK_braille_dots_256:           { code: 0x1002832, description: \"(\\u2832) BRAILLE PATTERN DOTS-256\" },\n  XK_braille_dots_1256:          { code: 0x1002833, description: \"(\\u2833) BRAILLE PATTERN DOTS-1256\" },\n  XK_braille_dots_356:           { code: 0x1002834, description: \"(\\u2834) BRAILLE PATTERN DOTS-356\" },\n  XK_braille_dots_1356:          { code: 0x1002835, description: \"(\\u2835) BRAILLE PATTERN DOTS-1356\" },\n  XK_braille_dots_2356:          { code: 0x1002836, description: \"(\\u2836) BRAILLE PATTERN DOTS-2356\" },\n  XK_braille_dots_12356:         { code: 0x1002837, description: \"(\\u2837) BRAILLE PATTERN DOTS-12356\" },\n  XK_braille_dots_456:           { code: 0x1002838, description: \"(\\u2838) BRAILLE PATTERN DOTS-456\" },\n  XK_braille_dots_1456:          { code: 0x1002839, description: \"(\\u2839) BRAILLE PATTERN DOTS-1456\" },\n  XK_braille_dots_2456:          { code: 0x100283a, description: \"(\\u283a) BRAILLE PATTERN DOTS-2456\" },\n  XK_braille_dots_12456:         { code: 0x100283b, description: \"(\\u283b) BRAILLE PATTERN DOTS-12456\" },\n  XK_braille_dots_3456:          { code: 0x100283c, description: \"(\\u283c) BRAILLE PATTERN DOTS-3456\" },\n  XK_braille_dots_13456:         { code: 0x100283d, description: \"(\\u283d) BRAILLE PATTERN DOTS-13456\" },\n  XK_braille_dots_23456:         { code: 0x100283e, description: \"(\\u283e) BRAILLE PATTERN DOTS-23456\" },\n  XK_braille_dots_123456:        { code: 0x100283f, description: \"(\\u283f) BRAILLE PATTERN DOTS-123456\" },\n  XK_braille_dots_7:             { code: 0x1002840, description: \"(\\u2840) BRAILLE PATTERN DOTS-7\" },\n  XK_braille_dots_17:            { code: 0x1002841, description: \"(\\u2841) BRAILLE PATTERN DOTS-17\" },\n  XK_braille_dots_27:            { code: 0x1002842, description: \"(\\u2842) BRAILLE PATTERN DOTS-27\" },\n  XK_braille_dots_127:           { code: 0x1002843, description: \"(\\u2843) BRAILLE PATTERN DOTS-127\" },\n  XK_braille_dots_37:            { code: 0x1002844, description: \"(\\u2844) BRAILLE PATTERN DOTS-37\" },\n  XK_braille_dots_137:           { code: 0x1002845, description: \"(\\u2845) BRAILLE PATTERN DOTS-137\" },\n  XK_braille_dots_237:           { code: 0x1002846, description: \"(\\u2846) BRAILLE PATTERN DOTS-237\" },\n  XK_braille_dots_1237:          { code: 0x1002847, description: \"(\\u2847) BRAILLE PATTERN DOTS-1237\" },\n  XK_braille_dots_47:            { code: 0x1002848, description: \"(\\u2848) BRAILLE PATTERN DOTS-47\" },\n  XK_braille_dots_147:           { code: 0x1002849, description: \"(\\u2849) BRAILLE PATTERN DOTS-147\" },\n  XK_braille_dots_247:           { code: 0x100284a, description: \"(\\u284a) BRAILLE PATTERN DOTS-247\" },\n  XK_braille_dots_1247:          { code: 0x100284b, description: \"(\\u284b) BRAILLE PATTERN DOTS-1247\" },\n  XK_braille_dots_347:           { code: 0x100284c, description: \"(\\u284c) BRAILLE PATTERN DOTS-347\" },\n  XK_braille_dots_1347:          { code: 0x100284d, description: \"(\\u284d) BRAILLE PATTERN DOTS-1347\" },\n  XK_braille_dots_2347:          { code: 0x100284e, description: \"(\\u284e) BRAILLE PATTERN DOTS-2347\" },\n  XK_braille_dots_12347:         { code: 0x100284f, description: \"(\\u284f) BRAILLE PATTERN DOTS-12347\" },\n  XK_braille_dots_57:            { code: 0x1002850, description: \"(\\u2850) BRAILLE PATTERN DOTS-57\" },\n  XK_braille_dots_157:           { code: 0x1002851, description: \"(\\u2851) BRAILLE PATTERN DOTS-157\" },\n  XK_braille_dots_257:           { code: 0x1002852, description: \"(\\u2852) BRAILLE PATTERN DOTS-257\" },\n  XK_braille_dots_1257:          { code: 0x1002853, description: \"(\\u2853) BRAILLE PATTERN DOTS-1257\" },\n  XK_braille_dots_357:           { code: 0x1002854, description: \"(\\u2854) BRAILLE PATTERN DOTS-357\" },\n  XK_braille_dots_1357:          { code: 0x1002855, description: \"(\\u2855) BRAILLE PATTERN DOTS-1357\" },\n  XK_braille_dots_2357:          { code: 0x1002856, description: \"(\\u2856) BRAILLE PATTERN DOTS-2357\" },\n  XK_braille_dots_12357:         { code: 0x1002857, description: \"(\\u2857) BRAILLE PATTERN DOTS-12357\" },\n  XK_braille_dots_457:           { code: 0x1002858, description: \"(\\u2858) BRAILLE PATTERN DOTS-457\" },\n  XK_braille_dots_1457:          { code: 0x1002859, description: \"(\\u2859) BRAILLE PATTERN DOTS-1457\" },\n  XK_braille_dots_2457:          { code: 0x100285a, description: \"(\\u285a) BRAILLE PATTERN DOTS-2457\" },\n  XK_braille_dots_12457:         { code: 0x100285b, description: \"(\\u285b) BRAILLE PATTERN DOTS-12457\" },\n  XK_braille_dots_3457:          { code: 0x100285c, description: \"(\\u285c) BRAILLE PATTERN DOTS-3457\" },\n  XK_braille_dots_13457:         { code: 0x100285d, description: \"(\\u285d) BRAILLE PATTERN DOTS-13457\" },\n  XK_braille_dots_23457:         { code: 0x100285e, description: \"(\\u285e) BRAILLE PATTERN DOTS-23457\" },\n  XK_braille_dots_123457:        { code: 0x100285f, description: \"(\\u285f) BRAILLE PATTERN DOTS-123457\" },\n  XK_braille_dots_67:            { code: 0x1002860, description: \"(\\u2860) BRAILLE PATTERN DOTS-67\" },\n  XK_braille_dots_167:           { code: 0x1002861, description: \"(\\u2861) BRAILLE PATTERN DOTS-167\" },\n  XK_braille_dots_267:           { code: 0x1002862, description: \"(\\u2862) BRAILLE PATTERN DOTS-267\" },\n  XK_braille_dots_1267:          { code: 0x1002863, description: \"(\\u2863) BRAILLE PATTERN DOTS-1267\" },\n  XK_braille_dots_367:           { code: 0x1002864, description: \"(\\u2864) BRAILLE PATTERN DOTS-367\" },\n  XK_braille_dots_1367:          { code: 0x1002865, description: \"(\\u2865) BRAILLE PATTERN DOTS-1367\" },\n  XK_braille_dots_2367:          { code: 0x1002866, description: \"(\\u2866) BRAILLE PATTERN DOTS-2367\" },\n  XK_braille_dots_12367:         { code: 0x1002867, description: \"(\\u2867) BRAILLE PATTERN DOTS-12367\" },\n  XK_braille_dots_467:           { code: 0x1002868, description: \"(\\u2868) BRAILLE PATTERN DOTS-467\" },\n  XK_braille_dots_1467:          { code: 0x1002869, description: \"(\\u2869) BRAILLE PATTERN DOTS-1467\" },\n  XK_braille_dots_2467:          { code: 0x100286a, description: \"(\\u286a) BRAILLE PATTERN DOTS-2467\" },\n  XK_braille_dots_12467:         { code: 0x100286b, description: \"(\\u286b) BRAILLE PATTERN DOTS-12467\" },\n  XK_braille_dots_3467:          { code: 0x100286c, description: \"(\\u286c) BRAILLE PATTERN DOTS-3467\" },\n  XK_braille_dots_13467:         { code: 0x100286d, description: \"(\\u286d) BRAILLE PATTERN DOTS-13467\" },\n  XK_braille_dots_23467:         { code: 0x100286e, description: \"(\\u286e) BRAILLE PATTERN DOTS-23467\" },\n  XK_braille_dots_123467:        { code: 0x100286f, description: \"(\\u286f) BRAILLE PATTERN DOTS-123467\" },\n  XK_braille_dots_567:           { code: 0x1002870, description: \"(\\u2870) BRAILLE PATTERN DOTS-567\" },\n  XK_braille_dots_1567:          { code: 0x1002871, description: \"(\\u2871) BRAILLE PATTERN DOTS-1567\" },\n  XK_braille_dots_2567:          { code: 0x1002872, description: \"(\\u2872) BRAILLE PATTERN DOTS-2567\" },\n  XK_braille_dots_12567:         { code: 0x1002873, description: \"(\\u2873) BRAILLE PATTERN DOTS-12567\" },\n  XK_braille_dots_3567:          { code: 0x1002874, description: \"(\\u2874) BRAILLE PATTERN DOTS-3567\" },\n  XK_braille_dots_13567:         { code: 0x1002875, description: \"(\\u2875) BRAILLE PATTERN DOTS-13567\" },\n  XK_braille_dots_23567:         { code: 0x1002876, description: \"(\\u2876) BRAILLE PATTERN DOTS-23567\" },\n  XK_braille_dots_123567:        { code: 0x1002877, description: \"(\\u2877) BRAILLE PATTERN DOTS-123567\" },\n  XK_braille_dots_4567:          { code: 0x1002878, description: \"(\\u2878) BRAILLE PATTERN DOTS-4567\" },\n  XK_braille_dots_14567:         { code: 0x1002879, description: \"(\\u2879) BRAILLE PATTERN DOTS-14567\" },\n  XK_braille_dots_24567:         { code: 0x100287a, description: \"(\\u287a) BRAILLE PATTERN DOTS-24567\" },\n  XK_braille_dots_124567:        { code: 0x100287b, description: \"(\\u287b) BRAILLE PATTERN DOTS-124567\" },\n  XK_braille_dots_34567:         { code: 0x100287c, description: \"(\\u287c) BRAILLE PATTERN DOTS-34567\" },\n  XK_braille_dots_134567:        { code: 0x100287d, description: \"(\\u287d) BRAILLE PATTERN DOTS-134567\" },\n  XK_braille_dots_234567:        { code: 0x100287e, description: \"(\\u287e) BRAILLE PATTERN DOTS-234567\" },\n  XK_braille_dots_1234567:       { code: 0x100287f, description: \"(\\u287f) BRAILLE PATTERN DOTS-1234567\" },\n  XK_braille_dots_8:             { code: 0x1002880, description: \"(\\u2880) BRAILLE PATTERN DOTS-8\" },\n  XK_braille_dots_18:            { code: 0x1002881, description: \"(\\u2881) BRAILLE PATTERN DOTS-18\" },\n  XK_braille_dots_28:            { code: 0x1002882, description: \"(\\u2882) BRAILLE PATTERN DOTS-28\" },\n  XK_braille_dots_128:           { code: 0x1002883, description: \"(\\u2883) BRAILLE PATTERN DOTS-128\" },\n  XK_braille_dots_38:            { code: 0x1002884, description: \"(\\u2884) BRAILLE PATTERN DOTS-38\" },\n  XK_braille_dots_138:           { code: 0x1002885, description: \"(\\u2885) BRAILLE PATTERN DOTS-138\" },\n  XK_braille_dots_238:           { code: 0x1002886, description: \"(\\u2886) BRAILLE PATTERN DOTS-238\" },\n  XK_braille_dots_1238:          { code: 0x1002887, description: \"(\\u2887) BRAILLE PATTERN DOTS-1238\" },\n  XK_braille_dots_48:            { code: 0x1002888, description: \"(\\u2888) BRAILLE PATTERN DOTS-48\" },\n  XK_braille_dots_148:           { code: 0x1002889, description: \"(\\u2889) BRAILLE PATTERN DOTS-148\" },\n  XK_braille_dots_248:           { code: 0x100288a, description: \"(\\u288a) BRAILLE PATTERN DOTS-248\" },\n  XK_braille_dots_1248:          { code: 0x100288b, description: \"(\\u288b) BRAILLE PATTERN DOTS-1248\" },\n  XK_braille_dots_348:           { code: 0x100288c, description: \"(\\u288c) BRAILLE PATTERN DOTS-348\" },\n  XK_braille_dots_1348:          { code: 0x100288d, description: \"(\\u288d) BRAILLE PATTERN DOTS-1348\" },\n  XK_braille_dots_2348:          { code: 0x100288e, description: \"(\\u288e) BRAILLE PATTERN DOTS-2348\" },\n  XK_braille_dots_12348:         { code: 0x100288f, description: \"(\\u288f) BRAILLE PATTERN DOTS-12348\" },\n  XK_braille_dots_58:            { code: 0x1002890, description: \"(\\u2890) BRAILLE PATTERN DOTS-58\" },\n  XK_braille_dots_158:           { code: 0x1002891, description: \"(\\u2891) BRAILLE PATTERN DOTS-158\" },\n  XK_braille_dots_258:           { code: 0x1002892, description: \"(\\u2892) BRAILLE PATTERN DOTS-258\" },\n  XK_braille_dots_1258:          { code: 0x1002893, description: \"(\\u2893) BRAILLE PATTERN DOTS-1258\" },\n  XK_braille_dots_358:           { code: 0x1002894, description: \"(\\u2894) BRAILLE PATTERN DOTS-358\" },\n  XK_braille_dots_1358:          { code: 0x1002895, description: \"(\\u2895) BRAILLE PATTERN DOTS-1358\" },\n  XK_braille_dots_2358:          { code: 0x1002896, description: \"(\\u2896) BRAILLE PATTERN DOTS-2358\" },\n  XK_braille_dots_12358:         { code: 0x1002897, description: \"(\\u2897) BRAILLE PATTERN DOTS-12358\" },\n  XK_braille_dots_458:           { code: 0x1002898, description: \"(\\u2898) BRAILLE PATTERN DOTS-458\" },\n  XK_braille_dots_1458:          { code: 0x1002899, description: \"(\\u2899) BRAILLE PATTERN DOTS-1458\" },\n  XK_braille_dots_2458:          { code: 0x100289a, description: \"(\\u289a) BRAILLE PATTERN DOTS-2458\" },\n  XK_braille_dots_12458:         { code: 0x100289b, description: \"(\\u289b) BRAILLE PATTERN DOTS-12458\" },\n  XK_braille_dots_3458:          { code: 0x100289c, description: \"(\\u289c) BRAILLE PATTERN DOTS-3458\" },\n  XK_braille_dots_13458:         { code: 0x100289d, description: \"(\\u289d) BRAILLE PATTERN DOTS-13458\" },\n  XK_braille_dots_23458:         { code: 0x100289e, description: \"(\\u289e) BRAILLE PATTERN DOTS-23458\" },\n  XK_braille_dots_123458:        { code: 0x100289f, description: \"(\\u289f) BRAILLE PATTERN DOTS-123458\" },\n  XK_braille_dots_68:            { code: 0x10028a0, description: \"(\\u28a0) BRAILLE PATTERN DOTS-68\" },\n  XK_braille_dots_168:           { code: 0x10028a1, description: \"(\\u28a1) BRAILLE PATTERN DOTS-168\" },\n  XK_braille_dots_268:           { code: 0x10028a2, description: \"(\\u28a2) BRAILLE PATTERN DOTS-268\" },\n  XK_braille_dots_1268:          { code: 0x10028a3, description: \"(\\u28a3) BRAILLE PATTERN DOTS-1268\" },\n  XK_braille_dots_368:           { code: 0x10028a4, description: \"(\\u28a4) BRAILLE PATTERN DOTS-368\" },\n  XK_braille_dots_1368:          { code: 0x10028a5, description: \"(\\u28a5) BRAILLE PATTERN DOTS-1368\" },\n  XK_braille_dots_2368:          { code: 0x10028a6, description: \"(\\u28a6) BRAILLE PATTERN DOTS-2368\" },\n  XK_braille_dots_12368:         { code: 0x10028a7, description: \"(\\u28a7) BRAILLE PATTERN DOTS-12368\" },\n  XK_braille_dots_468:           { code: 0x10028a8, description: \"(\\u28a8) BRAILLE PATTERN DOTS-468\" },\n  XK_braille_dots_1468:          { code: 0x10028a9, description: \"(\\u28a9) BRAILLE PATTERN DOTS-1468\" },\n  XK_braille_dots_2468:          { code: 0x10028aa, description: \"(\\u28aa) BRAILLE PATTERN DOTS-2468\" },\n  XK_braille_dots_12468:         { code: 0x10028ab, description: \"(\\u28ab) BRAILLE PATTERN DOTS-12468\" },\n  XK_braille_dots_3468:          { code: 0x10028ac, description: \"(\\u28ac) BRAILLE PATTERN DOTS-3468\" },\n  XK_braille_dots_13468:         { code: 0x10028ad, description: \"(\\u28ad) BRAILLE PATTERN DOTS-13468\" },\n  XK_braille_dots_23468:         { code: 0x10028ae, description: \"(\\u28ae) BRAILLE PATTERN DOTS-23468\" },\n  XK_braille_dots_123468:        { code: 0x10028af, description: \"(\\u28af) BRAILLE PATTERN DOTS-123468\" },\n  XK_braille_dots_568:           { code: 0x10028b0, description: \"(\\u28b0) BRAILLE PATTERN DOTS-568\" },\n  XK_braille_dots_1568:          { code: 0x10028b1, description: \"(\\u28b1) BRAILLE PATTERN DOTS-1568\" },\n  XK_braille_dots_2568:          { code: 0x10028b2, description: \"(\\u28b2) BRAILLE PATTERN DOTS-2568\" },\n  XK_braille_dots_12568:         { code: 0x10028b3, description: \"(\\u28b3) BRAILLE PATTERN DOTS-12568\" },\n  XK_braille_dots_3568:          { code: 0x10028b4, description: \"(\\u28b4) BRAILLE PATTERN DOTS-3568\" },\n  XK_braille_dots_13568:         { code: 0x10028b5, description: \"(\\u28b5) BRAILLE PATTERN DOTS-13568\" },\n  XK_braille_dots_23568:         { code: 0x10028b6, description: \"(\\u28b6) BRAILLE PATTERN DOTS-23568\" },\n  XK_braille_dots_123568:        { code: 0x10028b7, description: \"(\\u28b7) BRAILLE PATTERN DOTS-123568\" },\n  XK_braille_dots_4568:          { code: 0x10028b8, description: \"(\\u28b8) BRAILLE PATTERN DOTS-4568\" },\n  XK_braille_dots_14568:         { code: 0x10028b9, description: \"(\\u28b9) BRAILLE PATTERN DOTS-14568\" },\n  XK_braille_dots_24568:         { code: 0x10028ba, description: \"(\\u28ba) BRAILLE PATTERN DOTS-24568\" },\n  XK_braille_dots_124568:        { code: 0x10028bb, description: \"(\\u28bb) BRAILLE PATTERN DOTS-124568\" },\n  XK_braille_dots_34568:         { code: 0x10028bc, description: \"(\\u28bc) BRAILLE PATTERN DOTS-34568\" },\n  XK_braille_dots_134568:        { code: 0x10028bd, description: \"(\\u28bd) BRAILLE PATTERN DOTS-134568\" },\n  XK_braille_dots_234568:        { code: 0x10028be, description: \"(\\u28be) BRAILLE PATTERN DOTS-234568\" },\n  XK_braille_dots_1234568:       { code: 0x10028bf, description: \"(\\u28bf) BRAILLE PATTERN DOTS-1234568\" },\n  XK_braille_dots_78:            { code: 0x10028c0, description: \"(\\u28c0) BRAILLE PATTERN DOTS-78\" },\n  XK_braille_dots_178:           { code: 0x10028c1, description: \"(\\u28c1) BRAILLE PATTERN DOTS-178\" },\n  XK_braille_dots_278:           { code: 0x10028c2, description: \"(\\u28c2) BRAILLE PATTERN DOTS-278\" },\n  XK_braille_dots_1278:          { code: 0x10028c3, description: \"(\\u28c3) BRAILLE PATTERN DOTS-1278\" },\n  XK_braille_dots_378:           { code: 0x10028c4, description: \"(\\u28c4) BRAILLE PATTERN DOTS-378\" },\n  XK_braille_dots_1378:          { code: 0x10028c5, description: \"(\\u28c5) BRAILLE PATTERN DOTS-1378\" },\n  XK_braille_dots_2378:          { code: 0x10028c6, description: \"(\\u28c6) BRAILLE PATTERN DOTS-2378\" },\n  XK_braille_dots_12378:         { code: 0x10028c7, description: \"(\\u28c7) BRAILLE PATTERN DOTS-12378\" },\n  XK_braille_dots_478:           { code: 0x10028c8, description: \"(\\u28c8) BRAILLE PATTERN DOTS-478\" },\n  XK_braille_dots_1478:          { code: 0x10028c9, description: \"(\\u28c9) BRAILLE PATTERN DOTS-1478\" },\n  XK_braille_dots_2478:          { code: 0x10028ca, description: \"(\\u28ca) BRAILLE PATTERN DOTS-2478\" },\n  XK_braille_dots_12478:         { code: 0x10028cb, description: \"(\\u28cb) BRAILLE PATTERN DOTS-12478\" },\n  XK_braille_dots_3478:          { code: 0x10028cc, description: \"(\\u28cc) BRAILLE PATTERN DOTS-3478\" },\n  XK_braille_dots_13478:         { code: 0x10028cd, description: \"(\\u28cd) BRAILLE PATTERN DOTS-13478\" },\n  XK_braille_dots_23478:         { code: 0x10028ce, description: \"(\\u28ce) BRAILLE PATTERN DOTS-23478\" },\n  XK_braille_dots_123478:        { code: 0x10028cf, description: \"(\\u28cf) BRAILLE PATTERN DOTS-123478\" },\n  XK_braille_dots_578:           { code: 0x10028d0, description: \"(\\u28d0) BRAILLE PATTERN DOTS-578\" },\n  XK_braille_dots_1578:          { code: 0x10028d1, description: \"(\\u28d1) BRAILLE PATTERN DOTS-1578\" },\n  XK_braille_dots_2578:          { code: 0x10028d2, description: \"(\\u28d2) BRAILLE PATTERN DOTS-2578\" },\n  XK_braille_dots_12578:         { code: 0x10028d3, description: \"(\\u28d3) BRAILLE PATTERN DOTS-12578\" },\n  XK_braille_dots_3578:          { code: 0x10028d4, description: \"(\\u28d4) BRAILLE PATTERN DOTS-3578\" },\n  XK_braille_dots_13578:         { code: 0x10028d5, description: \"(\\u28d5) BRAILLE PATTERN DOTS-13578\" },\n  XK_braille_dots_23578:         { code: 0x10028d6, description: \"(\\u28d6) BRAILLE PATTERN DOTS-23578\" },\n  XK_braille_dots_123578:        { code: 0x10028d7, description: \"(\\u28d7) BRAILLE PATTERN DOTS-123578\" },\n  XK_braille_dots_4578:          { code: 0x10028d8, description: \"(\\u28d8) BRAILLE PATTERN DOTS-4578\" },\n  XK_braille_dots_14578:         { code: 0x10028d9, description: \"(\\u28d9) BRAILLE PATTERN DOTS-14578\" },\n  XK_braille_dots_24578:         { code: 0x10028da, description: \"(\\u28da) BRAILLE PATTERN DOTS-24578\" },\n  XK_braille_dots_124578:        { code: 0x10028db, description: \"(\\u28db) BRAILLE PATTERN DOTS-124578\" },\n  XK_braille_dots_34578:         { code: 0x10028dc, description: \"(\\u28dc) BRAILLE PATTERN DOTS-34578\" },\n  XK_braille_dots_134578:        { code: 0x10028dd, description: \"(\\u28dd) BRAILLE PATTERN DOTS-134578\" },\n  XK_braille_dots_234578:        { code: 0x10028de, description: \"(\\u28de) BRAILLE PATTERN DOTS-234578\" },\n  XK_braille_dots_1234578:       { code: 0x10028df, description: \"(\\u28df) BRAILLE PATTERN DOTS-1234578\" },\n  XK_braille_dots_678:           { code: 0x10028e0, description: \"(\\u28e0) BRAILLE PATTERN DOTS-678\" },\n  XK_braille_dots_1678:          { code: 0x10028e1, description: \"(\\u28e1) BRAILLE PATTERN DOTS-1678\" },\n  XK_braille_dots_2678:          { code: 0x10028e2, description: \"(\\u28e2) BRAILLE PATTERN DOTS-2678\" },\n  XK_braille_dots_12678:         { code: 0x10028e3, description: \"(\\u28e3) BRAILLE PATTERN DOTS-12678\" },\n  XK_braille_dots_3678:          { code: 0x10028e4, description: \"(\\u28e4) BRAILLE PATTERN DOTS-3678\" },\n  XK_braille_dots_13678:         { code: 0x10028e5, description: \"(\\u28e5) BRAILLE PATTERN DOTS-13678\" },\n  XK_braille_dots_23678:         { code: 0x10028e6, description: \"(\\u28e6) BRAILLE PATTERN DOTS-23678\" },\n  XK_braille_dots_123678:        { code: 0x10028e7, description: \"(\\u28e7) BRAILLE PATTERN DOTS-123678\" },\n  XK_braille_dots_4678:          { code: 0x10028e8, description: \"(\\u28e8) BRAILLE PATTERN DOTS-4678\" },\n  XK_braille_dots_14678:         { code: 0x10028e9, description: \"(\\u28e9) BRAILLE PATTERN DOTS-14678\" },\n  XK_braille_dots_24678:         { code: 0x10028ea, description: \"(\\u28ea) BRAILLE PATTERN DOTS-24678\" },\n  XK_braille_dots_124678:        { code: 0x10028eb, description: \"(\\u28eb) BRAILLE PATTERN DOTS-124678\" },\n  XK_braille_dots_34678:         { code: 0x10028ec, description: \"(\\u28ec) BRAILLE PATTERN DOTS-34678\" },\n  XK_braille_dots_134678:        { code: 0x10028ed, description: \"(\\u28ed) BRAILLE PATTERN DOTS-134678\" },\n  XK_braille_dots_234678:        { code: 0x10028ee, description: \"(\\u28ee) BRAILLE PATTERN DOTS-234678\" },\n  XK_braille_dots_1234678:       { code: 0x10028ef, description: \"(\\u28ef) BRAILLE PATTERN DOTS-1234678\" },\n  XK_braille_dots_5678:          { code: 0x10028f0, description: \"(\\u28f0) BRAILLE PATTERN DOTS-5678\" },\n  XK_braille_dots_15678:         { code: 0x10028f1, description: \"(\\u28f1) BRAILLE PATTERN DOTS-15678\" },\n  XK_braille_dots_25678:         { code: 0x10028f2, description: \"(\\u28f2) BRAILLE PATTERN DOTS-25678\" },\n  XK_braille_dots_125678:        { code: 0x10028f3, description: \"(\\u28f3) BRAILLE PATTERN DOTS-125678\" },\n  XK_braille_dots_35678:         { code: 0x10028f4, description: \"(\\u28f4) BRAILLE PATTERN DOTS-35678\" },\n  XK_braille_dots_135678:        { code: 0x10028f5, description: \"(\\u28f5) BRAILLE PATTERN DOTS-135678\" },\n  XK_braille_dots_235678:        { code: 0x10028f6, description: \"(\\u28f6) BRAILLE PATTERN DOTS-235678\" },\n  XK_braille_dots_1235678:       { code: 0x10028f7, description: \"(\\u28f7) BRAILLE PATTERN DOTS-1235678\" },\n  XK_braille_dots_45678:         { code: 0x10028f8, description: \"(\\u28f8) BRAILLE PATTERN DOTS-45678\" },\n  XK_braille_dots_145678:        { code: 0x10028f9, description: \"(\\u28f9) BRAILLE PATTERN DOTS-145678\" },\n  XK_braille_dots_245678:        { code: 0x10028fa, description: \"(\\u28fa) BRAILLE PATTERN DOTS-245678\" },\n  XK_braille_dots_1245678:       { code: 0x10028fb, description: \"(\\u28fb) BRAILLE PATTERN DOTS-1245678\" },\n  XK_braille_dots_345678:        { code: 0x10028fc, description: \"(\\u28fc) BRAILLE PATTERN DOTS-345678\" },\n  XK_braille_dots_1345678:       { code: 0x10028fd, description: \"(\\u28fd) BRAILLE PATTERN DOTS-1345678\" },\n  XK_braille_dots_2345678:       { code: 0x10028fe, description: \"(\\u28fe) BRAILLE PATTERN DOTS-2345678\" },\n  XK_braille_dots_12345678:      { code: 0x10028ff, description: \"(\\u28ff) BRAILLE PATTERN DOTS-12345678\" },\n\n\n/*\n * Sinhala (http://unicode.org/charts/PDF/U0D80.pdf)\n * http://www.nongnu.org/sinhala/doc/transliteration/sinhala-transliteration_6.html\n */\n\n// Group XK_SINHALA\n  XK_Sinh_ng:            { code: 0x1000d82, description: \"(\\u0D82) SINHALA ANUSVARAYA\" },\n  XK_Sinh_h2:            { code: 0x1000d83, description: \"(\\u0D83) SINHALA VISARGAYA\" },\n  XK_Sinh_a:             { code: 0x1000d85, description: \"(\\u0D85) SINHALA AYANNA\" },\n  XK_Sinh_aa:            { code: 0x1000d86, description: \"(\\u0D86) SINHALA AAYANNA\" },\n  XK_Sinh_ae:            { code: 0x1000d87, description: \"(\\u0D87) SINHALA AEYANNA\" },\n  XK_Sinh_aee:           { code: 0x1000d88, description: \"(\\u0D88) SINHALA AEEYANNA\" },\n  XK_Sinh_i:             { code: 0x1000d89, description: \"(\\u0D89) SINHALA IYANNA\" },\n  XK_Sinh_ii:            { code: 0x1000d8a, description: \"(\\u0D8A) SINHALA IIYANNA\" },\n  XK_Sinh_u:             { code: 0x1000d8b, description: \"(\\u0D8B) SINHALA UYANNA\" },\n  XK_Sinh_uu:            { code: 0x1000d8c, description: \"(\\u0D8C) SINHALA UUYANNA\" },\n  XK_Sinh_ri:            { code: 0x1000d8d, description: \"(\\u0D8D) SINHALA IRUYANNA\" },\n  XK_Sinh_rii:           { code: 0x1000d8e, description: \"(\\u0D8E) SINHALA IRUUYANNA\" },\n  XK_Sinh_lu:            { code: 0x1000d8f, description: \"(\\u0D8F) SINHALA ILUYANNA\" },\n  XK_Sinh_luu:           { code: 0x1000d90, description: \"(\\u0D90) SINHALA ILUUYANNA\" },\n  XK_Sinh_e:             { code: 0x1000d91, description: \"(\\u0D91) SINHALA EYANNA\" },\n  XK_Sinh_ee:            { code: 0x1000d92, description: \"(\\u0D92) SINHALA EEYANNA\" },\n  XK_Sinh_ai:            { code: 0x1000d93, description: \"(\\u0D93) SINHALA AIYANNA\" },\n  XK_Sinh_o:             { code: 0x1000d94, description: \"(\\u0D94) SINHALA OYANNA\" },\n  XK_Sinh_oo:            { code: 0x1000d95, description: \"(\\u0D95) SINHALA OOYANNA\" },\n  XK_Sinh_au:            { code: 0x1000d96, description: \"(\\u0D96) SINHALA AUYANNA\" },\n  XK_Sinh_ka:            { code: 0x1000d9a, description: \"(\\u0D9A) SINHALA KAYANNA\" },\n  XK_Sinh_kha:           { code: 0x1000d9b, description: \"(\\u0D9B) SINHALA MAHA. KAYANNA\" },\n  XK_Sinh_ga:            { code: 0x1000d9c, description: \"(\\u0D9C) SINHALA GAYANNA\" },\n  XK_Sinh_gha:           { code: 0x1000d9d, description: \"(\\u0D9D) SINHALA MAHA. GAYANNA\" },\n  XK_Sinh_ng2:           { code: 0x1000d9e, description: \"(\\u0D9E) SINHALA KANTAJA NAASIKYAYA\" },\n  XK_Sinh_nga:           { code: 0x1000d9f, description: \"(\\u0D9F) SINHALA SANYAKA GAYANNA\" },\n  XK_Sinh_ca:            { code: 0x1000da0, description: \"(\\u0DA0) SINHALA CAYANNA\" },\n  XK_Sinh_cha:           { code: 0x1000da1, description: \"(\\u0DA1) SINHALA MAHA. CAYANNA\" },\n  XK_Sinh_ja:            { code: 0x1000da2, description: \"(\\u0DA2) SINHALA JAYANNA\" },\n  XK_Sinh_jha:           { code: 0x1000da3, description: \"(\\u0DA3) SINHALA MAHA. JAYANNA\" },\n  XK_Sinh_nya:           { code: 0x1000da4, description: \"(\\u0DA4) SINHALA TAALUJA NAASIKYAYA\" },\n  XK_Sinh_jnya:          { code: 0x1000da5, description: \"(\\u0DA5) SINHALA TAALUJA SANYOOGA NAASIKYAYA\" },\n  XK_Sinh_nja:           { code: 0x1000da6, description: \"(\\u0DA6) SINHALA SANYAKA JAYANNA\" },\n  XK_Sinh_tta:           { code: 0x1000da7, description: \"(\\u0DA7) SINHALA TTAYANNA\" },\n  XK_Sinh_ttha:          { code: 0x1000da8, description: \"(\\u0DA8) SINHALA MAHA. TTAYANNA\" },\n  XK_Sinh_dda:           { code: 0x1000da9, description: \"(\\u0DA9) SINHALA DDAYANNA\" },\n  XK_Sinh_ddha:          { code: 0x1000daa, description: \"(\\u0DAA) SINHALA MAHA. DDAYANNA\" },\n  XK_Sinh_nna:           { code: 0x1000dab, description: \"(\\u0DAB) SINHALA MUURDHAJA NAYANNA\" },\n  XK_Sinh_ndda:          { code: 0x1000dac, description: \"(\\u0DAC) SINHALA SANYAKA DDAYANNA\" },\n  XK_Sinh_tha:           { code: 0x1000dad, description: \"(\\u0DAD) SINHALA TAYANNA\" },\n  XK_Sinh_thha:          { code: 0x1000dae, description: \"(\\u0DAE) SINHALA MAHA. TAYANNA\" },\n  XK_Sinh_dha:           { code: 0x1000daf, description: \"(\\u0DAF) SINHALA DAYANNA\" },\n  XK_Sinh_dhha:          { code: 0x1000db0, description: \"(\\u0DB0) SINHALA MAHA. DAYANNA\" },\n  XK_Sinh_na:            { code: 0x1000db1, description: \"(\\u0DB1) SINHALA DANTAJA NAYANNA\" },\n  XK_Sinh_ndha:          { code: 0x1000db3, description: \"(\\u0DB3) SINHALA SANYAKA DAYANNA\" },\n  XK_Sinh_pa:            { code: 0x1000db4, description: \"(\\u0DB4) SINHALA PAYANNA\" },\n  XK_Sinh_pha:           { code: 0x1000db5, description: \"(\\u0DB5) SINHALA MAHA. PAYANNA\" },\n  XK_Sinh_ba:            { code: 0x1000db6, description: \"(\\u0DB6) SINHALA BAYANNA\" },\n  XK_Sinh_bha:           { code: 0x1000db7, description: \"(\\u0DB7) SINHALA MAHA. BAYANNA\" },\n  XK_Sinh_ma:            { code: 0x1000db8, description: \"(\\u0DB8) SINHALA MAYANNA\" },\n  XK_Sinh_mba:           { code: 0x1000db9, description: \"(\\u0DB9) SINHALA AMBA BAYANNA\" },\n  XK_Sinh_ya:            { code: 0x1000dba, description: \"(\\u0DBA) SINHALA YAYANNA\" },\n  XK_Sinh_ra:            { code: 0x1000dbb, description: \"(\\u0DBB) SINHALA RAYANNA\" },\n  XK_Sinh_la:            { code: 0x1000dbd, description: \"(\\u0DBD) SINHALA DANTAJA LAYANNA\" },\n  XK_Sinh_va:            { code: 0x1000dc0, description: \"(\\u0DC0) SINHALA VAYANNA\" },\n  XK_Sinh_sha:           { code: 0x1000dc1, description: \"(\\u0DC1) SINHALA TAALUJA SAYANNA\" },\n  XK_Sinh_ssha:          { code: 0x1000dc2, description: \"(\\u0DC2) SINHALA MUURDHAJA SAYANNA\" },\n  XK_Sinh_sa:            { code: 0x1000dc3, description: \"(\\u0DC3) SINHALA DANTAJA SAYANNA\" },\n  XK_Sinh_ha:            { code: 0x1000dc4, description: \"(\\u0DC4) SINHALA HAYANNA\" },\n  XK_Sinh_lla:           { code: 0x1000dc5, description: \"(\\u0DC5) SINHALA MUURDHAJA LAYANNA\" },\n  XK_Sinh_fa:            { code: 0x1000dc6, description: \"(\\u0DC6) SINHALA FAYANNA\" },\n  XK_Sinh_al:            { code: 0x1000dca, description: \"(\\u0DCA) SINHALA AL-LAKUNA\" },\n  XK_Sinh_aa2:           { code: 0x1000dcf, description: \"(\\u0DCF) SINHALA AELA-PILLA\" },\n  XK_Sinh_ae2:           { code: 0x1000dd0, description: \"(\\u0DD0) SINHALA AEDA-PILLA\" },\n  XK_Sinh_aee2:          { code: 0x1000dd1, description: \"(\\u0DD1) SINHALA DIGA AEDA-PILLA\" },\n  XK_Sinh_i2:            { code: 0x1000dd2, description: \"(\\u0DD2) SINHALA IS-PILLA\" },\n  XK_Sinh_ii2:           { code: 0x1000dd3, description: \"(\\u0DD3) SINHALA DIGA IS-PILLA\" },\n  XK_Sinh_u2:            { code: 0x1000dd4, description: \"(\\u0DD4) SINHALA PAA-PILLA\" },\n  XK_Sinh_uu2:           { code: 0x1000dd6, description: \"(\\u0DD6) SINHALA DIGA PAA-PILLA\" },\n  XK_Sinh_ru2:           { code: 0x1000dd8, description: \"(\\u0DD8) SINHALA GAETTA-PILLA\" },\n  XK_Sinh_e2:            { code: 0x1000dd9, description: \"(\\u0DD9) SINHALA KOMBUVA\" },\n  XK_Sinh_ee2:           { code: 0x1000dda, description: \"(\\u0DDA) SINHALA DIGA KOMBUVA\" },\n  XK_Sinh_ai2:           { code: 0x1000ddb, description: \"(\\u0DDB) SINHALA KOMBU DEKA\" },\n  XK_Sinh_o2:            { code: 0x1000ddc, description: \"(\\u0DDC) SINHALA KOMBUVA HAA AELA-PILLA\" },\n  XK_Sinh_oo2:           { code: 0x1000ddd, description: \"(\\u0DDD) SINHALA KOMBUVA HAA DIGA AELA-PILLA\" },\n  XK_Sinh_au2:           { code: 0x1000dde, description: \"(\\u0DDE) SINHALA KOMBUVA HAA GAYANUKITTA\" },\n  XK_Sinh_lu2:           { code: 0x1000ddf, description: \"(\\u0DDF) SINHALA GAYANUKITTA\" },\n  XK_Sinh_ruu2:          { code: 0x1000df2, description: \"(\\u0DF2) SINHALA DIGA GAETTA-PILLA\" },\n  XK_Sinh_luu2:          { code: 0x1000df3, description: \"(\\u0DF3) SINHALA DIGA GAYANUKITTA\" },\n  XK_Sinh_kunddaliya:    { code: 0x1000df4, description: \"(\\u0DF4) SINHALA KUNDDALIYA\" },\n\n\n  NoSymbol: 0\n};","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/autogen/dependency_list.js":"var index = require('./makeindex');\nindex('./proto/', function(index) {\n   for (i in index) {\n      console.log(index[i].header);\n      index[i].depends.forEach(function(d) {\n          console.log('    ' + d);\n      });\n   }\n});\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/autogen/makeindex.js":"var sax = require('sax');\nvar fs = require('fs');\nvar xml2js = require('xml2js')\nvar assert = require('assert');\n\nvar count = 0;\n\nfunction addToIndex(dir, index, callback, name) {\n\n  count++;\n  var header;\n\n  var parser = sax.createStream(true);\n  var stream = fs.createReadStream(dir + '/' + name).pipe(parser);\n  parser.on('end', function() {\n     count--;\n     if (count == 0)\n         callback(index);\n  });\n  parser.on('opentag', \n    function(tag) {\n       if (tag.name == 'xcb') {\n          header = tag.attributes.header;\n          index[header] = tag.attributes;\n          index[header].file = dir + name;\n          index[header].depends = []; \n          return;\n       }  \n    }\n  );\n  parser.on('closetag',\n    function(tag) {\n       if (tag == 'import')\n       {\n          index[header].depends.push(parser.lastText);\n       }\n    }\n  );\n\n  parser.on('text', \n    function(text) { \n       parser.lastText = text;\n    }\n  );\n}\n\n\nfunction grep(re, str)\n{\n   return str.match(re);\n}\n\nfunction makeIndex(dir, callback) {\n  var index = {};\n  fs.readdirSync(dir)\n    .filter(grep.bind(null, /xml$/))\n    .forEach(addToIndex.bind(null, dir, index, callback));\n}\n\nmodule.exports = makeIndex;\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/autogen/generate.js":"var sax = require('sax');\nvar fs = require('fs');\nvar assert = require('assert');\nvar oe = process.exit;\nprocess.exit = function() {\n    console.trace();\n    oe(0);\n}\n\nvar keywords = {\n    'class': 'windowClass'\n};\n\nfunction camelcase(name) {\n  name = name.split('_').reduce(function(str, word){\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n  var keyword = keywords[name];\n  return keyword ? keyword : name;\n}\n\nfunction camelParam(a)\n{\n  return a[0].toLowerCase() + a.substr(1);\n}\n\nvar baseTypeSize = {\n   'enum': 1,\n   'BOOL': 1,\n   'UInt8': 1,\n   'Int8': 1,\n   'UInt16LE': 2,\n   'Int16LE': 2,\n   'UInt32LE': 4,\n   'Int32LE': 4\n}\n\nvar types = {\n  'BOOL': 'UInt8',\n  'BYTE': 'Int8',\n  'CARD8': 'UInt8',\n  'INT8': 'Int8',\n  'CARD16': 'UInt16LE',\n  'INT16': 'Int16LE',\n  'CARD32': 'UInt32LE',\n  'INT32': 'Int32LE'\n}\n\nfunction readProto(index, protoname, structs) {\n     \n    var name = index[protoname].file;\n\nvar structs = {}\n\nvar parser = sax.createStream(true);\n\nparser.startStruct = function(name, type) {\n   parser.offset = 0;\n   if (structs[name]) {\n      console.log(structs[name]);\n      console.log(name, type);\n      //process.exit(0);\n   }\n   //assert.isUndefinedOrNull(structs[name]);\n   parser.struct = structs[name] = {};\n   parser.struct.body = [];\n   parser.struct.name = name;\n   parser.struct.type = type;\n   parser.struct.reply = [];\n   parser.active = parser.struct.body;   \n}\n\nparser.stack = [];\n\nfs.createReadStream(name).pipe(parser);\n\nparser.on('opentag', \n  function(tag) {\n    if (parser.inDoc)\n      return;\n    parser.stack.push(tag.name);\n    switch (tag.name) {\n    case 'typedef':\n       types[tag.attributes.newname] = types[tag.attributes.oldname];\n       break;\n    case 'xidtype':\n    case 'xidunion':\n       types[tag.attributes.name] = types.CARD32;\n       break;\n    case 'reply':\n       parser.active = parser.struct.reply;\n       break;\n    case 'request':\n    case 'request':\n    case 'struct':\n    case 'event':\n    case 'error':\n    case 'enum':\n       if (!tag.attributes.name)\n       {\n           console.log(['NO NAME!!!', parser.stack, tag.attributes.name, tag]); //process.exit(0);\n       }\n       parser.startStruct(tag.attributes.name, tag.name);\n       if (tag.name == 'request') {\n         var op = parser.struct.opcode = parseInt(tag.attributes.opcode);\n         assert.strictEqual(op.toString(), tag.attributes.opcode);\n       }\n       break;\n    case 'field':\n       var f = {name: camelcase(tag.attributes.name), type: tag.attributes.type };\n       // copy all values in this list from attr to result\n       ['expression'].forEach(function(ff) { if (tag.attributes[ff]) { f[ff] = tag.attributes[ff] }});\n       parser.active.push(f);\n       break;\n    case 'pad':\n       parser.active.push({pad: parseInt(tag.attributes.bytes), type: 'pad' });\n       break;\n    case 'item':\n       parser.active.push({name: tag.attributes.name});\n       break;\n    case 'valueparam':\n       parser.active.push({\n           type: 'valueparam', \n           maskRef: camelcase(tag.attributes['value-mask-name']),\n           maskType: tag.attributes['value-mask-type'],\n           listRef: tag.attributes['value-list-name']\n       });\n       break;\n    case 'list':\n       parser.active.push({\n           name: tag.attributes.name,\n           type: 'list',\n           elemType: tag.attributes.type\n       });\n       break;\n    case 'doc':\n       parser.inDoc = true;\n       break;\n    } \n  }\n);\n\nparser.on('closetag',\n  function(tag) {\n    parser.stack.pop();\n    if (tag === 'doc')\n    {\n        parser.inDoc = false;\n        return;\n    }\n    if (parser.inDoc)\n      return;\n    switch (tag) {\n    case 'reply':\n        parser.active = parser.struct.body;\n        break;\n    case 'item':\n        parser.struct.body[parser.struct.body.length-1].value = parser.lastValue;\n        break;\n    case 'value':\n        parser.lastValue = parseInt(parser.lastText); \n        break;\n    case 'bit':\n        parser.lastValue = 1<<parseInt(parser.lastText); \n        break;\n    case 'struct':\n        break;\n    //case 'fieldref':\n    //    parser.active[parser.active.length-1].fieldref = parser.lastText;\n    //    break;\n    case 'xcb':\n        //console.log(structs.GetWindowAttributes);\n        //console.log(structs.CW);\n        //console.log(structs);\n        //genWriteReq(structs.CreateWindow);\n        //genWriteReq(structs.ConfigureWindow);\n        //break;\n        console.log(\"var requests = {\");\n        var reqsArr = []; //ugly\n        for (s in structs) {\n          if (structs[s].type == 'request')\n            reqsArr.push(structs[s]); \n        }\n        for (var i=0; i < reqsArr.length; ++i)\n          genReq(reqsArr[i], i+1==reqsArr.length);\n        break;\n    }\n  }\n);\n\nparser.on('text', \n  function(text) \n  { \n    parser.lastText = text \n  }\n);\n\nfunction fieldLength(f)\n{\n   if (f.type === 'pad')\n     return f.pad;\n   if (f.type === 'valueparam')\n     return 0; // depend on actual input, calculation inserted into generated code\n   if (f.type === 'list')\n     return 0;\n   if (f.type === 'STRING8')\n     return 0;\n   var len = baseTypeSize[types[f.type]]; \n  if (!len)\n   {\n      console.log('unknown field:', f);\n      console.log('at input line: ' + parser._parser.line);\n      process.exit(0);\n   } \n   return len;\n}\n\nfunction genReply(reply, result)\n{\n  var offset = 0;\n  result.push('  },');\n  var rep0 = reply[0];\n  if (rep0.type != 'pad') {\n    assert.equal(fieldLength(rep0), 1);\n    result.push('  function(data, ' + rep0.name + ') {');\n    result.push('    var result = {};');\n    result.push('    result.' + rep0.name + ' = ' + rep0.name + ';');\n  } else {\n    result.push('  function(data) {');\n    result.push('    var result = {};');\n  }\n  // de-serealise fields array\n  result.push('    // fields here');\n  result.push('    return result;');\n  result.push('  }');    \n  return result; \n}\n\nfunction genReq(req, last)\n{\n   var result = [];\n   // 1) calculate length\n   //console.log(req.body);\n   var reqLen = 4; // byte 0 = opcode + 2,3= size (BigReq = off)\n   result.push(req.name + ': [');\n  \n   //\n   // special cases for frequent cases: no parama, 1 4 byte param etc.\n   // TODO: have a template buffers, copy & update opcode+param?\n   // measure performance first\n   //\n   if (req.body.length == 0)\n   {       \n       result.push('  function() {');\n       result.push('     return new Buffer([' + req.opcode + ', 0, 1, 0]);');\n   } else {\n   result.push('  function (args) {');\n   result.push('    var extraLength = 0;');\n   var extraLength = false;\n   for (var arg = 1; arg < req.body.length; ++arg) {\n      var field = req.body[arg];\n      reqLen += fieldLength(field);\n      if (field.type === 'valueparam')\n      {\n          extraLength = true;\n          //console.log('valueparam field, ', field);\n          // linear search, gives us n^2 performance in the worst case \n          // but for xcore and all extensions we don't have bad cases\n          for (var i=arg-1; i > 1; --i) // we don't support param0 as a valuemask\n          {\n              if (req.body[i].name === field.maskRef)\n              {\n                 req.body[i].valueList = field;\n                 field.mask = req.body[i];\n                 break;\n              }  \n          }\n\n            result.push('    for (var i in ' + field.listRef + ') {');\n            result.push('      if (args[i] != undefined) {');\n            result.push('        extraLength += 4;'); //TODO: value list value type here\n            result.push('      }');\n            result.push('    }');\n\n      }\n   }\n   var reqLen4 = ((reqLen + 3) >> 2);\n\n   if (extraLength)\n     result.push('    var data = new Buffer(' + reqLen + ' + extraLength);');\n   else {\n     result.pop(); \n     result.push('    var data = new Buffer(' + reqLen + ');');\n   } \n   result.push('    data[0] = ' + req.opcode + ';');\n   if (req.body.length != 0) {\n     if (req.body[0].type != 'pad')\n        result.push('    data[1] = args[\\'' + req.body[0].name + '\\'];'); \n     var offset = 4;\n     for (var arg = 1; arg < req.body.length; ++arg)\n\t     {\n        var f = req.body[arg];\n        if (f.type === 'pad') {\n            offset += f.pad;\n        } else if (f.valueList) {\n            var valueListStruct = structs[f.valueList.listRef];\n            assert(valueListStruct, \"undefined reference to valueList\");\n            result.push('    // value mask for ' + valueListStruct.name + ' parameters');\n            f.valueList.maskOffset = offset;\n            offset += fieldLength(f);\n        } else if (f.type === 'valueparam') {\n            if (f.mask)\n               f.maskType = f.mask.type;\n            else {\n               f.maskOffset = offset;\n               offset += baseTypeSize[types[f.maskType]];\n            }\n\n            // TODO: maybe is better to loop args and check if it present in listRef struct? instead of iterating listRef \n            result.push('    // values for ' + f.listRef);\n            result.push('    var mask = 0;');\n            result.push('    var offset = ' + offset + ';');\n            result.push('    for (var i in ' + f.listRef + ') {');\n            result.push('      if (args[i] != undefined) {');\n            result.push('        mask |= ' + f.listRef + '[i];');\n            // TODO: list-item-type? or type for each listRef enum\n            // currently hardcoded CARD32           \n            result.push('        data.writeUInt32LE(args[i], offset);');\n            result.push('        offset +=4;');\n            result.push('      }');\n            result.push('    }');\n            result.push('    data.write' + types[f.maskType] + '(mask, ' + f.maskOffset + ')');\n        } else if (f.type === 'STRING8') {\n            result.push('    data.write(args[' + f.name + '], offset);');\n            result.push('    offset += args[' + f.name + '].lengt');\n        } else {\n            if (f.expression)\n              result.push('    data.write' + types[f.type] + '(' + f.expression + ', ' + offset + ');');\n            else\n              result.push('    data.write' + types[f.type] + '(args[\\'' + req.body[arg].name + '\\'], ' + offset + ');');\n            offset += fieldLength(f);\n        }\n     }\n   } else {\n     result.push('    data[1] = 0;'); \n   }\n   if (!extraLength)\n     result.push('    data.writeUInt16LE(' + reqLen4 + ', 2);');\n   else\n     result.push('    data.writeUInt16LE(' + reqLen4 + '+(extraLength+3)>>2, 2);');\n   result.push('    return data;');\n  \n   } // if no params\n  \n   if (req.reply.length == 0) {\n       result.push('  }');\n   } else {\n       genReply(req.reply, result);\n  }\n   result.push(']' + (last ? '}' : ','))\n   console.log(result.join('\\n'));\n}\n\n}\n\nvar index = require('./makeindex');\nindex('./proto/', function(index) {\n  readProto(index, 'xproto');\n});\n\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/apple-wm.js":"// http://www.xfree86.org/current/AppleWM.3.html\n// http://opensource.apple.com/source/X11server/X11server-106.3/Xquartz/xorg-server-1.10.2/hw/xquartz/applewm.c\n// /usr/X11/include/X11/extensions/applewm.h\n\nvar x11 = require('..');\nvar xutil = require('../xutil');\n// TODO: move to templates\n\n/*\n#define X_AppleWMFrameGetRect           1\n#define X_AppleWMFrameHitTest           2\n#define X_AppleWMFrameDraw              3\n#define X_AppleWMDisableUpdate          4\n#define X_AppleWMReenableUpdate         5\n#define X_AppleWMSetWindowMenuCheck     7\n#define X_AppleWMSetWindowMenu          11\n#define X_AppleWMSendPSN                12\n#define X_AppleWMAttachTransient        13\n*/\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('Apple-WM', function(err, ext) {\n\n        if (!ext.present)\n            callback(new Error('extension not available'));\n\n        ext.QueryVersion = function(cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 0, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SSL');\n                    return res;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.FrameRect = {\n            Titlebar: 1,\n            Tracking: 2,\n            Growbox: 3\n        };\n\n        ext.FrameGetRect = function(frame_class, frame_rect, ix, iy, iw, ih, ox, oy, ow, oh, cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSSSSSSSSSS', [ext.majorOpcode, 1, 6, frame_class, frame_rect, ix, iy, iw, ih, ox, oy, ow, oh, cb]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SSSS');\n                    return {\n                        x: res[0],\n                        y: res[1],\n                        w: res[2],\n                        h: res[3]\n                    };\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.FrameHitTest = function(frame_class, px, py, ix, iy, iw, ih, ox, oy, ow, oh, cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSxxSSSSSSSSSS', [ext.majorOpcode, 2, 7, frame_class, px, py, ix, iy, iw, ih, ox, oy, ow, oh]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('L');\n                    return res[0];\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n\n// from /usr/include/Xplugin.h\n        ext.FrameClass = {\n            DecorLarge: 1,\n            Reserved1: 2,\n            Reserved2: 4,\n            Reserved3: 8,\n            DecorSmall: 16,\n            Reserved5: 32,\n            Reserved6: 64,\n            Reserved8: 128,\n            Managed: 1<<15,\n            Transient: 1<<16,\n            Stationary: 1<<17\n        };\n\n        ext.FrameAttr = {\n            Active:   1,\n            Urgent:   2,\n            Title:    4,\n            Prelight: 8,\n            Shaded:  16,\n            CloseBox: 0x100,\n            Collapse: 0x200,\n            Zoom:     0x400,\n            CloseBoxClicked: 0x800,\n            CollapseBoxClicked: 0x1000,\n            ZoomBoxClicked: 0x2000,\n            GrowBox: 0x4000\n        };\n\n        ext.FrameDraw = function(screen, window, frameClass, attr, ix, iy, iw, ih, ox, oy, ow, oh, title)\n        {\n            X.seq_num++;\n            var titleReqWords = xutil.padded_length(title.length)/4;\n            X.pack_stream.pack('CCSLLSSSSSSSSSSLp', [ext.majorOpcode, 3, 9+titleReqWords, screen, window, frameClass, attr, ix, iy, iw, ih, ox, oy, ow, oh, title.length, title]);\n            X.pack_stream.flush();\n        }\n\n        ext.NotifyMask = {\n            Controller: 1,\n            Activation: 2,\n            Pasteboard: 4,\n            All: 7\n        };\n\n// TODO: decode events\n/*\n#define AppleWMMinimizeWindow           0\n#define AppleWMZoomWindow               1\n#define AppleWMCloseWindow              2\n#define AppleWMBringAllToFront          3\n#define AppleWMHideWindow               4\n#define AppleWMHideAll                  5\n#define AppleWMShowAll                  6\n#define AppleWMWindowMenuItem           9\n#define AppleWMWindowMenuNotify         10\n#define AppleWMNextWindow               11\n#define AppleWMPreviousWindow           12\n\n#define AppleWMIsActive                 0\n#define AppleWMIsInactive               1\n#define AppleWMReloadPreferences        2\n\n#define AppleWMCopyToPasteboard         0\n*/\n\n        ext.SelectInput = function(mask)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 6, 2, mask]);\n            X.pack_stream.flush();\n        }\n\n        ext.SetFrontProcess = function()\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 8, 1]);\n            X.pack_stream.flush();\n        }\n\n        ext.WindowLevel = {\n            Normal: 0,\n            Floating: 1,\n            TornOff: 2,\n            Dock: 3,\n            Desktop: 4\n        };\n\n        ext.SetWindowLevel = function(window, level)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 9, 3, window, level]);\n            X.pack_stream.flush();\n        }\n\n        ext.CanQuit = function(state)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSCxxx', [ext.majorOpcode, 10, 2, state]);\n            X.pack_stream.flush();\n        }\n\n        // shortcut is single-byte ASCII (optional, 0=no shortcut)\n        // items example: [ 'item1', 'some item', ['C', 'item with C shortcut'] ]\n        ext.SetWindowMenu = function(items)\n        {\n           var reqlen = 8;\n           var extlength = 0;\n           items.forEach(function(i) {\n\n           });\n        }\n\n        // https://developer.apple.com\n        //    /library/mac/documentation/Carbon/Reference/Process_Manager/Reference/reference.html#//apple_ref/doc/c_ref/ProcessSerialNumber\n        ext.SendPSN = function(hi, lo)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 12, 3, hi, lo]);\n            X.pack_stream.flush();\n        }\n\n        ext.AttachTransient = function(child, parent)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 13, 3, child, parent]);\n            X.pack_stream.flush();\n        }\n\n        callback(null, ext);\n        /*\n        ext.QueryVersion(function(err, vers) {\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            ext.patch = vers[2];\n            callback(null, ext);\n        });\n        */\n\n        ext.events = {\n            AppleWMControllerNotify: 0,\n            AppleWMActivationNotify: 1,\n            AppleWMPasteboardNotify: 2,\n        }\n\n        ext.EventKind = {\n          Controller: {\n            MinimizeWindow: 0,\n            ZoomWindow: 1,\n            CloseWindow: 2,\n            BringAllToFront: 3,\n            WideWindow: 4,\n            HideAll: 5,\n            ShowAll: 6,\n            WindowMenuItem: 9,\n            WindowMenuNotify: 10,\n            NextWindow: 11,\n            PreviousWindow: 12\n          },\n          Activation: {\n            IsActive: 0,\n            IsInactive:1,\n            ReloadPreferences: 2\n          },\n          Pasteboard: {\n            CopyToPasteboard: 0\n          }\n        };\n\n        X.eventParsers[ext.firstEvent + ext.events.AppleWMControllerNotify] =\n        X.eventParsers[ext.firstEvent + ext.events.AppleWMActivationNotify] =\n        X.eventParsers[ext.firstEvent + ext.events.AppleWMPasteboardNotify] = function(type, seq, extra, code, raw)\n        {\n            var event = {};\n            switch(type) {\n                case ext.firstEvent + ext.events.AppleWMControllerNotify: event.name = 'AppleWMControllerNotify'; break;\n                case ext.firstEvent + ext.events.AppleWMActivationNotify: event.name = 'AppleWMActivationNotify'; break;\n                case ext.firstEvent + ext.events.AppleWMPasteboardNotify: event.name = 'AppleWMPasteboardNotify'; break;\n            }\n            event.type = code;\n            event.time = extra;\n            event.arg = raw.unpack('xxL')[0];\n            return event;\n        };\n\n\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/big-requests.js":"// http://www.x.org/releases/X11R7.6/doc/bigreqsproto/bigreq.html\n\n// TODO: move to templates\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('BIG-REQUESTS', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.Enable = function( cb )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 0, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return buf.unpack('L')[0];\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n        callback(null, ext);\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/composite.js":"// /usr/share/doc/x11proto-composite-dev/compositeproto.txt.gz\n// http://cgit.freedesktop.org/xorg/proto/compositeproto/plain/compositeproto.txt\n//\n// /usr/include/X11/extensions/Xcomposite.h       Xlib\n// /usr/include/X11/extensions/composite.h        constants\n// /usr/include/X11/extensions/compositeproto.h   structs\n//\n// http://ktown.kde.org/~fredrik/composite_howto.html\n//\n// server side source:\n//     http://cgit.freedesktop.org/xorg/xserver/tree/composite/compext.c\n//\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('Composite', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.Redirect = {\n            Automatic: 0,\n\t    Manual: 1\n        };\n\n        ext.QueryVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 3, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.RedirectWindow = function( window, updateType )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLCxxx', [ext.majorOpcode, 1, 3, window, updateType]);\n            X.pack_stream.flush();\n        }\n\n        ext.RedirectSubwindows = function( window, updateType )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLCxxx', [ext.majorOpcode, 2, 3, window, updateType]);\n            X.pack_stream.flush();\n        }\n\n        ext.UnredirectWindow = function(window)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 3, 2, window]);\n            X.pack_stream.flush();\n        }\n\n        ext.UnredirectSubwindows = function(window)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 4, 2, window]);\n            X.pack_stream.flush();\n        }\n\n        ext.CreateRegionFromBorderClip = function(region, window)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 5, 3, damage, region]);\n            X.pack_stream.flush();\n        }\n\n        ext.NameWindowPixmap = function(window, pixmap)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 6, 3, window, pixmap]);\n            X.pack_stream.flush();\n        }\n\n        ext.GetOverlayWindow = function(window, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 7, 2, window]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('L');\n                    return res[0];\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.ReleaseOverlayWindow = function(window)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 8, 2, window]);\n            X.pack_stream.flush();\n        }\n\n        // currently version 0.4 TODO: bump up with coordinate translations\n        ext.QueryVersion(0, 4, function(err, vers) {\n            if (err)\n                return callback(err);\n\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            callback(null, ext);\n        });\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/damage.js":"// http://www.x.org/releases/X11R7.6/doc/damageproto/damageproto.txt\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('DAMAGE', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.ReportLevel\t= {\n            RawRectangles: 0,\n\t    DeltaRectangles: 1,\n            BoundingBox: 2,\n            NonEmpty: 3\n        };\n\n        ext.QueryVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 3, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.Create = function( damage, drawable, reportlevel )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLCxxx', [ext.majorOpcode, 1, 4, damage, drawable, reportlevel]);\n            X.pack_stream.flush();\n        }\n\n        ext.Destroy = function( damage )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 2, 3, damage]);\n            X.pack_stream.flush();\n        }\n\n        ext.Subtract = function(damage, repair, parts)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLL', [ext.majorOpcode, 3, 4, damage, repair, parts]);\n            X.pack_stream.flush();\n        }\n\n        ext.Add = function(damage, region)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 4, 3, damage, region]);\n            X.pack_stream.flush();\n        }\n\n        ext.QueryVersion(1, 1, function(err, vers) {\n            if (err)\n                return callback(err);\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            callback(null, ext);\n        });\n\n        ext.events = {\n            DamageNotify: 0\n        }\n\n        X.eventParsers[ext.firstEvent + ext.events.DamageNotify] = function(type, seq, extra, code, raw)\n        {\n            var event = {};\n            event.level = code;\n            event.seq = seq;\n            event.drawable = extra;\n            var values = raw.unpack('LLssSSssSS');\n            event.damage = values[0];\n            event.time = values[1];\n            event.area = {\n              x: values[2],\n              y: values[3],\n              w: values[4],\n              h: values[5]\n            };\n            event.geometry = {\n              x: values[6],\n              y: values[7],\n              w: values[8],\n              h: values[9]\n            };\n            event.name = 'DamageNotify';\n            return event;\n        };\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/dpms.js":"// http://www.x.org/releases/X11R7.6/doc/xextproto/dpms.txt\n\nvar x11 = require('..');\n// TODO: move to templates\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('DPMS', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.GetVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSS', [ext.majorOpcode, 0, 2, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SS');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        };\n\n        ext.Capable = function(callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 1, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('C');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        };\n\n        ext.GetTimeouts = function(callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 2, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SSS');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        };\n\n        ext.SetTimeouts = function(standby_t, suspend_t, off_t)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSSSxx', [ext.majorOpcode, 3, 3, standby_t, suspend_t, off_t]);\n            X.pack_stream.flush();\n        };\n\n        ext.Enable = function()\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 4, 1]);\n            X.pack_stream.flush();\n        };\n\n        ext.Disable = function()\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 5, 1]);\n            X.pack_stream.flush();\n        };\n\n        ext.ForceLevel = function(level) // 0 : On, 1 : Standby, 2 : Suspend, 3 : Off\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSxx', [ext.majorOpcode, 6, 2, level]);\n            X.pack_stream.flush();\n        };\n\n        ext.Info = function(callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 7, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SC');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        };\n\n        callback(null, ext);\n    });\n};\n\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/fixes.js":"// http://www.x.org/releases/X11R7.6/doc/fixesproto/fixesproto.txt\n\nvar x11 = require('..');\n// TODO: move to templates\n\nfunction parse_rectangle(buf, pos) {\n    if (!pos) {\n        pos = 0;\n    }\n\n    return {\n        x : buf[pos],\n        y : buf[pos + 1],\n        width : buf[pos + 2],\n        height : buf[pos + 3]\n    }\n}\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('XFIXES', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.QueryVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 3, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.SaveSetMode = { Insert: 0, Delete: 1 };\n        ext.SaveSetTarget = { Nearest: 0, Root: 1 };\n        ext.SaveSetMap = { Map: 0, Unmap: 1 };\n\n        ext.ChangeSaveSet = function(window, mode, target, map) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSCCxL', [ext.majorOpcode, 1, 3, mode, target, map]);\n            X.pack_stream.flush();\n        };\n\n        ext.WindowRegionKind = {\n            Bounding : 0,\n            Clip : 1\n        };\n\n        ext.CreateRegion = function(region, rects) {\n            X.seq_num ++;\n            var format = 'CCSL';\n            format += Array(rects.length + 1).join('ssSS');\n            var args = [ ext.majorOpcode, 5, 2 + (rects.length << 1), region ];\n            rects.forEach(function(rect) {\n                args.push(rect.x);\n                args.push(rect.y);\n                args.push(rect.width);\n                args.push(rect.height);\n            });\n\n            X.pack_stream.pack(format, args);\n            X.pack_stream.flush();\n        }\n\n        ext.CreateRegionFromWindow = function(region, wid, kind) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLLCxxx', [ ext.majorOpcode, 7, 4, region, wid, kind ]);\n            X.pack_stream.flush();\n        }\n\n        ext.DestroyRegion = function(region) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSL', [ ext.majorOpcode, 10, 2, region ]);\n            X.pack_stream.flush();\n        }\n\n        ext.UnionRegion = function(src1, src2, dst) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLLL', [ ext.majorOpcode, 13, 4, src1, src2, dst ]);\n            X.pack_stream.flush();\n        }\n\n        ext.TranslateRegion = function(region, dx, dy) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLss', [ ext.majorOpcode, 17, 3, region, dx, dy ]);\n            X.pack_stream.flush();\n        }\n\n        ext.FetchRegion = function(region, cb) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSL', [ ext.majorOpcode, 19, 2, region ]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var n_rectangles = (buf.length - 24) >> 3;\n                    var format = 'ssSSxxxxxxxxxxxxxxxx';\n                    format += Array(n_rectangles + 1).join('ssSS');\n                    var res = buf.unpack(format);\n                    var reg = {\n                        extents : parse_rectangle(res),\n                        rectangles : []\n                    };\n\n                    for (var i = 0; i < n_rectangles; ++ i) {\n                        reg.rectangles.push(parse_rectangle(res, 4 + (i << 2)));\n                    }\n\n                    return reg;\n                },\n                cb\n            ];\n\n            X.pack_stream.flush();\n        }\n\n        ext.QueryVersion(5, 0, function(err, vers) {\n            if (err)\n                return callback(err);\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            callback(null, ext);\n        });\n\n        ext.events = {\n            DamageNotify: 0\n        }\n\n        X.eventParsers[ext.firstEvent + ext.events.DamageNotify] = function(type, seq, extra, code, raw)\n        {\n            var event = {};\n            event.level = code;\n            event.seq = seq;\n            event.drawable = extra;\n            var values = raw.unpack('LLssSSssSS');\n            event.damage = values[0];\n            event.time = values[1];\n            event.area = {\n              x: values[2],\n              y: values[3],\n              w: values[4],\n              h: values[5]\n            };\n            event.geometry = {\n              x: values[6],\n              y: values[7],\n              w: values[8],\n              h: values[9]\n            };\n            event.name = 'DamageNotify';\n            return event;\n        };\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/glxconstants.js":"module.exports = {\n    VERSION_1_1: 1,\n    VERSION_1_2: 1,\n    VERSION_1_3: 1,\n    FALSE: 0x0,\n    TRUE: 0x1,\n    BYTE: 0x1400,\n    UNSIGNED_BYTE: 0x1401,\n    SHORT: 0x1402,\n    UNSIGNED_SHORT: 0x1403,\n    INT: 0x1404,\n    UNSIGNED_INT: 0x1405,\n    FLOAT: 0x1406,\n    \"2_BYTES\": 0x1407,\n    \"3_BYTES\": 0x1408,\n    \"4_BYTES\": 0x1409,\n    DOUBLE: 0x140A,\n    POINTS: 0x0000,\n    LINES: 0x0001,\n    LINE_LOOP: 0x0002,\n    LINE_STRIP: 0x0003,\n    TRIANGLES: 0x0004,\n    TRIANGLE_STRIP: 0x0005,\n    TRIANGLE_FAN: 0x0006,\n    QUADS: 0x0007,\n    QUAD_STRIP: 0x0008,\n    POLYGON: 0x0009,\n    VERTEX_ARRAY: 0x8074,\n    NORMAL_ARRAY: 0x8075,\n    COLOR_ARRAY: 0x8076,\n    INDEX_ARRAY: 0x8077,\n    TEXTURE_COORD_ARRAY: 0x8078,\n    EDGE_FLAG_ARRAY: 0x8079,\n    VERTEX_ARRAY_SIZE: 0x807A,\n    VERTEX_ARRAY_TYPE: 0x807B,\n    VERTEX_ARRAY_STRIDE: 0x807C,\n    NORMAL_ARRAY_TYPE: 0x807E,\n    NORMAL_ARRAY_STRIDE: 0x807F,\n    COLOR_ARRAY_SIZE: 0x8081,\n    COLOR_ARRAY_TYPE: 0x8082,\n    COLOR_ARRAY_STRIDE: 0x8083,\n    INDEX_ARRAY_TYPE: 0x8085,\n    INDEX_ARRAY_STRIDE: 0x8086,\n    TEXTURE_COORD_ARRAY_SIZE: 0x8088,\n    TEXTURE_COORD_ARRAY_TYPE: 0x8089,\n    TEXTURE_COORD_ARRAY_STRIDE: 0x808A,\n    EDGE_FLAG_ARRAY_STRIDE: 0x808C,\n    VERTEX_ARRAY_POINTER: 0x808E,\n    NORMAL_ARRAY_POINTER: 0x808F,\n    COLOR_ARRAY_POINTER: 0x8090,\n    INDEX_ARRAY_POINTER: 0x8091,\n    TEXTURE_COORD_ARRAY_POINTER: 0x8092,\n    EDGE_FLAG_ARRAY_POINTER: 0x8093,\n    V2F: 0x2A20,\n    V3F: 0x2A21,\n    C4UB_V2F: 0x2A22,\n    C4UB_V3F: 0x2A23,\n    C3F_V3F: 0x2A24,\n    N3F_V3F: 0x2A25,\n    C4F_N3F_V3F: 0x2A26,\n    T2F_V3F: 0x2A27,\n    T4F_V4F: 0x2A28,\n    T2F_C4UB_V3F: 0x2A29,\n    T2F_C3F_V3F: 0x2A2A,\n    T2F_N3F_V3F: 0x2A2B,\n    T2F_C4F_N3F_V3F: 0x2A2C,\n    T4F_C4F_N3F_V4F: 0x2A2D,\n    MATRIX_MODE: 0x0BA0,\n    MODELVIEW: 0x1700,\n    PROJECTION: 0x1701,\n    TEXTURE: 0x1702,\n    POINT_SMOOTH: 0x0B10,\n    POINT_SIZE: 0x0B11,\n    POINT_SIZE_GRANULARITY: 0x0B13,\n    POINT_SIZE_RANGE: 0x0B12,\n    LINE_SMOOTH: 0x0B20,\n    LINE_STIPPLE: 0x0B24,\n    LINE_STIPPLE_PATTERN: 0x0B25,\n    LINE_STIPPLE_REPEAT: 0x0B26,\n    LINE_WIDTH: 0x0B21,\n    LINE_WIDTH_GRANULARITY: 0x0B23,\n    LINE_WIDTH_RANGE: 0x0B22,\n    POINT: 0x1B00,\n    LINE: 0x1B01,\n    FILL: 0x1B02,\n    CW: 0x0900,\n    CCW: 0x0901,\n    FRONT: 0x0404,\n    BACK: 0x0405,\n    POLYGON_MODE: 0x0B40,\n    POLYGON_SMOOTH: 0x0B41,\n    POLYGON_STIPPLE: 0x0B42,\n    EDGE_FLAG: 0x0B43,\n    CULL_FACE: 0x0B44,\n    CULL_FACE_MODE: 0x0B45,\n    FRONT_FACE: 0x0B46,\n    POLYGON_OFFSET_FACTOR: 0x8038,\n    POLYGON_OFFSET_UNITS: 0x2A00,\n    POLYGON_OFFSET_POINT: 0x2A01,\n    POLYGON_OFFSET_LINE: 0x2A02,\n    POLYGON_OFFSET_FILL: 0x8037,\n    COMPILE: 0x1300,\n    COMPILE_AND_EXECUTE: 0x1301,\n    LIST_BASE: 0x0B32,\n    LIST_INDEX: 0x0B33,\n    LIST_MODE: 0x0B30,\n    NEVER: 0x0200,\n    LESS: 0x0201,\n    EQUAL: 0x0202,\n    LEQUAL: 0x0203,\n    GREATER: 0x0204,\n    NOTEQUAL: 0x0205,\n    GEQUAL: 0x0206,\n    ALWAYS: 0x0207,\n    DEPTH_TEST: 0x0B71,\n    DEPTH_BITS: 0x0D56,\n    DEPTH_CLEAR_VALUE: 0x0B73,\n    DEPTH_FUNC: 0x0B74,\n    DEPTH_RANGE: 0x0B70,\n    DEPTH_WRITEMASK: 0x0B72,\n    DEPTH_COMPONENT: 0x1902,\n    LIGHTING: 0x0B50,\n    LIGHT0: 0x4000,\n    LIGHT1: 0x4001,\n    LIGHT2: 0x4002,\n    LIGHT3: 0x4003,\n    LIGHT4: 0x4004,\n    LIGHT5: 0x4005,\n    LIGHT6: 0x4006,\n    LIGHT7: 0x4007,\n    SPOT_EXPONENT: 0x1205,\n    SPOT_CUTOFF: 0x1206,\n    CONSTANT_ATTENUATION: 0x1207,\n    LINEAR_ATTENUATION: 0x1208,\n    QUADRATIC_ATTENUATION: 0x1209,\n    AMBIENT: 0x1200,\n    DIFFUSE: 0x1201,\n    SPECULAR: 0x1202,\n    SHININESS: 0x1601,\n    EMISSION: 0x1600,\n    POSITION: 0x1203,\n    SPOT_DIRECTION: 0x1204,\n    AMBIENT_AND_DIFFUSE: 0x1602,\n    COLOR_INDEXES: 0x1603,\n    LIGHT_MODEL_TWO_SIDE: 0x0B52,\n    LIGHT_MODEL_LOCAL_VIEWER: 0x0B51,\n    LIGHT_MODEL_AMBIENT: 0x0B53,\n    FRONT_AND_BACK: 0x0408,\n    SHADE_MODEL: 0x0B54,\n    FLAT: 0x1D00,\n    SMOOTH: 0x1D01,\n    COLOR_MATERIAL: 0x0B57,\n    COLOR_MATERIAL_FACE: 0x0B55,\n    COLOR_MATERIAL_PARAMETER: 0x0B56,\n    NORMALIZE: 0x0BA1,\n    CLIP_PLANE0: 0x3000,\n    CLIP_PLANE1: 0x3001,\n    CLIP_PLANE2: 0x3002,\n    CLIP_PLANE3: 0x3003,\n    CLIP_PLANE4: 0x3004,\n    CLIP_PLANE5: 0x3005,\n    ACCUM_RED_BITS: 0x0D58,\n    ACCUM_GREEN_BITS: 0x0D59,\n    ACCUM_BLUE_BITS: 0x0D5A,\n    ACCUM_ALPHA_BITS: 0x0D5B,\n    ACCUM_CLEAR_VALUE: 0x0B80,\n    ACCUM: 0x0100,\n    ADD: 0x0104,\n    LOAD: 0x0101,\n    MULT: 0x0103,\n    RETURN: 0x0102,\n    ALPHA_TEST: 0x0BC0,\n    ALPHA_TEST_REF: 0x0BC2,\n    ALPHA_TEST_FUNC: 0x0BC1,\n    BLEND: 0x0BE2,\n    BLEND_SRC: 0x0BE1,\n    BLEND_DST: 0x0BE0,\n    ZERO: 0x0,\n    ONE: 0x1,\n    SRC_COLOR: 0x0300,\n    ONE_MINUS_SRC_COLOR: 0x0301,\n    SRC_ALPHA: 0x0302,\n    ONE_MINUS_SRC_ALPHA: 0x0303,\n    DST_ALPHA: 0x0304,\n    ONE_MINUS_DST_ALPHA: 0x0305,\n    DST_COLOR: 0x0306,\n    ONE_MINUS_DST_COLOR: 0x0307,\n    SRC_ALPHA_SATURATE: 0x0308,\n    FEEDBACK: 0x1C01,\n    RENDER: 0x1C00,\n    SELECT: 0x1C02,\n    \"2D\": 0x0600,\n    \"3D\": 0x0601,\n    \"3D_COLOR\": 0x0602,\n    \"3D_COLOR_TEXTURE\": 0x0603,\n    \"4D_COLOR_TEXTURE\": 0x0604,\n    POINT_TOKEN: 0x0701,\n    LINE_TOKEN: 0x0702,\n    LINE_RESET_TOKEN: 0x0707,\n    POLYGON_TOKEN: 0x0703,\n    BITMAP_TOKEN: 0x0704,\n    DRAW_PIXEL_TOKEN: 0x0705,\n    COPY_PIXEL_TOKEN: 0x0706,\n    PASS_THROUGH_TOKEN: 0x0700,\n    FEEDBACK_BUFFER_POINTER: 0x0DF0,\n    FEEDBACK_BUFFER_SIZE: 0x0DF1,\n    FEEDBACK_BUFFER_TYPE: 0x0DF2,\n    SELECTION_BUFFER_POINTER: 0x0DF3,\n    SELECTION_BUFFER_SIZE: 0x0DF4,\n    FOG: 0x0B60,\n    FOG_MODE: 0x0B65,\n    FOG_DENSITY: 0x0B62,\n    FOG_COLOR: 0x0B66,\n    FOG_INDEX: 0x0B61,\n    FOG_START: 0x0B63,\n    FOG_END: 0x0B64,\n    LINEAR: 0x2601,\n    EXP: 0x0800,\n    EXP2: 0x0801,\n    LOGIC_OP: 0x0BF1,\n    INDEX_LOGIC_OP: 0x0BF1,\n    COLOR_LOGIC_OP: 0x0BF2,\n    LOGIC_OP_MODE: 0x0BF0,\n    CLEAR: 0x1500,\n    SET: 0x150F,\n    COPY: 0x1503,\n    COPY_INVERTED: 0x150C,\n    NOOP: 0x1505,\n    INVERT: 0x150A,\n    AND: 0x1501,\n    NAND: 0x150E,\n    OR: 0x1507,\n    NOR: 0x1508,\n    XOR: 0x1506,\n    EQUIV: 0x1509,\n    AND_REVERSE: 0x1502,\n    AND_INVERTED: 0x1504,\n    OR_REVERSE: 0x150B,\n    OR_INVERTED: 0x150D,\n    STENCIL_BITS: 0x0D57,\n    STENCIL_TEST: 0x0B90,\n    STENCIL_CLEAR_VALUE: 0x0B91,\n    STENCIL_FUNC: 0x0B92,\n    STENCIL_VALUE_MASK: 0x0B93,\n    STENCIL_FAIL: 0x0B94,\n    STENCIL_PASS_DEPTH_FAIL: 0x0B95,\n    STENCIL_PASS_DEPTH_PASS: 0x0B96,\n    STENCIL_REF: 0x0B97,\n    STENCIL_WRITEMASK: 0x0B98,\n    STENCIL_INDEX: 0x1901,\n    KEEP: 0x1E00,\n    REPLACE: 0x1E01,\n    INCR: 0x1E02,\n    DECR: 0x1E03,\n    NONE: 0x0,\n    LEFT: 0x0406,\n    RIGHT: 0x0407,\n    FRONT: 0x0404,\n    BACK: 0x0405,\n    FRONT_AND_BACK: 0x0408,\n    FRONT_LEFT: 0x0400,\n    FRONT_RIGHT: 0x0401,\n    BACK_LEFT: 0x0402,\n    BACK_RIGHT: 0x0403,\n    AUX0: 0x0409,\n    AUX1: 0x040A,\n    AUX2: 0x040B,\n    AUX3: 0x040C,\n    COLOR_INDEX: 0x1900,\n    RED: 0x1903,\n    GREEN: 0x1904,\n    BLUE: 0x1905,\n    ALPHA: 0x1906,\n    LUMINANCE: 0x1909,\n    LUMINANCE_ALPHA: 0x190A,\n    ALPHA_BITS: 0x0D55,\n    RED_BITS: 0x0D52,\n    GREEN_BITS: 0x0D53,\n    BLUE_BITS: 0x0D54,\n    INDEX_BITS: 0x0D51,\n    SUBPIXEL_BITS: 0x0D50,\n    AUX_BUFFERS: 0x0C00,\n    READ_BUFFER: 0x0C02,\n    DRAW_BUFFER: 0x0C01,\n    DOUBLEBUFFER: 0x0C32,\n    STEREO: 0x0C33,\n    BITMAP: 0x1A00,\n    COLOR: 0x1800,\n    DEPTH: 0x1801,\n    STENCIL: 0x1802,\n    DITHER: 0x0BD0,\n    RGB: 0x1907,\n    RGBA: 0x1908,\n    MAX_LIST_NESTING: 0x0B31,\n    MAX_EVAL_ORDER: 0x0D30,\n    MAX_LIGHTS: 0x0D31,\n    MAX_CLIP_PLANES: 0x0D32,\n    MAX_TEXTURE_SIZE: 0x0D33,\n    MAX_PIXEL_MAP_TABLE: 0x0D34,\n    MAX_ATTRIB_STACK_DEPTH: 0x0D35,\n    MAX_MODELVIEW_STACK_DEPTH: 0x0D36,\n    MAX_NAME_STACK_DEPTH: 0x0D37,\n    MAX_PROJECTION_STACK_DEPTH: 0x0D38,\n    MAX_TEXTURE_STACK_DEPTH: 0x0D39,\n    MAX_VIEWPORT_DIMS: 0x0D3A,\n    MAX_CLIENT_ATTRIB_STACK_DEPTH: 0x0D3B,\n    ATTRIB_STACK_DEPTH: 0x0BB0,\n    CLIENT_ATTRIB_STACK_DEPTH: 0x0BB1,\n    COLOR_CLEAR_VALUE: 0x0C22,\n    COLOR_WRITEMASK: 0x0C23,\n    CURRENT_INDEX: 0x0B01,\n    CURRENT_COLOR: 0x0B00,\n    CURRENT_NORMAL: 0x0B02,\n    CURRENT_RASTER_COLOR: 0x0B04,\n    CURRENT_RASTER_DISTANCE: 0x0B09,\n    CURRENT_RASTER_INDEX: 0x0B05,\n    CURRENT_RASTER_POSITION: 0x0B07,\n    CURRENT_RASTER_TEXTURE_COORDS: 0x0B06,\n    CURRENT_RASTER_POSITION_VALID: 0x0B08,\n    CURRENT_TEXTURE_COORDS: 0x0B03,\n    INDEX_CLEAR_VALUE: 0x0C20,\n    INDEX_MODE: 0x0C30,\n    INDEX_WRITEMASK: 0x0C21,\n    MODELVIEW_MATRIX: 0x0BA6,\n    MODELVIEW_STACK_DEPTH: 0x0BA3,\n    NAME_STACK_DEPTH: 0x0D70,\n    PROJECTION_MATRIX: 0x0BA7,\n    PROJECTION_STACK_DEPTH: 0x0BA4,\n    RENDER_MODE: 0x0C40,\n    RGBA_MODE: 0x0C31,\n    TEXTURE_MATRIX: 0x0BA8,\n    TEXTURE_STACK_DEPTH: 0x0BA5,\n    VIEWPORT: 0x0BA2,\n    AUTO_NORMAL: 0x0D80,\n    MAP1_COLOR_4: 0x0D90,\n    MAP1_INDEX: 0x0D91,\n    MAP1_NORMAL: 0x0D92,\n    MAP1_TEXTURE_COORD_1: 0x0D93,\n    MAP1_TEXTURE_COORD_2: 0x0D94,\n    MAP1_TEXTURE_COORD_3: 0x0D95,\n    MAP1_TEXTURE_COORD_4: 0x0D96,\n    MAP1_VERTEX_3: 0x0D97,\n    MAP1_VERTEX_4: 0x0D98,\n    MAP2_COLOR_4: 0x0DB0,\n    MAP2_INDEX: 0x0DB1,\n    MAP2_NORMAL: 0x0DB2,\n    MAP2_TEXTURE_COORD_1: 0x0DB3,\n    MAP2_TEXTURE_COORD_2: 0x0DB4,\n    MAP2_TEXTURE_COORD_3: 0x0DB5,\n    MAP2_TEXTURE_COORD_4: 0x0DB6,\n    MAP2_VERTEX_3: 0x0DB7,\n    MAP2_VERTEX_4: 0x0DB8,\n    MAP1_GRID_DOMAIN: 0x0DD0,\n    MAP1_GRID_SEGMENTS: 0x0DD1,\n    MAP2_GRID_DOMAIN: 0x0DD2,\n    MAP2_GRID_SEGMENTS: 0x0DD3,\n    COEFF: 0x0A00,\n    ORDER: 0x0A01,\n    DOMAIN: 0x0A02,\n    PERSPECTIVE_CORRECTION_HINT: 0x0C50,\n    POINT_SMOOTH_HINT: 0x0C51,\n    LINE_SMOOTH_HINT: 0x0C52,\n    POLYGON_SMOOTH_HINT: 0x0C53,\n    FOG_HINT: 0x0C54,\n    DONT_CARE: 0x1100,\n    FASTEST: 0x1101,\n    NICEST: 0x1102,\n    SCISSOR_BOX: 0x0C10,\n    SCISSOR_TEST: 0x0C11,\n    MAP_COLOR: 0x0D10,\n    MAP_STENCIL: 0x0D11,\n    INDEX_SHIFT: 0x0D12,\n    INDEX_OFFSET: 0x0D13,\n    RED_SCALE: 0x0D14,\n    RED_BIAS: 0x0D15,\n    GREEN_SCALE: 0x0D18,\n    GREEN_BIAS: 0x0D19,\n    BLUE_SCALE: 0x0D1A,\n    BLUE_BIAS: 0x0D1B,\n    ALPHA_SCALE: 0x0D1C,\n    ALPHA_BIAS: 0x0D1D,\n    DEPTH_SCALE: 0x0D1E,\n    DEPTH_BIAS: 0x0D1F,\n    PIXEL_MAP_S_TO_S_SIZE: 0x0CB1,\n    PIXEL_MAP_I_TO_I_SIZE: 0x0CB0,\n    PIXEL_MAP_I_TO_R_SIZE: 0x0CB2,\n    PIXEL_MAP_I_TO_G_SIZE: 0x0CB3,\n    PIXEL_MAP_I_TO_B_SIZE: 0x0CB4,\n    PIXEL_MAP_I_TO_A_SIZE: 0x0CB5,\n    PIXEL_MAP_R_TO_R_SIZE: 0x0CB6,\n    PIXEL_MAP_G_TO_G_SIZE: 0x0CB7,\n    PIXEL_MAP_B_TO_B_SIZE: 0x0CB8,\n    PIXEL_MAP_A_TO_A_SIZE: 0x0CB9,\n    PIXEL_MAP_S_TO_S: 0x0C71,\n    PIXEL_MAP_I_TO_I: 0x0C70,\n    PIXEL_MAP_I_TO_R: 0x0C72,\n    PIXEL_MAP_I_TO_G: 0x0C73,\n    PIXEL_MAP_I_TO_B: 0x0C74,\n    PIXEL_MAP_I_TO_A: 0x0C75,\n    PIXEL_MAP_R_TO_R: 0x0C76,\n    PIXEL_MAP_G_TO_G: 0x0C77,\n    PIXEL_MAP_B_TO_B: 0x0C78,\n    PIXEL_MAP_A_TO_A: 0x0C79,\n    PACK_ALIGNMENT: 0x0D05,\n    PACK_LSB_FIRST: 0x0D01,\n    PACK_ROW_LENGTH: 0x0D02,\n    PACK_SKIP_PIXELS: 0x0D04,\n    PACK_SKIP_ROWS: 0x0D03,\n    PACK_SWAP_BYTES: 0x0D00,\n    UNPACK_ALIGNMENT: 0x0CF5,\n    UNPACK_LSB_FIRST: 0x0CF1,\n    UNPACK_ROW_LENGTH: 0x0CF2,\n    UNPACK_SKIP_PIXELS: 0x0CF4,\n    UNPACK_SKIP_ROWS: 0x0CF3,\n    UNPACK_SWAP_BYTES: 0x0CF0,\n    ZOOM_X: 0x0D16,\n    ZOOM_Y: 0x0D17,\n    TEXTURE_ENV: 0x2300,\n    TEXTURE_ENV_MODE: 0x2200,\n    TEXTURE_1D: 0x0DE0,\n    TEXTURE_2D: 0x0DE1,\n    TEXTURE_WRAP_S: 0x2802,\n    TEXTURE_WRAP_T: 0x2803,\n    TEXTURE_MAG_FILTER: 0x2800,\n    TEXTURE_MIN_FILTER: 0x2801,\n    TEXTURE_ENV_COLOR: 0x2201,\n    TEXTURE_GEN_S: 0x0C60,\n    TEXTURE_GEN_T: 0x0C61,\n    TEXTURE_GEN_R: 0x0C62,\n    TEXTURE_GEN_Q: 0x0C63,\n    TEXTURE_GEN_MODE: 0x2500,\n    TEXTURE_BORDER_COLOR: 0x1004,\n    TEXTURE_WIDTH: 0x1000,\n    TEXTURE_HEIGHT: 0x1001,\n    TEXTURE_BORDER: 0x1005,\n    TEXTURE_COMPONENTS: 0x1003,\n    TEXTURE_RED_SIZE: 0x805C,\n    TEXTURE_GREEN_SIZE: 0x805D,\n    TEXTURE_BLUE_SIZE: 0x805E,\n    TEXTURE_ALPHA_SIZE: 0x805F,\n    TEXTURE_LUMINANCE_SIZE: 0x8060,\n    TEXTURE_INTENSITY_SIZE: 0x8061,\n    NEAREST_MIPMAP_NEAREST: 0x2700,\n    NEAREST_MIPMAP_LINEAR: 0x2702,\n    LINEAR_MIPMAP_NEAREST: 0x2701,\n    LINEAR_MIPMAP_LINEAR: 0x2703,\n    OBJECT_LINEAR: 0x2401,\n    OBJECT_PLANE: 0x2501,\n    EYE_LINEAR: 0x2400,\n    EYE_PLANE: 0x2502,\n    SPHERE_MAP: 0x2402,\n    DECAL: 0x2101,\n    MODULATE: 0x2100,\n    NEAREST: 0x2600,\n    REPEAT: 0x2901,\n    CLAMP: 0x2900,\n    VENDOR: 0x1F00,\n    RENDERER: 0x1F01,\n    VERSION: 0x1F02,\n    EXTENSIONS: 0x1F03,\n    NO_ERROR: 0x0,\n    INVALID_ENUM: 0x0500,\n    INVALID_VALUE: 0x0501,\n    INVALID_OPERATION: 0x0502,\n    STACK_OVERFLOW: 0x0503,\n    STACK_UNDERFLOW: 0x0504,\n    OUT_OF_MEMORY: 0x0505,\n    CURRENT_BIT: 0x00000001,\n    POINT_BIT: 0x00000002,\n    LINE_BIT: 0x00000004,\n    POLYGON_BIT: 0x00000008,\n    POLYGON_STIPPLE_BIT: 0x00000010,\n    PIXEL_MODE_BIT: 0x00000020,\n    LIGHTING_BIT: 0x00000040,\n    FOG_BIT: 0x00000080,\n    DEPTH_BUFFER_BIT: 0x00000100,\n    ACCUM_BUFFER_BIT: 0x00000200,\n    STENCIL_BUFFER_BIT: 0x00000400,\n    VIEWPORT_BIT: 0x00000800,\n    TRANSFORM_BIT: 0x00001000,\n    ENABLE_BIT: 0x00002000,\n    COLOR_BUFFER_BIT: 0x00004000,\n    HINT_BIT: 0x00008000,\n    EVAL_BIT: 0x00010000,\n    LIST_BIT: 0x00020000,\n    TEXTURE_BIT: 0x00040000,\n    SCISSOR_BIT: 0x00080000,\n    ALL_ATTRIB_BITS: 0x000FFFFF,\n    PROXY_TEXTURE_1D: 0x8063,\n    PROXY_TEXTURE_2D: 0x8064,\n    TEXTURE_PRIORITY: 0x8066,\n    TEXTURE_RESIDENT: 0x8067,\n    TEXTURE_BINDING_1D: 0x8068,\n    TEXTURE_BINDING_2D: 0x8069,\n    TEXTURE_INTERNAL_FORMAT: 0x1003,\n    ALPHA4: 0x803B,\n    ALPHA8: 0x803C,\n    ALPHA12: 0x803D,\n    ALPHA16: 0x803E,\n    LUMINANCE4: 0x803F,\n    LUMINANCE8: 0x8040,\n    LUMINANCE12: 0x8041,\n    LUMINANCE16: 0x8042,\n    LUMINANCE4_ALPHA4: 0x8043,\n    LUMINANCE6_ALPHA2: 0x8044,\n    LUMINANCE8_ALPHA8: 0x8045,\n    LUMINANCE12_ALPHA4: 0x8046,\n    LUMINANCE12_ALPHA12: 0x8047,\n    LUMINANCE16_ALPHA16: 0x8048,\n    INTENSITY: 0x8049,\n    INTENSITY4: 0x804A,\n    INTENSITY8: 0x804B,\n    INTENSITY12: 0x804C,\n    INTENSITY16: 0x804D,\n    R3_G3_B2: 0x2A10,\n    RGB4: 0x804F,\n    RGB5: 0x8050,\n    RGB8: 0x8051,\n    RGB10: 0x8052,\n    RGB12: 0x8053,\n    RGB16: 0x8054,\n    RGBA2: 0x8055,\n    RGBA4: 0x8056,\n    RGB5_A1: 0x8057,\n    RGBA8: 0x8058,\n    RGB10_A2: 0x8059,\n    RGBA12: 0x805A,\n    RGBA16: 0x805B,\n    CLIENT_PIXEL_STORE_BIT: 0x00000001,\n    CLIENT_VERTEX_ARRAY_BIT: 0x00000002,\n    ALL_CLIENT_ATTRIB_BITS: 0xFFFFFFFF,\n    CLIENT_ALL_ATTRIB_BITS: 0xFFFFFFFF,\n    RESCALE_NORMAL: 0x803A,\n    CLAMP_TO_EDGE: 0x812F,\n    MAX_ELEMENTS_VERTICES: 0x80E8,\n    MAX_ELEMENTS_INDICES: 0x80E9,\n    BGR: 0x80E0,\n    BGRA: 0x80E1,\n    UNSIGNED_BYTE_3_3_2: 0x8032,\n    UNSIGNED_BYTE_2_3_3_REV: 0x8362,\n    UNSIGNED_SHORT_5_6_5: 0x8363,\n    UNSIGNED_SHORT_5_6_5_REV: 0x8364,\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\n    UNSIGNED_SHORT_4_4_4_4_REV: 0x8365,\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\n    UNSIGNED_SHORT_1_5_5_5_REV: 0x8366,\n    UNSIGNED_INT_8_8_8_8: 0x8035,\n    UNSIGNED_INT_8_8_8_8_REV: 0x8367,\n    UNSIGNED_INT_10_10_10_2: 0x8036,\n    UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n    LIGHT_MODEL_COLOR_CONTROL: 0x81F8,\n    SINGLE_COLOR: 0x81F9,\n    SEPARATE_SPECULAR_COLOR: 0x81FA,\n    TEXTURE_MIN_LOD: 0x813A,\n    TEXTURE_MAX_LOD: 0x813B,\n    TEXTURE_BASE_LEVEL: 0x813C,\n    TEXTURE_MAX_LEVEL: 0x813D,\n    SMOOTH_POINT_SIZE_RANGE: 0x0B12,\n    SMOOTH_POINT_SIZE_GRANULARITY: 0x0B13,\n    SMOOTH_LINE_WIDTH_RANGE: 0x0B22,\n    SMOOTH_LINE_WIDTH_GRANULARITY: 0x0B23,\n    ALIASED_POINT_SIZE_RANGE: 0x846D,\n    ALIASED_LINE_WIDTH_RANGE: 0x846E,\n    PACK_SKIP_IMAGES: 0x806B,\n    PACK_IMAGE_HEIGHT: 0x806C,\n    UNPACK_SKIP_IMAGES: 0x806D,\n    UNPACK_IMAGE_HEIGHT: 0x806E,\n    TEXTURE_3D: 0x806F,\n    PROXY_TEXTURE_3D: 0x8070,\n    TEXTURE_DEPTH: 0x8071,\n    TEXTURE_WRAP_R: 0x8072,\n    MAX_3D_TEXTURE_SIZE: 0x8073,\n    TEXTURE_BINDING_3D: 0x806A,\n    CONSTANT_COLOR: 0x8001,\n    ONE_MINUS_CONSTANT_COLOR: 0x8002,\n    CONSTANT_ALPHA: 0x8003,\n    ONE_MINUS_CONSTANT_ALPHA: 0x8004,\n    COLOR_TABLE: 0x80D0,\n    POST_CONVOLUTION_COLOR_TABLE: 0x80D1,\n    POST_COLOR_MATRIX_COLOR_TABLE: 0x80D2,\n    PROXY_COLOR_TABLE: 0x80D3,\n    PROXY_POST_CONVOLUTION_COLOR_TABLE: 0x80D4,\n    PROXY_POST_COLOR_MATRIX_COLOR_TABLE: 0x80D5,\n    COLOR_TABLE_SCALE: 0x80D6,\n    COLOR_TABLE_BIAS: 0x80D7,\n    COLOR_TABLE_FORMAT: 0x80D8,\n    COLOR_TABLE_WIDTH: 0x80D9,\n    COLOR_TABLE_RED_SIZE: 0x80DA,\n    COLOR_TABLE_GREEN_SIZE: 0x80DB,\n    COLOR_TABLE_BLUE_SIZE: 0x80DC,\n    COLOR_TABLE_ALPHA_SIZE: 0x80DD,\n    COLOR_TABLE_LUMINANCE_SIZE: 0x80DE,\n    COLOR_TABLE_INTENSITY_SIZE: 0x80DF,\n    CONVOLUTION_1D: 0x8010,\n    CONVOLUTION_2D: 0x8011,\n    SEPARABLE_2D: 0x8012,\n    CONVOLUTION_BORDER_MODE: 0x8013,\n    CONVOLUTION_FILTER_SCALE: 0x8014,\n    CONVOLUTION_FILTER_BIAS: 0x8015,\n    REDUCE: 0x8016,\n    CONVOLUTION_FORMAT: 0x8017,\n    CONVOLUTION_WIDTH: 0x8018,\n    CONVOLUTION_HEIGHT: 0x8019,\n    MAX_CONVOLUTION_WIDTH: 0x801A,\n    MAX_CONVOLUTION_HEIGHT: 0x801B,\n    POST_CONVOLUTION_RED_SCALE: 0x801C,\n    POST_CONVOLUTION_GREEN_SCALE: 0x801D,\n    POST_CONVOLUTION_BLUE_SCALE: 0x801E,\n    POST_CONVOLUTION_ALPHA_SCALE: 0x801F,\n    POST_CONVOLUTION_RED_BIAS: 0x8020,\n    POST_CONVOLUTION_GREEN_BIAS: 0x8021,\n    POST_CONVOLUTION_BLUE_BIAS: 0x8022,\n    POST_CONVOLUTION_ALPHA_BIAS: 0x8023,\n    CONSTANT_BORDER: 0x8151,\n    REPLICATE_BORDER: 0x8153,\n    CONVOLUTION_BORDER_COLOR: 0x8154,\n    COLOR_MATRIX: 0x80B1,\n    COLOR_MATRIX_STACK_DEPTH: 0x80B2,\n    MAX_COLOR_MATRIX_STACK_DEPTH: 0x80B3,\n    POST_COLOR_MATRIX_RED_SCALE: 0x80B4,\n    POST_COLOR_MATRIX_GREEN_SCALE: 0x80B5,\n    POST_COLOR_MATRIX_BLUE_SCALE: 0x80B6,\n    POST_COLOR_MATRIX_ALPHA_SCALE: 0x80B7,\n    POST_COLOR_MATRIX_RED_BIAS: 0x80B8,\n    POST_COLOR_MATRIX_GREEN_BIAS: 0x80B9,\n    POST_COLOR_MATRIX_BLUE_BIAS: 0x80BA,\n    POST_COLOR_MATRIX_ALPHA_BIAS: 0x80BB,\n    HISTOGRAM: 0x8024,\n    PROXY_HISTOGRAM: 0x8025,\n    HISTOGRAM_WIDTH: 0x8026,\n    HISTOGRAM_FORMAT: 0x8027,\n    HISTOGRAM_RED_SIZE: 0x8028,\n    HISTOGRAM_GREEN_SIZE: 0x8029,\n    HISTOGRAM_BLUE_SIZE: 0x802A,\n    HISTOGRAM_ALPHA_SIZE: 0x802B,\n    HISTOGRAM_LUMINANCE_SIZE: 0x802C,\n    HISTOGRAM_SINK: 0x802D,\n    MINMAX: 0x802E,\n    MINMAX_FORMAT: 0x802F,\n    MINMAX_SINK: 0x8030,\n    TABLE_TOO_LARGE: 0x8031,\n    BLEND_EQUATION: 0x8009,\n    MIN: 0x8007,\n    MAX: 0x8008,\n    FUNC_ADD: 0x8006,\n    FUNC_SUBTRACT: 0x800A,\n    FUNC_REVERSE_SUBTRACT: 0x800B,\n    BLEND_COLOR: 0x8005,\n    TEXTURE0: 0x84C0,\n    TEXTURE1: 0x84C1,\n    TEXTURE2: 0x84C2,\n    TEXTURE3: 0x84C3,\n    TEXTURE4: 0x84C4,\n    TEXTURE5: 0x84C5,\n    TEXTURE6: 0x84C6,\n    TEXTURE7: 0x84C7,\n    TEXTURE8: 0x84C8,\n    TEXTURE9: 0x84C9,\n    TEXTURE10: 0x84CA,\n    TEXTURE11: 0x84CB,\n    TEXTURE12: 0x84CC,\n    TEXTURE13: 0x84CD,\n    TEXTURE14: 0x84CE,\n    TEXTURE15: 0x84CF,\n    TEXTURE16: 0x84D0,\n    TEXTURE17: 0x84D1,\n    TEXTURE18: 0x84D2,\n    TEXTURE19: 0x84D3,\n    TEXTURE20: 0x84D4,\n    TEXTURE21: 0x84D5,\n    TEXTURE22: 0x84D6,\n    TEXTURE23: 0x84D7,\n    TEXTURE24: 0x84D8,\n    TEXTURE25: 0x84D9,\n    TEXTURE26: 0x84DA,\n    TEXTURE27: 0x84DB,\n    TEXTURE28: 0x84DC,\n    TEXTURE29: 0x84DD,\n    TEXTURE30: 0x84DE,\n    TEXTURE31: 0x84DF,\n    ACTIVE_TEXTURE: 0x84E0,\n    CLIENT_ACTIVE_TEXTURE: 0x84E1,\n    MAX_TEXTURE_UNITS: 0x84E2,\n    NORMAL_MAP: 0x8511,\n    REFLECTION_MAP: 0x8512,\n    TEXTURE_CUBE_MAP: 0x8513,\n    TEXTURE_BINDING_CUBE_MAP: 0x8514,\n    TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,\n    TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,\n    TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,\n    TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A,\n    PROXY_TEXTURE_CUBE_MAP: 0x851B,\n    MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C,\n    COMPRESSED_ALPHA: 0x84E9,\n    COMPRESSED_LUMINANCE: 0x84EA,\n    COMPRESSED_LUMINANCE_ALPHA: 0x84EB,\n    COMPRESSED_INTENSITY: 0x84EC,\n    COMPRESSED_RGB: 0x84ED,\n    COMPRESSED_RGBA: 0x84EE,\n    TEXTURE_COMPRESSION_HINT: 0x84EF,\n    TEXTURE_COMPRESSED_IMAGE_SIZE: 0x86A0,\n    TEXTURE_COMPRESSED: 0x86A1,\n    NUM_COMPRESSED_TEXTURE_FORMATS: 0x86A2,\n    COMPRESSED_TEXTURE_FORMATS: 0x86A3,\n    MULTISAMPLE: 0x809D,\n    SAMPLE_ALPHA_TO_COVERAGE: 0x809E,\n    SAMPLE_ALPHA_TO_ONE: 0x809F,\n    SAMPLE_COVERAGE: 0x80A0,\n    SAMPLE_BUFFERS: 0x80A8,\n    SAMPLES: 0x80A9,\n    SAMPLE_COVERAGE_VALUE: 0x80AA,\n    SAMPLE_COVERAGE_INVERT: 0x80AB,\n    MULTISAMPLE_BIT: 0x20000000,\n    TRANSPOSE_MODELVIEW_MATRIX: 0x84E3,\n    TRANSPOSE_PROJECTION_MATRIX: 0x84E4,\n    TRANSPOSE_TEXTURE_MATRIX: 0x84E5,\n    TRANSPOSE_COLOR_MATRIX: 0x84E6,\n    COMBINE: 0x8570,\n    COMBINE_RGB: 0x8571,\n    COMBINE_ALPHA: 0x8572,\n    SOURCE0_RGB: 0x8580,\n    SOURCE1_RGB: 0x8581,\n    SOURCE2_RGB: 0x8582,\n    SOURCE0_ALPHA: 0x8588,\n    SOURCE1_ALPHA: 0x8589,\n    SOURCE2_ALPHA: 0x858A,\n    OPERAND0_RGB: 0x8590,\n    OPERAND1_RGB: 0x8591,\n    OPERAND2_RGB: 0x8592,\n    OPERAND0_ALPHA: 0x8598,\n    OPERAND1_ALPHA: 0x8599,\n    OPERAND2_ALPHA: 0x859A,\n    RGB_SCALE: 0x8573,\n    ADD_SIGNED: 0x8574,\n    INTERPOLATE: 0x8575,\n    SUBTRACT: 0x84E7,\n    CONSTANT: 0x8576,\n    PRIMARY_COLOR: 0x8577,\n    PREVIOUS: 0x8578,\n    DOT3_RGB: 0x86AE,\n    DOT3_RGBA: 0x86AF,\n    CLAMP_TO_BORDER: 0x812D,\n    TEXTURE0_ARB: 0x84C0,\n    TEXTURE1_ARB: 0x84C1,\n    TEXTURE2_ARB: 0x84C2,\n    TEXTURE3_ARB: 0x84C3,\n    TEXTURE4_ARB: 0x84C4,\n    TEXTURE5_ARB: 0x84C5,\n    TEXTURE6_ARB: 0x84C6,\n    TEXTURE7_ARB: 0x84C7,\n    TEXTURE8_ARB: 0x84C8,\n    TEXTURE9_ARB: 0x84C9,\n    TEXTURE10_ARB: 0x84CA,\n    TEXTURE11_ARB: 0x84CB,\n    TEXTURE12_ARB: 0x84CC,\n    TEXTURE13_ARB: 0x84CD,\n    TEXTURE14_ARB: 0x84CE,\n    TEXTURE15_ARB: 0x84CF,\n    TEXTURE16_ARB: 0x84D0,\n    TEXTURE17_ARB: 0x84D1,\n    TEXTURE18_ARB: 0x84D2,\n    TEXTURE19_ARB: 0x84D3,\n    TEXTURE20_ARB: 0x84D4,\n    TEXTURE21_ARB: 0x84D5,\n    TEXTURE22_ARB: 0x84D6,\n    TEXTURE23_ARB: 0x84D7,\n    TEXTURE24_ARB: 0x84D8,\n    TEXTURE25_ARB: 0x84D9,\n    TEXTURE26_ARB: 0x84DA,\n    TEXTURE27_ARB: 0x84DB,\n    TEXTURE28_ARB: 0x84DC,\n    TEXTURE29_ARB: 0x84DD,\n    TEXTURE30_ARB: 0x84DE,\n    TEXTURE31_ARB: 0x84DF,\n    ACTIVE_TEXTURE_ARB: 0x84E0,\n    CLIENT_ACTIVE_TEXTURE_ARB: 0x84E1,\n    MAX_TEXTURE_UNITS_ARB: 0x84E2,\n    DEBUG_OBJECT_MESA: 0x8759,\n    DEBUG_PRINT_MESA: 0x875A,\n    DEBUG_ASSERT_MESA: 0x875B,\n    DEPTH_STENCIL_MESA: 0x8750,\n    UNSIGNED_INT_24_8_MESA: 0x8751,\n    UNSIGNED_INT_8_24_REV_MESA: 0x8752,\n    UNSIGNED_SHORT_15_1_MESA: 0x8753,\n    UNSIGNED_SHORT_1_15_REV_MESA: 0x8754,\n    FRAGMENT_PROGRAM_POSITION_MESA: 0x8bb0,\n    FRAGMENT_PROGRAM_CALLBACK_MESA: 0x8bb1,\n    FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA: 0x8bb2,\n    FRAGMENT_PROGRAM_CALLBACK_DATA_MESA: 0x8bb3,\n    VERTEX_PROGRAM_POSITION_MESA: 0x8bb4,\n    VERTEX_PROGRAM_CALLBACK_MESA: 0x8bb5,\n    VERTEX_PROGRAM_CALLBACK_FUNC_MESA: 0x8bb6,\n    VERTEX_PROGRAM_CALLBACK_DATA_MESA: 0x8bb7,\n    TEXTURE_1D_ARRAY_EXT: 0x8C18,\n    PROXY_TEXTURE_1D_ARRAY_EXT: 0x8C19,\n    TEXTURE_2D_ARRAY_EXT: 0x8C1A,\n    PROXY_TEXTURE_2D_ARRAY_EXT: 0x8C1B,\n    TEXTURE_BINDING_1D_ARRAY_EXT: 0x8C1C,\n    TEXTURE_BINDING_2D_ARRAY_EXT: 0x8C1D,\n    MAX_ARRAY_TEXTURE_LAYERS_EXT: 0x88FF,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT: 0x8CD4,\n    ALPHA_BLEND_EQUATION_ATI: 0x883D\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/glx.js":"/*\n  second extension to try\n  links to get started:\n\n  http://cgit.freedesktop.org/xcb/proto/tree/src/glx.xml?id=HEAD\n  http://cgit.freedesktop.org/mesa/mesa/tree/src/glx\n  http://cgit.freedesktop.org/mesa/mesa/tree/src/glx/indirect.c\n\n  http://www.opengl.org/wiki/Tutorial:_OpenGL_3.0_Context_Creation_(GLX)\n\n  https://github.com/xderoche/J11/blob/master/src/gnu/x11/extension/glx/GL.java\n\n\n*/\nvar x11 = require('..');\n// TODO: move to templates\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('GLX', function(err, ext) {\n        var constants = require('./glxconstants');\n        for (var i in constants)\n            ext[i] = constants[i];\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.QueryVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 7, 3, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.QueryServerString = function(screen, name, callback) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 19, 3, screen, name]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var len = buf.unpack('xxxxL')[0];\n                    return buf.toString().substring(24, 24+len*4);\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.CreateGLXPixmap = function(screen, visual, pixmap, glxpixmap) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLLL', [ext.majorOpcode, 13, 5, screen, visual, pixmap, glxpixmap]);\n\n            console.log('CreateGlxPix', X.seq_num);\n            console.log(ext.majorOpcode, 13, 5, screen, visual, pixmap, glxpixmap);\n            console.trace();\n\n\n            X.pack_stream.flush();\n        }\n\n        ext.QueryExtensionsString = function(screen, callback) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 18, 2, screen]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var len = buf.unpack('xxxxL')[0];\n                    return buf.toString().substring(24, 24+len*4);\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        // see __glXInitializeVisualConfigFromTags in mesa/src/glx/glxext.c\n        //\n        ext.GetVisualConfigs = function(screen, callback) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 14, 2, screen]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    var numConfigs = res[0];\n                    var numProps = res[1];\n                    var configs = new Array(numConfigs);\n                    var i,j;\n                    for (i=0; i < numConfigs; ++i) {\n                        var props = {}; //new Array(numProps);\n                        var names = 'visualID visualType rgbMode redBits greenBits blueBits alphaBits accumRedBits accumGreen accumBlueBits accumAlphaBits doubleBufferMode stereoMode rgbBits depthBits stencilBits numAuxBuffers level'.split(' ');\n                        for (var j=0; j < 18 && j < numProps; ++j) {\n                            props[names[j]] = buf.unpack('L', 24+(i*numProps +j)*4)[0];\n                        }\n                        // read tag + property\n                        configs[i] = props;\n                    }\n\n                    return configs;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.GetFBConfigs = function(screen, callback) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 21, 2, screen]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    var numConfigs = res[0];\n                    var numProps = res[1];\n                    var configs = new Array(numConfigs);\n                    var i,j;\n                    for (i=0; i < numConfigs; ++i) {\n                        var props = new Array(numProps);\n                        for (var j=0; j < numProps; ++j) {\n                            props[j] = buf.unpack('LL', 24+(i*numProps +j)*8);\n                        }\n                        configs[i] = props;\n                    }\n                    return configs;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.CreateContext = function(ctx, visual, screen, shareListCtx, isDirect)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLLLCxxx', [ext.majorOpcode, 3, 6, ctx, visual, screen, shareListCtx, isDirect]);\n            X.pack_stream.flush();\n        }\n\n        ext.SwapBuffers = function(ctx, drawable)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 11, 3, ctx, drawable]);\n            X.pack_stream.flush();\n        }\n\n        ext.NewList = function(ctx, list, mode)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLL', [ext.majorOpcode, 101, 4, ctx, list, mode]);\n            X.pack_stream.flush();\n        }\n\n        ext.EndList = function(ctx)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 102, 2, ctx]);\n            X.pack_stream.flush();\n        }\n\n        ext.GenLists = function(ctx, count, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 104, 3, ctx, count]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return buf.unpack('L')[0];\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.GenTextures = function(ctx, count, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 145, 3, ctx, count]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var format = Buffer(count);\n                    format.fill('L');\n                    return buf.unpack('xxxxxxxxxxxxxxxxxxxxxxxx' + format.toString());\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.IsTexture = function(ctx, texture, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 146, 3, ctx, texture]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return buf.unpack('CCCCCCCCCCCCCCCCCCCCCCCCCC');\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.MakeCurrent = function(drawable, ctx, oldctx, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLLL', [ext.majorOpcode, 5, 4, drawable, ctx, oldctx]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return buf.unpack('L')[0];\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.Finish = function(ctx, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 108, 2, ctx]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.Render = function(ctx, data) {\n            X.seq_num++;\n            var length = 0;\n            if (Buffer.isBuffer(data))\n                length = 2+data.length/4;\n            else if (Array.isArray(data)) {\n                length = 2;\n                for (var i=0; i < data.length; ++i)\n                    length += data[i].length/4;\n            }\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 1, length, ctx]);\n            if (Buffer.isBuffer(data))\n                X.pack_stream.write_queue.push(data);\n            else if (Array.isArray(data))\n                for (var i=0; i < data.length; ++i)\n                    X.pack_stream.write_queue.push(data[i]);\n            else\n                throw new Error('invalid data, expected buffer or buffers array', data);\n            X.pack_stream.flush();\n        }\n\n        ext.VendorPrivate = function(ctx, code, data) {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 16, 3+data.length/4, code, ctx]);\n            X.pack_stream.write_queue.push(data);\n            X.pack_stream.flush();\n        }\n\n        // 1330 - X_GLXvop_BindTexImageEXT\n        // 1331 - X_GLXvop_ReleaseTexImageEXT\n        ext.BindTexImage = function(ctx, drawable, buffer, attribs) {\n           if (!attribs)\n             attribs = [];\n           var data = new Buffer(12 + attribs.length*4);\n           data.writeUInt32LE(drawable, 0);\n           data.writeUInt32LE(buffer, 4);\n           data.writeUInt32LE(attribs.length, 8);\n           for (var i=0; i < attribs.length; ++i)\n             data.writeUint32LE(attribs.length, 12+i*4);\n           ext.VendorPrivate(ctx, 1330, data);\n        }\n\n        ext.ReleaseTexImage = function(ctx, drawable, buffer) {\n           var data = new Buffer(8);\n           data.writeUint32LE(drawable, 0);\n           data.writeUint32LE(buffer, 4);\n           ext.VendorPrivate(ctx, 1331, data);\n        }\n\n        // VendorPrivateWithReply - opcode 17\n\n        ext.RenderLarge = function(ctx, requestNum, requestTotal, data) {\n          X.seq_num++;\n\n          //var data = Buffer.concat(data);\n          var padLength = 4 - data.length % 4;\n          if (padLength == 4)\n            padLength = 0;\n          var length = 4 + (data.length+padLength) / 4;\n          X.pack_stream.pack('CCSLSSL', [ext.majorOpcode, 2, length, ctx, requestNum, requestTotal, data.length]);\n\n          X.pack_stream.write_queue.push(data);\n          var pad = new Buffer(padLength);\n          pad.fill(0);\n          X.pack_stream.write_queue.push(pad);\n          X.pack_stream.flush();\n        }\n\n        ext.renderPipeline = function(ctx) {\n            return require('./glxrender')(this, ctx);\n        }\n\n\tvar errors = [\n\t  \"context\",\n\t  \"contect state\",\n\t  \"drawable\",\n\t  \"pixmap\",\n\t  \"context tag\",\n\t  \"current window\",\n\t  \"Render request\",\n\t  \"RenderLarge request\",\n\t  \"(unsupported) VendorPrivate request\",\n\t  \"FB config\",\n\t  \"pbuffer\",\n\t  \"current drawable\",\n\t  \"window\"\n        ];\n\n\terrors.forEach(function(message, code) {\n  \t  X.errorParsers[ext.firstError + code] = function(err) {\n\t    err.message = \"GLX: Bad \" + message;\n\t  };\n\t});\n\n        callback(null, ext);\n    });\n}\n\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/glxrender.js":"// see http://cgit.freedesktop.org/mesa/mesa/tree/src/mapi/glapi/gen/gl_API.xml\n\nvar constants = require('./glxconstants');\n\nvar MAX_SMALL_RENDER=65536-16;\n\nmodule.exports = function(GLX, ctx) {\n    buffers = [];\n    var currentLength = 0;\n\n    function commandBuffer(opcode, len) {\n        if (currentLength + len > MAX_SMALL_RENDER) {\n            render();\n        }\n        if (len > MAX_SMALL_RENDER)\n            throw Error('Buffer too big. Make sure you are using RenderLarge for large commands');\n\n        currentLength += len;\n        var res = Buffer(len);\n        res.writeUInt16LE(len, 0);\n        res.writeUInt16LE(opcode, 2);\n        return res;\n    }\n\n    function serialize0(opcode) {\n        buffers.push(commandBuffer(opcode, 4));\n    }\n\n    function serialize3fv(opcode, c1, c2, c3) {\n        var res = commandBuffer(opcode, 16);\n        res.writeFloatLE(c1, 4);\n        res.writeFloatLE(c2, 8);\n        res.writeFloatLE(c3, 12);\n        buffers.push(res);\n    }\n\n    function serialize4fv(opcode, c1, c2, c3, c4) {\n        var res = commandBuffer(opcode, 20);\n        res.writeFloatLE(c1, 4);\n        res.writeFloatLE(c2, 8);\n        res.writeFloatLE(c3, 12);\n        res.writeFloatLE(c4, 16);\n        buffers.push(res);\n    }\n\n    function serialize4i(opcode, c1, c2, c3, c4) {\n        var res = commandBuffer(opcode, 20);\n        res.writeInt32LE(c1, 4);\n        res.writeInt32LE(c2, 8);\n        res.writeInt32LE(c3, 12);\n        res.writeInt32LE(c4, 16);\n        buffers.push(res);\n    }\n\n    function serialize6d(opcode, d1, d2, d3, d4, d5, d6)\n    {\n        var res = commandBuffer(opcode, 52);\n        res.writeDoubleLE(d1, 4);\n        res.writeDoubleLE(d2, 12);\n        res.writeDoubleLE(d3, 20);\n        res.writeDoubleLE(d4, 28);\n        res.writeDoubleLE(d5, 36);\n        res.writeDoubleLE(d6, 44);\n        buffers.push(res);\n    };\n\n    function serialize2i(opcode, value1, value2) {\n       var res = commandBuffer(opcode, 12);\n        res.writeUInt32LE(value1, 4);\n        res.writeUInt32LE(value2, 8);\n        buffers.push(res);\n    }\n\n    function serialize1i(opcode, value) {\n       var res = commandBuffer(opcode, 8);\n        res.writeUInt32LE(value, 4);\n        buffers.push(res);\n    }\n\n    function serialize1f(opcode, value) {\n       var res = commandBuffer(opcode, 8);\n        res.writeFloatLE(value, 4);\n        buffers.push(res);\n    }\n\n    function serialize2f(opcode, f1, f2) {\n       var res = commandBuffer(opcode, 12);\n        res.writeFloatLE(f1, 4);\n        res.writeFloatLE(f2, 8);\n        buffers.push(res);\n    }\n\n    function serialize2i(opcode, i1, i2) {\n       var res = commandBuffer(opcode, 12);\n        res.writeUInt32LE(i1, 4);\n        res.writeUInt32LE(i2, 8);\n        buffers.push(res);\n    }\n\n    function serialize3i(opcode, i1, i2, i3) {\n       var res = commandBuffer(opcode, 16);\n        res.writeUInt32LE(i1, 4);\n        res.writeUInt32LE(i2, 8);\n        res.writeUInt32LE(i3, 12);\n        buffers.push(res);\n    }\n\n    function serialize2i1f(opcode, i1, i2, f1) {\n       var res = commandBuffer(opcode, 16);\n        res.writeUInt32LE(i1, 4);\n        res.writeUInt32LE(i2, 8);\n        res.writeFloatLE(f1, 12);\n        buffers.push(res);\n    }\n\n    function serialize2ifv(opcode, i1, i2, fv) {\n       var res = commandBuffer(opcode, 12 + fv.length*4);\n        res.writeUInt32LE(i1, 4);\n        res.writeUInt32LE(i2, 8);\n        for (var i=0; i < fv.length; ++i)\n          res.writeFloatLE(fv[i], 12+i*4);\n        buffers.push(res);\n    }\n\n    function serialize2i4f(opcode, i1, i2, f1, f2, f3, f4) {\n       var res = commandBuffer(opcode, 28);\n        res.writeUInt32LE(i1, 4);\n        res.writeUInt32LE(i2, 8);\n        res.writeFloatLE(f1, 12);\n        res.writeFloatLE(f2, 16);\n        res.writeFloatLE(f3, 20);\n        res.writeFloatLE(f4, 24);\n        buffers.push(res);\n    }\n\n    function render(ctxLocal) {\n\n        if (!ctxLocal) // ctxLocal overrides ctx passed during creation of renderContext\n            ctxLocal = ctx;\n\n        if (buffers.length == 0) {\n          buffers = [];\n          currentLength = 0;\n          return;\n        }\n\n        GLX.Render(ctxLocal, buffers);\n        buffers = [];\n        currentLength = 0;\n    }\n\n    var renderContext =  {\n        Render: render,\n        Begin: function(what) {\n            serialize1i(4, what);\n        },\n        End: function() {\n            serialize0(23);\n        },\n        Ortho: function(left, right, bottom, top, znear, zfar) {\n            serialize6d(182, left, right, bottom, top, znear, zfar);\n        },\n        Frustum: function(left, right, bottom, top, znear, zfar) {\n            serialize6d(182, left, right, bottom, top, znear, zfar);\n        },\n        PopMatrix: function() {\n            serialize0(183);\n\n        },\n        PushMatrix: function() {\n            serialize0(184);\n        },\n        LoadIdentity: function() {\n            serialize0(176);\n        },\n        Rotatef: function(a, x, y, z) {\n            serialize4fv(186, a, x, y, z);\n        },\n        CallList: function(list) {\n            serialize1i(1, list);\n        },\n        Viewport: function(x, y, w, h) {\n            serialize4i(191, x, y, w, h); // TODO: x,y - signed, w,h - unsigned (currently all 4 unsigned)\n        },\n        Vertex3f: function(x, y, z) {\n            serialize3fv(70, x, y, z);\n        },\n        Vertex3fv: function(v) {\n            serialize3fv(70, v[0], v[1], v[2]);\n        },\n        Color3f: function(r, g, b) {\n            serialize3fv(8, r, g, b);\n        },\n        Normal3f: function(x, y, z) {\n            serialize3fv(30, x, y, z);\n        },\n        Normal3fv: function(v) {\n            serialize3fv(70, v[0], v[1], v[2]);\n        },\n        Color4f: function(r, g, b, a) {\n            serialize4fv(16, r, g, b, a);\n        },\n        Scalef: function(x, y, z) {\n            serialize3fv(188, x, y, z);\n        },\n        Translatef: function(x, y, z) {\n           serialize3fv(190, x, y, z);\n        },\n        ClearColor: function(r, g, b, a) {\n            serialize4fv(0x82, r, g, b, a);\n        },\n        MatrixMode: function(mode) {\n            serialize1i(179, mode);\n        },\n        Enable: function(value) {\n            serialize1i(139, value);\n        },\n        Lightfv: function(light, name, p1, p2, p3, p4) {\n            if (p1.length)\n                serialize2i4f(87, light, name, p1[0], p1[1], p1[2], p1[3]);\n            else\n                serialize2i4f(87, light, name, p1, p2, p3, p4);\n        },\n        Materialfv: function(light, name, p1, p2, p3, p4) {\n            if (p1.length)\n                serialize2i4f(97, light, name, p1[0], p1[1], p1[2], p1[3]);\n            else\n                serialize2i4f(97, light, name, p1, p2, p3, p4);\n        },\n        Clear: function(mask) {\n            serialize1i(0x7f, mask);\n        },\n        ShadeModel: function(model) {\n            serialize1i(104, model);\n        },\n        BlendFunc: function(sfactor, dfactor) {\n            serialize2i(160, sfactor, dfactor);\n        },\n        PointSize: function(r) {\n            serialize1f(100, r);\n        },\n        Hint: function(target, mode) {\n            serialize2i(85, target, mode);\n        },\n        BindTexture: function(target, texture) {\n           serialize2i(4117, target, texture);\n        },\n        TexEnvf: function(target, pname, param) {\n            serialize2i1f(112, target, pname, param);\n        },\n        TexParameterf: function(target, pname, param) {\n            serialize2i1f(105, target, pname, param);\n        },\n        TexParameterfv: function(target, pname, param) {\n            serialize2ifv(106, target, pname, param);\n        },\n        TexParameteri: function(target, pname, param) {\n            serialize3i(107, target, pname, param);\n        },\n        TexImage2D: function(target, level, internalFormat, width, height, border, format, type, data) {\n\n          render();\n\n          var typeSize = [];\n          typeSize[constants.FLOAT] = 4;\n          typeSize[constants.BYTE] = 1;\n          typeSize[constants.UNSIGNED_BYTE] = 1;\n\n          var res = new Buffer(60 + data.length*typeSize[type]);\n          res.writeUInt32LE(res.length, 0);\n          res.writeUInt32LE(110, 4);\n\n          res[8] = 0; // swapbytes\n          res[9] = 0; // lsbfirst\n          res.writeUInt16LE(0, 10);   // unused \n\n\t/*\n\tdefaults: (from http://stackoverflow.com/questions/21563590/glteximage2d-protocol-arguments?noredirect=1#comment32577251_21563590 )\n\n\tGL_UNPACK_SWAP_BYTES        boolean   false           true or false\n\tGL_UNPACK_LSB_FIRST         boolean   false           true or false\n\tGL_UNPACK_ROW_LENGTH        integer   0               [0,oo)\n\tGL_UNPACK_SKIP_ROWS         integer   0               [0,oo)\n\tGL_UNPACK_SKIP_PIXELS       integer   0               [0,oo)\n\tGL_UNPACK_ALIGNMENT         integer   4               1, 2, 4, or 8\n\n\t*/\n\n          res.writeUInt32LE(0, 12);   // rowlength\n          res.writeUInt32LE(0, 16);  // skiprows\n          res.writeUInt32LE(0, 20);  // skippixels\n          res.writeUInt32LE(4, 24);  // alignment\n\n          res.writeUInt32LE(target, 28);\n          res.writeUInt32LE(level, 32);\n          res.writeUInt32LE(internalFormat, 36);\n          res.writeUInt32LE(width, 40);\n          res.writeUInt32LE(height, 44);\n          res.writeUInt32LE(border, 48);\n          res.writeUInt32LE(format, 52);\n          res.writeUInt32LE(type, 56);\n\n          switch(type) {\n          case constants.FLOAT:\n            for (var i=0; i < data.length; ++i)\n              res.writeFloatLE(data[i], 60+i*typeSize[type]);\n            break;\n          case constants.BYTE:\n          case constants.UNSIGNED_BYTE:\n            for (var i=0; i < data.length; ++i)\n              res[60+i] = data[i];\n            break;\n          default:\n            throw new Error('unsupported texture type:' + type);\n          }\n\n          // bake sure buffer for glxRender request is emptied first \n          render();\n          \n          var dataLen = res.length;\n          var maxSize = 262124;\n          var totalRequests = 1 + parseInt(dataLen / maxSize) - 1;\n          if (dataLen % maxSize)\n            totalRequests++;\n\n          // for some reason RenderLarge does not like everything to be sent in one go\n          // add one extra buffer request for small requests\n          if (dataLen < maxSize) {\n            GLX.RenderLarge(ctx, 1, 2, res);\n            GLX.RenderLarge(ctx, 2, 2, Buffer(0));\n            return;\n          }\n       \n          var pos = 0;\n          var reqNum = 1;\n          while(dataLen > 0) {\n            if (dataLen < maxSize) {\n              GLX.RenderLarge(ctx, reqNum, totalRequests, res.slice(pos));\n              break;\n            } else {\n              GLX.RenderLarge(ctx, reqNum, totalRequests, res.slice(pos, pos + maxSize));\n              pos += maxSize;\n              dataLen -= maxSize;\n              reqNum++;\n            }\n          }\n          \n        },\n     \n        ProgramString: function(target, format, src) {\n          serialize3i(target, format, src);\n          buffers.push(Buffer(src));\n        },\n\n        BindProgram: function(target, program) {\n          serialize2i(target, format, src);\n        },\n\n        \n\n        TexCoord2f: function(x, y) {\n            serialize2f(54, x, y);\n        }\n    };\n\n    // import all constants\n    for (var c in constants)\n        renderContext[c] = constants[c];\n\n    // bind some glx functions\n    'NewList EndList GenLists GenTextures IsTexture SwapBuffers Finish'.split(' ').forEach(function(name) {\n        // todo: small camelCase ? to be consistent with webgl api\n        //renderContext[name] = GLX[name].bind(GLX, ctx);\n\n        // flush render buffer before glx requests\n        renderContext[name] = function(p1, p2, p3, p4, p5, p6, p7, p8) {\n            render();\n            GLX[name](ctx, p1, p2, p3, p4, p5, p6, p7, p8);\n        }\n    });\n\n    return renderContext;\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/randr.js":"// http://www.x.org/releases/X11R7.6/doc/randrproto/randrproto.txt\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('RANDR', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        //ext.ReportLevel\t= {\n        //};\n\n        ext.QueryVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 3, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return res;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        },\n\n        ext.events = {\n            RRScreenChangeNotify: 0\n        },\n\n        ext.NotifyMask = {\n            ScreenChange: 1,\n            CrtcChange: 2,\n            OutputChange: 4,\n            OutputProperty: 8,\n            All: 15\n        };\n\n        ext.Rotation = {\n            Rotate_0: 1,\n            Rotate_90: 2,\n            Rotate_180: 4,\n            Rotate_270: 8,\n            Reflect_X: 16,\n            Reflect_Y: 32\n        };\n\n        ext.ConfigStatus = {\n            Sucess: 0,\n            InvalidConfigTime: 1,\n            InvalidTime: 2,\n            Failed: 3\n        };\n\n        ext.ModeFlag = {\n            HSyncPositive: 1,\n            HSyncNegative: 2,\n            VSyncPositive: 4,\n            VSyncNegative: 8,\n            Interlace: 16,\n            DoubleScan: 32,\n            CSync: 64,\n            CSyncPositive: 128,\n            CSyncNegative: 256,\n            HSkewPresent: 512,\n            BCast: 1024,\n            PixelMultiplex: 2048,\n            DoubleClock: 4096,\n            ClockDivideBy2: 8192\n        }\n\n        ext.SetScreenConfig = function(win, ts, configTs, sizeId, rotation, rate, cb) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLLLSSSS', [ext.majorOpcode, 2, 6, win, ts, configTs, sizeId, rotation, rate, 0]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LLLSSLL');\n                    return {\n                        status : opt,\n                        newTs : res [0],\n                        configTs : res[1],\n                        root : res[2],\n                        subpixelOrder : res[3]\n                    }\n                },\n                function(err, res) {\n                    var err;\n                    if (res.status !== 0) {\n                        err = new Error('SetScreenConfig error');\n                        err.code = res.status;\n                    }\n\n                    cb(err, res);\n                }\n            ];\n\n            X.pack_stream.flush();\n        },\n\n        ext.SelectInput = function(win, mask)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSLSS', [ext.majorOpcode, 4, 3, win, mask, 0]);\n            X.pack_stream.flush();\n        },\n\n        ext.GetScreenInfo = function(win, cb) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 5, 2, win]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var i, j;\n                    var res = buf.unpack('LLLSSSSSS');\n                    var info = {\n                        rotations : opt,\n                        root : res [0],\n                        timestamp : res[1],\n                        config_timestamp : res[2],\n                        sizeID : res[4],\n                        rotation : res[5],\n                        rate : res[6],\n                        rates: []\n                    };\n\n                    var nSizes = res[3];\n                    var nRates = res[7];\n\n                    var screens_len = nSizes << 2;\n                    var format = Array(screens_len + 1).join('S');\n                    res = buf.unpack(format, 24);\n                    info.screens = [];\n                    for (i = 0; i < screens_len; i += 4) {\n                        info.screens.push({\n                            px_width : res[i],\n                            px_height : res[i + 1],\n                            mm_width : res[i + 2],\n                            mm_height : res[i + 3]\n                        });\n                    }\n\n                    format = Array(nRates + 1).join('S');\n                    info.rates = buf.unpack(format, 24 + screens_len * 2);\n                    return info;\n                },\n                cb\n            ];\n\n            X.pack_stream.flush();\n        },\n\n        ext.GetScreenResources = function(win, cb)\n        {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 8, 2, win]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var i;\n                    var pos = 0;\n                    var res = buf.unpack('LLSSSSxxxxxxxx');\n                    var resources = {\n                        timestamp : res[0],\n                        config_timestamp : res[1],\n                        modeinfos : []\n                    };\n\n                    pos += 24;\n                    var format = Array(res[2] + 1).join('L');\n                    resources.crtcs = buf.unpack(format, pos);\n                    pos +=  res[2] << 2;\n                    format = Array(res[3] + 1).join('L');\n                    resources.outputs = buf.unpack(format, pos);\n                    pos +=  res[3] << 2;\n                    format = Array(res[4] + 1).join('LSSLSSSSSSSSL');\n                    res_modes = buf.unpack(format, pos);\n                    pos +=  res[4] << 5;\n                    for (i = 0; i < res[4]; i+= 13) {\n                        resources.modeinfos.push({\n                            id : res_modes[i + 0],\n                            width : res_modes[i + 1],\n                            height : res_modes[i + 2],\n                            dot_clock : res_modes[i + 3],\n                            h_sync_start : res_modes[i + 4],\n                            h_sync_end : res_modes[i + 5],\n                            h_total : res_modes[i + 6],\n                            h_skew : res_modes[i + 7],\n                            v_sync_start : res_modes[i + 8],\n                            v_sync_end : res_modes[i + 9],\n                            v_total : res_modes[i + 10],\n                            modeflags : res_modes[i + 12],\n                            name : buf.slice(pos, pos + res_modes[i + 11]).toString()\n                        });\n\n                        pos += res_modes[i + 11];\n                    }\n\n                    return resources;\n                },\n                cb\n            ];\n\n            X.pack_stream.flush();\n        },\n        ext.GetOutputInfo = function(output, ts, cb)\n        {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 9, 3, output, ts ]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var i;\n                    var pos = 0;\n                    var res = buf.unpack('LLLLCCSSSSS');\n                    var info = {\n                        timestamp : res[0],\n                        crtc : res[1],\n                        mm_width : res[2],\n                        mm_height : res[3],\n                        connection : res[4],\n                        subpixelOrder : res[5],\n                        preferredModes: res[8]\n                    };\n\n                    pos += 28;\n                    var format = Array(res[6] + 1).join('L');\n                    info.crtcs = buf.unpack(format, pos);\n                    pos +=  res[6] << 2;\n                    format = Array(res[7] + 1).join('L');\n                    info.modes = buf.unpack(format, pos);\n                    pos +=  res[7] << 2;\n                    format = Array(res[9] + 1).join('L');\n                    info.clones = buf.unpack(format, pos);\n                    pos +=  res[9] << 2;\n                    info.name = buf.slice(pos, pos + res_modes[10]).toString('binary');\n                    return info;\n                },\n                cb\n            ];\n\n            X.pack_stream.flush();\n        },\n        ext.GetCrtcInfo = function(crtc, configTs, cb) {\n            X.seq_num ++;\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 20, 3, crtc, configTs ]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var pos = 0;\n                    var res = buf.unpack('LssSSLSSSS');\n                    var info = {\n                        status : opt,\n                        timestamp : res[0],\n                        x : res[1],\n                        y : res[2],\n                        width : res[3],\n                        height : res[4],\n                        mode : res[5],\n                        rotation : res[6],\n                        rotations : res[7]\n                    };\n\n                    pos += 24;\n                    var format = Array(res[8] + 1).join('L');\n                    info.output = buf.unpack(format, pos);\n                    format = Array(res[9] + 1).join('L');\n                    info.possible = buf.unpack(format, pos);\n                    return info;\n                },\n                cb\n            ];\n\n            X.pack_stream.flush();\n        },\n\n        X.eventParsers[ext.firstEvent + ext.events.RRScreenChangeNotify] = function(type, seq, extra, code, raw)\n        {\n            var event = {};\n            event.raw = raw;\n            event.type = type\n            event.seq = seq;\n            event.rotation = code;\n            var values = raw.unpack('LLLSSSSSS');\n            event.time = extra\n            event.configtime = values[0];\n            event.root = values[1];\n            event.requestWindow = values[2];\n            event.sizeId = values[3];\n            event.subpixelOrder = values[4];\n            event.width = values[5];\n            event.height = values[6];\n            event.physWidth = values[7];\n            event.physHeight = values[8];\n\n            event.name = 'RRScreenChangeNotify';\n            return event;\n        };\n\n\n        ext.QueryVersion(255, 255, function(err, version) {\n          if (err) return callback(err);\n          ext.major_version = version[0];\n          ext.minor_version = version[1];\n          callback(null, ext);\n        });\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/render.js":"var x11 = require('..');\nvar xutil = require('../xutil');\n\n// adding XRender functions manually from\n//     http://cgit.freedesktop.org/xcb/proto/tree/src/render.xml?id=HEAD\n// and http://www.x.org/releases/X11R7.6/doc/renderproto/renderproto.txt\n// TODO: move to templates\nexports.requireExt = function(display, callback)\n{\n\n        var X = display.client;\n        X.QueryExtension('RENDER', function(err, ext) {\n\n            if (!ext.present)\n            {\n                return callback(new Error('extension not available'));\n            }\n\n            ext.QueryVersion = function(clientMaj, clientMin, callback)\n            {\n                X.seq_num++;\n                X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 3, clientMaj, clientMin]);\n                X.replies[X.seq_num] = [\n                    function(buf, opt) {\n                        var res = buf.unpack('LL');\n                        return res;\n                    },\n                    callback\n                ];\n                X.pack_stream.flush();\n            }\n\n            ext.QueryPictFormat = function(callback)\n            {\n                X.pack_stream.pack('CCS', [ext.majorOpcode, 1, 1]);\n                X.seq_num++;\n                X.replies[X.seq_num] = [\n                    function (buf, opt) {\n                        var res = {};\n                        var res1 = buf.unpack('LLLLL');\n                        var num_formats = res1[0];\n                        var num_screens = res1[1];\n                        var num_depths = res1[2];\n                        var num_visuals = res1[3];\n                        var num_subpixel = res1[4];\n                        // formats list:\n                        var offset = 24;\n                        res.formats = [];\n                        for (var i=0; i < num_formats; ++i)\n                        {\n                            var format = {};\n                            var f = buf.unpack('LCCxxSSSSSSSSL', offset);\n                            res.formats.push(f);\n                            offset += 28;\n                        }\n                        return res;\n                    },\n                    callback\n                ];\n                X.pack_stream.flush();\n            }\n\n            ext.QueryFilters = function(callback)\n            {\n                X.pack_stream.pack('CCSL', [ext.majorOpcode, 29, 2, display.screen[0].root]);\n                X.seq_num++;\n                X.replies[X.seq_num] = [\n                    function(buf, opt) {\n                        var h = buf.unpack('LL');\n                        var num_aliases = h[0];\n                        var num_filters = h[1];\n                        var aliases = [];\n                        var offset = 24; // LL + 16 bytes pad\n                        for (var i=0; i < num_aliases; ++i)\n                        {\n                            aliases.push(buf.unpack('S', offset)[0]);\n                            offset+=2;\n                        }\n                        var filters = [];\n                        for (var i=0; i < num_filters; ++i)\n                        {\n                            var len = buf.unpack('C', offset)[0];\n                            //if (!len) break;\n                            offset++;\n                            filters.push(buf.toString('ascii', offset, offset+len));\n                            offset+=len;\n                        }\n                        return [aliases, filters];\n                    },\n                    callback\n                ];\n                X.pack_stream.flush();\n            }\n\n            var valueList = [\n                ['repeat', 'Cxxx'],\n                ['alphaMap', 'L'],\n                ['alphaXOrigin', 'sxx'],\n                ['alphaYOrigin', 'sxx'],\n                ['clipXOrigin', 'sxx'],\n                ['clipYOrigin', 'sxx'],\n                ['clipMask', 'L'],\n                ['graphicsExposures', 'Cxxx'],\n                ['subwindowMode', 'Cxxx'],\n                ['polyEdge', 'Cxxx'],\n                ['polyMode', 'Cxxx'],\n                ['dither', 'L'],\n                ['componentAlpha', 'Cxxx']\n            ];\n\n            var argumentLength = {\n                C: 1,\n                S: 2,\n                s: 2,\n                L: 4,\n                x: 1\n            };\n\n            ext.CreatePicture = function(pid, drawable, pictformat, values)\n            {\n                var mask = 0;\n                var reqLen = 5; // + (values + pad)/4\n                var format = 'CCSLLLL';\n                var params = [ext.majorOpcode, 4, reqLen, pid, drawable, pictformat, mask];\n\n                if (values)\n                {\n                    var valuesLength = 0;\n                    for (var i=0; i < valueList.length; ++i)\n                    {\n                        var name = valueList[i][0];\n                        var val = values[name];\n                        if (val) {\n                            mask |= (1 << i);\n                            params.push(val);\n                            var valueFormat = valueList[i][1];\n                            format += valueFormat;\n                            valuesLength += 4; //argumentLength[valueFormat];\n                        }\n                    }\n                    var pad4 = (valuesLength + 3) >> 2;\n                    var toPad = (pad4 << 2) - valuesLength;\n                    for (var i=0; i < toPad; ++i)\n                        format += 'x';\n                    reqLen += pad4;\n                    params[2] = reqLen;\n                    params[6] = mask;\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.FreePicture = function(pid) {\n              X.pack_stream.pack('CCSL', [ext.majorOpcode, 7, 2, pid]);\n              X.pack_stream.flush();\n              X.seq_num++;\n            };\n\n            function floatToFix(f)\n            {\n                return parseInt(f*65536);\n            }\n\n            function colorToFix(f)\n            {\n              if (f < 0) f = 0;\n              if (f > 1) f = 1;\n              return parseInt(f*65535);\n            }\n\n            ext.SetPictureTransform = function(pid, matrix) {\n              var format = 'CCSLLLLLLLLLL';\n              if (matrix.length !== 9)\n                throw 'Render.SetPictureTransform: incorrect transform matrix. Must be array of 9 numbers';\n              var params = [ext.majorOpcode, 28, 11, pid];\n              for (var i=0; i < 9; ++i) {\n                if (typeof matrix[i] !== 'number')\n                  throw 'Render.SetPictureTransform: matrix element must be a number';\n                params.push(floatToFix(matrix[i]));\n              }\n              X.pack_stream.pack(format, params);\n              X.pack_stream.flush();\n              X.seq_num++;\n            };\n\n            // see example of blur filter here: https://github.com/richoH/rxvt-unicode/blob/master/src/background.C\n            ext.SetPictureFilter = function(pid, name, filterParams)\n            {\n                if (filterParams === 0)\n                  filterParams = [0];\n                if (!filterParams)\n                  filterParams = [];\n                if (!Array.isArray(filterParams))\n                  filterParams = [filterParams];\n\n                var reqLen = 2;\n                var format = 'CCSLSxxp';\n                var params = [ext.majorOpcode, 30, reqLen, pid, name.length, name];\n                reqLen += xutil.padded_length(name.length+3)/4 + filterParams.length;\n\n                if (name == 'nearest' || name == 'bilinear' || name == 'fast' || name == 'good' || name == 'best') {\n                  if (filterParams.length !== 0) {\n                    throw 'Render.SetPictureFilter: \"' + name + '\" - unexpected parameters for filters';\n                  }\n                } else if (name == 'convolution') {\n                   if (filterParams.length < 2 || ((filterParams[0]*filterParams[1] + 2) !== filterParams.length) ) {\n                     throw 'Render.SetPictureFilter: \"convolution\" - incorrect matrix dimensions. Must be flat array [ w, h, elem1, elem2, ... ]';\n                   }\n                   for (var i=0; i < filterParams.length; ++i) {\n                      format += 'L';\n                      params.push(floatToFix(filterParams[i]));\n                   }\n                } else if (name == 'binomial' || name == 'gaussian') {\n                   if (filterParams.length !== 1) {\n                     throw 'Render.SetPictureFilter: \"' + name + '\" - incorrect number of parameters, must be exactly 1 number, instead got: ' + filterParams;\n                   }\n                  format += 'L';\n                  params.push(floatToFix(filterParams[0]));\n                } else {\n                    throw 'Render.SetPictureFilter: unknown filter \"' + name + '\"';\n                }\n                params[2] = reqLen;\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            };\n\n            ext.CreateSolidFill = function(pid, r, g, b, a)\n            {\n                X.pack_stream.pack('CCSLSSSS', [ext.majorOpcode, 33, 4, pid, colorToFix(r), colorToFix(g), colorToFix(b), colorToFix(a)]);\n                X.pack_stream.flush();\n                X.seq_num++;\n            };\n\n            ext.RadialGradient = function(pid, p1, p2, r1, r2, stops)\n            {\n                var reqLen = 9+stops.length*3;  //header + params + 1xStopfix+2xColors\n                var format = 'CCSLLLLLLLL';\n                var params = [ext.majorOpcode, 35, reqLen, pid];\n                params.push(floatToFix(p1[0])); // L\n                params.push(floatToFix(p1[1]));\n                params.push(floatToFix(p2[0]));\n                params.push(floatToFix(p2[1])); // L\n                params.push(floatToFix(r1)); // L\n                params.push(floatToFix(r2)); // L\n                params.push(stops.length);\n\n                // [ [float stopDist, [float r, g, b, a] ], ...]\n                // stop distances\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'L';\n                    // TODO: we know total params length in advance. ? params[index] =\n                    params.push(floatToFix(stops[i][0]))\n                }\n                // colors\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'SSSS';\n                    for (var j=0; j < 4; ++j)\n                        params.push(colorToFix(stops[i][1][j]));\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            };\n\n            ext.LinearGradient = function(pid, p1, p2, stops)\n            {\n                var reqLen = 7+stops.length*3;  //header + params + 1xStopfix+2xColors\n                var format = 'CCSLLLLLL';\n                var params = [ext.majorOpcode, 34, reqLen, pid];\n                params.push(floatToFix(p1[0])); // L\n                params.push(floatToFix(p1[1]));\n                params.push(floatToFix(p2[0]));\n                params.push(floatToFix(p2[1])); // L\n\n                params.push(stops.length);\n\n                // [ [float stopDist, [float r, g, b, a] ], ...]\n                // stop distances\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'L';\n                    // TODO: we know total params length in advance. ? params[index] =\n                    params.push(floatToFix(stops[i][0]))\n                }\n                // colors\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'SSSS';\n                    for (var j=0; j < 4; ++j)\n                        params.push(colorToFix(stops[i][1][j]));\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.ConicalGradient = function(pid, center, angle, stops)\n            {\n                var reqLen = 6+stops.length*3;  //header + params + 1xStopfix+2xColors\n                var format = 'CCSLLLLL';\n                var params = [ext.majorOpcode, 36, reqLen, pid];\n                params.push(floatToFix(center[0])); // L\n                params.push(floatToFix(center[1]));\n                params.push(floatToFix(angle)); // L\n\n                params.push(stops.length);\n\n                // [ [float stopDist, [float r, g, b, a] ], ...]\n                // stop distances\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'L';\n                    // TODO: we know total params length in advance. ? params[index] =\n                    params.push(floatToFix(stops[i][0]))\n                }\n                // colors\n                for (var i=0; i < stops.length; ++i)\n                {\n                    format += 'SSSS';\n                    for (var j=0; j < 4; ++j)\n                        params.push(colorToFix(stops[i][1][j]));\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.FillRectangles = function(op, pid, color, rects)\n            {\n                var reqLen = 5+rects.length/2;\n                var format = 'CCSCxxxLSSSS';\n                var params = [ext.majorOpcode, 26, reqLen, op, pid];\n                for (var j=0; j < 4; ++j)\n                    params.push(colorToFix(color[j]));\n                for (var i=0; i < rects.length; i+=4)\n                {\n                    format += 'ssSS';\n                    params.push(rects[i*4]);\n                    params.push(rects[i*4 + 1]);\n                    params.push(rects[i*4 + 2]);\n                    params.push(rects[i*4 + 3]);\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.Composite = function(op, src, mask, dst, srcX, srcY, maskX, maskY, dstX, dstY, width, height)\n            {\n                X.pack_stream.pack(\n                    'CCSCxxxLLLssssssSS',\n                    [ext.majorOpcode, 8, 9, op, src, mask, dst, srcX, srcY, maskX, maskY, dstX, dstY, width, height]\n                )\n                .flush();\n                X.seq_num++;\n            }\n\n            // note that Trapezoids is considered deprecated by Render extension\n            ext.Trapezoids = function(op, src, srcX, srcY, dst, maskFormat, trapz)\n            {\n                var format = 'CCSCxxxLLLss';\n                var params = [ext.majorOpcode, 10, 6+trapz.length, op, src, dst, maskFormat, srcX, srcY];\n                for (var i=0; i < trapz.length; i++)\n                {\n                    format += 'llllllllll';\n                    for (var j=0; j < 10; ++j)\n                        params.push(floatToFix(trapz[i*10 + j]));\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            };\n\n            ext.AddTraps = function(pic, offX, offY, trapList) {\n              var format = 'CCSLss';\n              var params = [ext.majorOpcode, 32, 3+trapList.length, pic, offX, offY];\n              for (var i=0; i < trapList.length; i++)\n              {\n                format += 'l';\n                params.push(floatToFix(trapList[i]));\n              }\n              X.pack_stream.pack(format, params);\n              X.pack_stream.flush();\n              X.seq_num++;\n            };\n\n            ext.Triangles = function(op, src, srcX, srcY, dst, maskFormat, tris)\n            {\n                var format = 'CCSCxxxLLLss';\n                var params = [ext.majorOpcode, 11, 6+tris.length, op, src, dst, maskFormat, srcX, srcY];\n                for (var i=0; i < tris.length; i+=6)\n                {\n                    format += 'llllll';\n                    //TODO: Array.copy\n                    params.push(floatToFix(tris[i + 0])); // x1\n                    params.push(floatToFix(tris[i + 1])); // y1\n                    params.push(floatToFix(tris[i + 2])); // x2\n                    params.push(floatToFix(tris[i + 3])); // y2\n                    params.push(floatToFix(tris[i + 4])); // x3\n                    params.push(floatToFix(tris[i + 5])); // y3\n                }\n                X.pack_stream.pack(format, params);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.CreateGlyphSet = function(gsid, format) {\n                X.pack_stream.pack('CCSLL', [ext.majorOpcode, 17, 3, gsid, format]);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.ReferenceGlyphSet = function(gsid, existing) {\n                X.pack_stream.pack('CCSLL', [ext.majorOpcode, 18, 3, gsid, existing]);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.FreeGlyphSet = function(gsid) {\n                X.pack_stream.pack('CCSL', [ext.majorOpcode, 19, 2, gsid]);\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            ext.AddGlyphs = function(gsid, glyphs) {\n                var numGlyphs = glyphs.length;\n                var imageBytes = 0;\n                var glyphPaddedLength;\n                var glyphLength;\n                var stride;\n                var glyph;\n                for (var i = 0; i < numGlyphs; i++) {\n                  glyph = glyphs[i];\n                  if (glyph.width % 4 !== 0) {\n                    var stride = (glyph.width+3)&~3;\n                    var res = new Buffer(glyph.height*stride);\n                    res.fill(0);\n                    for (var y=0; y < glyph.height; ++y) {\n                      glyph.image.copy(res, y*stride, y*glyph.width, y*glyph.width + glyph.width);\n                    }\n                    glyph.image = res;\n                    glyph.width = stride;\n                  }\n                  glyphLength = glyphs[i].image.length;\n                  imageBytes += glyphLength;\n                  glyph.offX = glyph.offX / 64;\n                  glyph.offY = glyph.offY / 64;\n                }\n                var len = numGlyphs * 4 + imageBytes/4 + 3;\n                // TODO: check length, use bigReq\n                // X.pack_stream.pack('CCSLL', [ext.majorOpcode, 20, len, gsid, glyphs.length]);\n\n                // BigReq: S + [ length ] replaced with SL + [ 0, length+1 ]\n                X.pack_stream.pack('CCSLLL', [ext.majorOpcode, 20, 0, len+1, gsid, glyphs.length]);\n\n                // glyph ids\n                for (i = 0; i < numGlyphs; i++) {\n                  X.pack_stream.pack('L', [glyphs[i].id]);\n                }\n                // width + heiht + origin xy + advance xy\n                for (i = 0; i < numGlyphs; i++) {\n                  X.pack_stream.pack('SSssss', [glyphs[i].width, glyphs[i].height, -glyphs[i].x, glyphs[i].y, glyphs[i].offX, glyphs[i].offY]);\n                }\n                // image\n                for (i = 0; i < numGlyphs; i++) {\n                  X.pack_stream.write_queue.push(glyphs[i].image);\n                }\n                X.pack_stream.flush();\n                X.seq_num++;\n            }\n\n            //AddGlyphsFromPicture, opcode=21 (not in spec)\n            // FreeGlyps - opcode 22\n            // gsid(L) , glyphs.length (L) + each glyph id (L)\n            //\n\n            // each GlyphEle:\n            // 1 byte - number of glyphs\n            // xxx\n            // int16 deltax, deltay\n            // + list of 8/16/32 byte indexesext.CompositeGlyphs\n            //  OR\n            //  255 + 0 + 0 + glyphsetId / font:\n            //  CxxxssL, [255, 0, 0, glyphable]\n            //\n            //  Each GlyphEle must be padded to 4 byte boundary\n            //\n            // glyphs as input:\n            // [ \"just string (0,0) offset is used\", [ 10, 10, \"string offseted 10,10 from previous pen position\" ], 1234567 ] 1234567 is glypfset id or FONT\n\n\n            // TODO: pre-process input so strings larger than 254 chars are supported\n            // (split them into multiple entries with 0,0 offset)\n\n            var formatFromBits = [,,,,,,,,'C',,,,,,,,'S',,,,,,,,,,,,,,,,'L'];\n            var bufferWriteBits = [,,,,,,,,'writeUInt8',,,,,,,,'writeUInt16LE',,,,,,,,,,,,,,,,'writeUInt32LE'];\n\n            // 8/16/32 bit string + 4-byte pad\n            function wstring(bits, s) {\n              var charLength = bits / 8;\n              var dataLength = s.length*charLength;\n              var res = new Buffer(xutil.padded_length(dataLength));\n              debugger;\n              var write = res[bufferWriteBits[bits]]\n              res.fill(0);\n              for(var i=0; i < s.length; i++)\n                write.call(res, s.charCodeAt(i), i*charLength);\n              return res;\n            }\n\n            var compositeGlyphsOpcodeFromBits = [,,,,,,,,23,,,,,,,,24,,,,,,,,,,,,,,,,25];\n            ext.CompositeGlyphs = function(glyphBits, op, src, dst, maskFormat, gsid, srcX, srcY, glyphs)\n            {\n                var opcode = compositeGlyphsOpcodeFromBits[glyphBits];\n                var charFormat = formatFromBits[glyphBits];\n                var charLength = glyphBits / 8;\n                var length = 7;\n                var glyphs_length_split = [];\n                for (var i=0; i < glyphs.length; ++i) {\n                  var g = glyphs[i];\n                  switch (typeof g) {\n                    case 'string':\n                      length += xutil.padded_length(g.length*charLength)/4 + 2;\n                      break;\n                    case 'object':\n                      length += xutil.padded_length(g[2].length*charLength)/4 + 2;\n                      break;\n                    case 'number': // glyphset id\n                      length += 3;\n                      break;\n                  }\n                }\n                X.pack_stream.pack(\n                    'CCSCxxxLLLLss',\n                    [ext.majorOpcode, opcode, length, op, src, dst, maskFormat, gsid, srcX, srcY]\n                );\n                for (var i=0; i < glyphs.length; ++i) {\n                  var g = glyphs[i];\n                  switch (typeof g) {\n                    case 'string':\n                      X.pack_stream.pack('Cxxxssa', [g.length, 0, 0, wstring(glyphBits, g)]);\n                      break;\n                    case 'object': // array\n                      X.pack_stream.pack('Cxxxssa', [g[2].length, g[0], g[1], wstring(glyphBits, g[2])]);\n                      break;\n                    case 'number': // glyphset id\n                      X.pack_stream.pack('CxxxSSL', [0xff, 0, 0, g]);\n                      break;\n                  }\n                }\n                X.pack_stream.flush();\n                X.seq_num++;\n            };\n\n      ext.CompositeGlyphs8 = function(op, src, dst, maskFormat, gsid, srcX, srcY, glyphs)\n      {\n         return ext.CompositeGlyphs(8, op, src, dst, maskFormat, gsid, srcX, srcY, glyphs);\n      };\n\n      ext.CompositeGlyphs16 = function(op, src, dst, maskFormat, gsid, srcX, srcY, glyphs)\n      {\n         return ext.CompositeGlyphs(16, op, src, dst, maskFormat, gsid, srcX, srcY, glyphs);\n      };\n\n      ext.CompositeGlyphs32 = function(op, src, dst, maskFormat, gsid, srcX, srcY, glyphs)\n      {\n         return ext.CompositeGlyphs(32, op, src, dst, maskFormat, gsid, srcX, srcY, glyphs);\n      };\n\n            // TODO: implement xutil-like code https://github.com/alexer/python-xlib-render/blob/master/xutil.py\n\n            // TODO: name format fields\n            // 0 - id\n            // 1 - type ( direct / ? /)\n            // 2 - depth\n            //\n            // 3 - red shift\n            // 4 - red mask\n            // 5 - green shift\n            // 6 - green mask\n            // 7 - blue shift\n            // 8 - blue mask\n            // 9 - alpha shift\n            // 10 - alpha mask\n\n            // 11 - colormap or none\n\n            ext.QueryPictFormat(function(err, formats) {\n                if (err)\n                    return callback(err);\n                for (var i=0; i < formats.formats.length; ++i) {\n                    var f = formats.formats[i];\n                    if (f[2] == 1 && f[10] == 1)\n                        ext.mono1 = f[0] ;\n                    if (f[2] == 24 && f[3] == 16 && f[5] == 8 && f[7] == 0)\n                        ext.rgb24 = f[0];\n                    // 1, 32, 16, 255, 8, 255, 0, 255, 24, 255, 0\n                    if (f[2] == 32 && f[3] == 16 && f[4] == 255 && f[5] == 8 && f[6] == 255 && f[7] == 0 && f[9] == 24)\n                        ext.rgba32 = f[0] ;\n                    if (f[2] == 8 && f[10] == 255)\n                        ext.a8 = f[0];\n                }\n                callback(null, ext);\n            });\n\n            [\n              \"PICTFORMAT argument does not name a defined PICTFORMAT\",\n              \"PICTURE argument does not name a defined PICTURE\",\n              \"PICTOP argument does not name a defined PICTOP\",\n              \"GLYPHSET argument does not name a defined GLYPHSET\",\n              \"GLYPH argument does not name a defined GLYPH in the glyphset\"\n            ].forEach(function(desc, code) {\n              X.errorParsers[ext.firstError + code] = function(err) {\n                err.message = \"XRender: a value for a \" + desc;\n              };\n            });\n\n            ext.PictOp = {\n              Minimum:    0,\n              Clear:    0,\n              Src:    1,\n              Dst:    2,\n              Over:    3,\n              OverReverse:   4,\n              In:    5,\n              InReverse:    6,\n              Out:    7,\n              OutReverse:    8,\n              Atop:    9,\n              AtopReverse:    10,\n              Xor:    11,\n              Add:    12,\n              Saturate:    13,\n              Maximum:    13,\n\n            /*,\n             * Operators only available in version 0.2,\n             */\n              DisjointMinimum:    0x10,\n              DisjointClear:    0x10,\n              DisjointSrc:    0x11,\n              DisjointDst:    0x12,\n              DisjointOver:    0x13,\n              DisjointOverReverse:    0x14,\n              DisjointIn:    0x15,\n              DisjointInReverse:    0x16,\n              DisjointOut:    0x17,\n              DisjointOutReverse:    0x18,\n              DisjointAtop:    0x19,\n              DisjointAtopReverse:    0x1a,\n              DisjointXor:    0x1b,\n              DisjointMaximum:    0x1b,\n\n              ConjointMinimum:    0x20,\n              ConjointClear:    0x20,\n              ConjointSrc:    0x21,\n              ConjointDst:    0x22,\n              ConjointOver:    0x23,\n              ConjointOverReverse:    0x24,\n              ConjointIn:    0x25,\n              ConjointInReverse:    0x26,\n              ConjointOut:    0x27,\n              ConjointOutReverse:    0x28,\n              ConjointAtop:    0x29,\n              ConjointAtopReverse:    0x2a,\n              ConjointXor:    0x2b,\n              ConjointMaximum:    0x2b,\n\n            /*,\n             * Operators only available in version 0.11,\n             */\n              BlendMinimum :    0x30,\n              Multiply     :    0x30,\n              Screen       :    0x31,\n              Overlay      :    0x32,\n              Darken       :    0x33,\n              Lighten      :    0x34,\n              ColorDodge   :    0x35,\n              ColorBurn    :    0x36,\n              HardLight    :    0x37,\n              SoftLight    :    0x38,\n              Difference   :    0x39,\n              Exclusion    :    0x3a,\n              HSLHue       :    0x3b,\n              HSLSaturation:    0x3c,\n              HSLColor     :    0x3d,\n              HSLLuminosity:    0x3e,\n              BlendMaximum :    0x3e\n            };\n\n          ext.PolyEdge = {\n            Sharp: 0,\n            Smooth: 1\n          };\n\n          ext.PolyMode = {\n            Precise: 0,\n            Imprecise: 1\n          };\n\n          ext.Repeat = {\n            None: 0,\n            Normal: 1,\n            Pad: 2,\n            Reflect: 3\n          };\n\n          ext.Subpixel = {\n            Unknown:       0,\n            HorizontalRGB: 1,\n            HorizontalBGR: 2,\n            VerticalRGB  : 3,\n            VerticalBGR  : 4,\n            None         : 5\n          };\n\n          ext.Filters = {\n            Nearest: 'nearest',\n            Bilinear: 'bilinear',\n            Convolution: 'convolution',\n            Fast: 'fast',\n            Good: 'good',\n            Best: 'best'\n          };\n      });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/screen-saver.js":"// http://www.x.org/releases/X11R7.6/doc/scrnsaverproto/saver.pdf\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('MIT-SCREEN-SAVER', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n\n        ext.QueryVersion = function(clientMaj, clientMin, cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSCCxx', [ext.majorOpcode, 0, 2, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('CC');\n                    return res;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.State = {\n            Off: 0,\n\t    On: 1,\n            Disabled: 2\n        };\n\n        ext.Kind = {\n            Blanked: 0,\n\t    Internal: 1,\n            External: 2\n        };\n\n        ext.QueryInfo = function(drawable, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 1, 2, drawable]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var info = {};\n                    info.state = opt;\n                    var res = buf.unpack('LLLLC');\n                    info.window = res[0];\n                    info.until = res[1];\n                    info.idle = res[2];\n                    info.eventMask = res[3];\n                    info.kind = res[4]\n                    return info;\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.eventMask = {\n            Notify: 1,\n            Cycle: 2\n        };\n\n        ext.SelectInput = function( drawable, eventMask )\n        {\n            X.seq_num++;\n            console.log('CCSLL', [ext.majorOpcode, 2, 3, drawable, eventMask]);\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 2, 3, drawable, eventMask]);\n            X.pack_stream.flush();\n        }\n\n        ext.QueryVersion(1, 1, function(err, vers) {\n            if (err)\n                return callback(err);\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            callback(null, ext);\n        });\n\n        ext.events = {\n            ScreenSaverNotify: 0\n        }\n\n        ext.NotifyState = {\n            Off: 0,\n            On: 1,\n            Cycle: 2\n        }\n\n        X.eventParsers[ext.firstEvent + ext.events.ScreenSaverNotify] = function(type, seq, extra, code, raw)\n        {\n            var event = {};\n            event.state = code;\n            event.seq = seq;\n            event.time = extra;\n            // CCSL = type, code, seq, extra\n            var values = raw.unpack('LLCC');\n            event.root = values[0];\n            event.saverWindow = values[1];\n            event.kind = values[2];\n            event.forced = values[1];\n            event.name = 'ScreenSaverNotify';\n            return event;\n        };\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/shape.js":"// http://www.x.org/releases/X11R7.6/doc/xextproto/shape.pdf\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n        function captureStack()\n        {\n            var err = new Error;\n            //err.name = reqName;\n            Error.captureStackTrace(err, arguments.callee);\n            display.client.seq2stack[display.client.seq_num] = err.stack;\n        }\n\n    var X = display.client;\n    X.QueryExtension('SHAPE', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.Kind = {\n            Bounding: 0,\n            Clip: 1,\n            Input: 2\n        };\n\n        ext.Op = {\n            Set: 0,\n            Union: 1,\n            Intersect: 2,\n            Subtract: 3,\n            Invert: 4\n        };\n\n        ext.Ordering = {\n            Unsorted: 0,\n            YSorted: 1,\n            YXSorted: 2,\n            YXBanded: 3\n        };\n\n        ext.QueryVersion = function(cb)\n        {\n            X.seq_num++;\n//            captureStack();\n            X.pack_stream.pack('CCSLL', [ext.majorOpcode, 0, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SS');\n                    return res;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        // Accepts rectangles as [[x, y, width, height]]\n        ext.Rectangles = function( op, kind, window, x, y, rectangles, ordering /* = Ordering.Unsorted */ )\n        {\n            if (ordering === undefined)\n                ordering = ext.Ordering.Unsorted;\n\n            var length = 4 + rectangles.length * 2;\n\n            X.seq_num++;\n//            captureStack();\n            X.pack_stream.pack('CCSCCCxLss', [ext.majorOpcode, 1, length, op, kind, ordering, window, x, y]);\n            for (var i = 0; i < rectangles.length; ++i) {\n                var r = rectangles[i];\n                X.pack_stream.pack('ssSS', r);\n            }\n            X.pack_stream.flush();\n        }\n\n        ext.Mask = function( op, kind, window, x, y, bitmap )\n        {\n            X.seq_num++;\n//            captureStack();\n            X.pack_stream.pack('CCSCCxxLssL', [ext.majorOpcode, 2, 5, op, kind, window, x, y, bitmap]);\n            X.pack_stream.flush();\n        }\n\n        ext.SelectInput = function( window, enable )\n        {\n            X.seq_num++;\n//            captureStack();\n            X.pack_stream.pack('CCSLCxxx', [ext.majorOpcode, 6, 3, window, enable ]);\n            X.pack_stream.flush();\n        }\n\n        ext.InputSelected = function( window, cb )\n        {\n            X.seq_num++;\n//            captureStack();\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 7, 2, window ]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    return opt;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        callback(null, ext);\n\n        /*\n        ext.QueryVersion(function(err, version) {\n            ext.major = version[0];\n            ext.minor = version[1];\n            callback(null, ext);\n        });\n        */\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/xc-misc.js":"// http://www.x.org/releases/X11R7.6/doc/xcmiscproto/xc-misc.pdf\n\nvar x11 = require('..');\n// TODO: move to templates\n\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('XC-MISC', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.QueryVersion = function(clientMaj, clientMin, cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSSS', [ext.majorOpcode, 0, 2, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('SS');\n                    return res;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.GetXIDRange = function(cb)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCS', [ext.majorOpcode, 1, 1]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('LL');\n                    return {\n                        startId: res[0],\n                        count: res[1]\n                    };\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.GetXIDList = function( count, cb )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSL', [ext.majorOpcode, 2, 2, count]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var numIds = buf.unpack('L')[0];\n                    var res = [];\n                    for (var i = 0; i < numIds; ++i)\n                        res.push(buf.unpack('L', 24+i*4));\n                    return res;\n                },\n                cb\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.QueryVersion(1, 1, function(err, vers) {\n            if (err)\n                return callback(err);\n            ext.major = vers[0];\n            ext.minor = vers[1];\n            callback(null, ext);\n        });\n    });\n}\n","/home/travis/build/npmtest/node-npmtest-x11/node_modules/x11/lib/ext/xtest.js":"// http://www.x.org/releases/X11R7.6/doc/xextproto/xtest.pdf\n\nvar x11 = require('..');\n// TODO: move to templates\nexports.requireExt = function(display, callback)\n{\n    var X = display.client;\n    X.QueryExtension('XTEST', function(err, ext) {\n\n        if (!ext.present)\n            return callback(new Error('extension not available'));\n\n        ext.GetVersion = function(clientMaj, clientMin, callback)\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSCxS', [ext.majorOpcode, 0, 2, clientMaj, clientMin]);\n            X.replies[X.seq_num] = [\n                function(buf, opt) {\n                    var res = buf.unpack('S');\n                    // Major version is in byte 1 of Reply Header\n                    // Minor version is in the body of the reply\n                    return [ opt, res[0] ];\n                },\n                callback\n            ];\n            X.pack_stream.flush();\n        }\n\n        ext.KeyPress = 2;\n        ext.KeyRelease = 3;\n        ext.ButtonPress = 4;\n        ext.ButtonRelease = 5;\n        ext.MotionNotify = 6;\n\n        ext.FakeInput = function( type, keycode, time, wid, x, y )\n        {\n            X.seq_num++;\n            X.pack_stream.pack('CCSCCxxLLxxxxxxxxssxxxxxxxx', [ext.majorOpcode, 2, 9, type, keycode, time, wid, x, y]);\n            X.pack_stream.flush();\n        }\n\n        callback(null, ext);\n    });\n}\n\n"}